{"version":3,"sources":["services/postCrudPoliticas.js","views/components/politicas/EditarPolitica.js"],"names":["API","process","postCrudPoliticas","idPolitica","descripcion","identificador","valor","estado","opcion","id_usuario","token","ApiFinal","ApiWhere","datos","id_politica","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","EditarPolitica","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","form","setValues","handleInput","event","target","name","value","handleSubmit","async","preventDefault","id","api_token","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","placeholder","rows","onChange","defaultValue","type","readOnly"],"mappings":"6KAAA,wCAAMA,EAAG,UAAMC,sCAAN,aAEF,SAASC,EACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAWX,EACXY,EAAW,GAEf,IAAIC,EAAQ,CACVC,YAAaX,EACbC,YAAaA,EACbC,cAAeA,EACfC,MAAOA,EACPS,OAAQR,EACRC,OAAQA,EACRC,WAAYA,GAGK,KAAfN,GAAgC,KAAXK,IACvBI,GAAY,IAAMT,EAAa,IAAMK,GAEvCG,GAAYC,EAEZ,MAAMI,EAAOC,KAAKC,UAAUL,GAC5B,OAAOM,MAAMR,EAAU,CACrBS,OAAQ,OACRC,KAAML,EACNM,QAAS,CACPC,cAAe,UAAYb,EAC3Bc,OAAQ,mBACR,eAAgB,oCAGjBC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMC,GACEA,IAERE,OAAOC,GAAUA,M,iCC5CtB,qIA8LeC,UAxKQ,KACrB,MAAMC,EAAUC,cACVC,EAAWC,eACVC,EAAMC,GAAWC,mBAAS,OAC3B,QAAEC,EAAF,MAAWC,GAAUC,qBAAW,wBAC/BC,EAAMC,GAAWL,oBAAS,IAC1BM,EAAOC,GAAYP,oBAAS,IAC5BQ,EAASC,GAAcT,mBAAS,KAEhCU,EAAMC,GAAaX,mBAAS,CACjCjC,YAAa6B,EAAS7B,YACtBC,cAAe4B,EAAS5B,cACxBC,MAAO2B,EAAS3B,MAChBC,OAAQ0B,EAAS1B,SAGb0C,EAAeC,IACnBF,EAAU,IACLD,EACH,CAACG,EAAMC,OAAOC,MAAOF,EAAMC,OAAOE,SAIhCC,EAAeC,UACnB,GAAyB,KAArBR,EAAK3C,aAAqC,KAAf2C,EAAKzC,OAAgC,KAAhByC,EAAKxC,OAAe,CACtE2C,EAAMM,iBAWY,aAVMtD,YACtB+B,EAASnB,YACTiC,EAAK3C,YACL2C,EAAK1C,cACL0C,EAAKzC,MACLyC,EAAKxC,OACL,IACA+B,EAAQmB,GACRnB,EAAQoB,YAGR3B,EAAQ4B,KAAK,mBAGfjB,GAAQ,GACRI,EAAW,oCAIfS,eAAeK,EAASpD,GACtB,GAAc,GAAVA,EACFoC,GAAS,QACJ,GAAc,GAAVpC,EAAa,CACtB,IAAIqD,EAAY,EACZvB,IACFuB,EAAYvB,EAAQmB,IAGJ,aADMK,YAAkBD,EAAW,KAAM,KAAM,IAAKvB,EAAQoB,aAE5EnB,IACAR,EAAQ4B,KAAK,OAKnB,OAAIrB,EACEL,EAASnB,YAET,qBAAKiD,MAAO,CAAEC,cAAe,OAA7B,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,YAAU,EAACC,QAAQ,UAAUzB,KAAME,EAAOwB,OAAQ,IAAMP,EAAS,GAAIQ,UAAQ,EAApF,UACE,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,gCAEF,cAAC,IAAMC,KAAP,UAAa3B,IACb,eAAC,IAAM4B,OAAP,WACE,cAAC,IAAD,CAASC,MAAM,YAAYC,QAAS,IAAMf,EAAS,GAAnD,sBAGA,cAAC,IAAD,CAASc,MAAM,UAAUC,QAAS,IAAMf,EAAS,GAAjD,2BAKJ,qBAAKgB,UAAU,aAAab,MAAO,CAAEc,aAAc,QAAnD,SACE,eAAC,IAAD,CAAQX,QAAQ,UAAUY,KAAK,KAAKH,QAAS,IAAM5C,EAAQgD,SAA3D,UACE,cAAC,IAAD,IADF,wBAKF,uBACA,uBACA,eAAC,IAAD,CAAOtC,KAAMA,EAAMyB,QAAQ,SAASc,QAAS,IAAMtC,GAAQ,GAAQuC,aAAW,EAA9E,UACE,cAAC,IAAMC,QAAP,qBACA,4BAAIrC,OAEN,cAAC,IAAD,CAAOkB,MAAO,CAAEoB,QAAS,OAAQC,WAAY,UAA7C,SACE,cAAC,IAAD,CAAWrB,MAAO,CAAEsB,MAAO,OAA3B,SACE,eAAC,IAAD,CAAOtB,MAAO,CAAEsB,MAAO,QAAvB,UACE,gEACA,mBAAGT,UAAU,uBAAb,2DACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,0BACEU,YAAY,iBACZlC,KAAK,cACLwB,UAAU,eACVW,KAAK,IACLC,SAAUvC,EACVwC,aAAcxD,EAAS7B,iBAG3B,eAAC,IAAD,CAAawE,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,cAAC,IAAD,CACEc,KAAK,OACLJ,YAAY,gBACZlC,KAAK,gBACLoC,SAAUvC,EACVwC,aAAcxD,EAAS5B,cACvBsF,UAAQ,OAGZ,eAAC,IAAD,CAAaf,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,cAAC,IAAD,CACEc,KAAK,OACLJ,YAAY,QACZlC,KAAK,QACLoC,SAAUvC,EACVwC,aAAcxD,EAAS3B,WAG3B,eAAC,IAAD,CAAasE,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,eAAC,IAAD,CAAaxB,KAAK,SAASoC,SAAUvC,EAArC,UACE,mEACA,wBAAQI,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,4BAGJ,cAAC,IAAD,CAASqB,MAAM,UAAUC,QAASrB,EAAlC,0CAUZvB,EAAQ4B,KAAK,cAEX,qBAAKiB,UAAU,aAAf,qGAMJ7C,EAAQ4B,KAAK,KACN,qBAAKiB,UAAU,aAAf","file":"static/js/89.00c4ec99.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}politicas`\n\nexport function postCrudPoliticas(\n  idPolitica,\n  descripcion,\n  identificador,\n  valor,\n  estado,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_politica: idPolitica,\n    descripcion: descripcion,\n    identificador: identificador,\n    valor: valor,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idPolitica !== '' && opcion !== '') {\n    ApiWhere += '/' + idPolitica + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { postCrudPoliticas } from '../../../services/postCrudPoliticas'\nimport { postSesionUsuario } from '../../../services/postSesionUsuario'\nimport { FiBook, FiSettings, FiGrid, FiHash } from 'react-icons/fi'\nimport '../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CInputGroupText,\n  CFormControl,\n  CInputGroup,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst EditarPolitica = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n\n  const [form, setValues] = useState({\n    descripcion: location.descripcion,\n    identificador: location.identificador,\n    valor: location.valor,\n    estado: location.estado,\n  })\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (form.descripcion !== '' && form.valor !== '' && form.estado !== '') {\n      event.preventDefault()\n      const respuesta = await postCrudPoliticas(\n        location.id_politica,\n        form.descripcion,\n        form.identificador,\n        form.valor,\n        form.estado,\n        '1',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/politicas')\n      }\n    } else {\n      setShow(true)\n      setMensaje('No has llenado todos los campos')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    if (location.id_politica) {\n      return (\n        <div style={{ flexDirection: 'row' }}>\n          <CContainer>\n            <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Confirmación</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{mensaje}</Modal.Body>\n              <Modal.Footer>\n                <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                  Cancelar\n                </CButton>\n                <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                  Aceptar\n                </CButton>\n              </Modal.Footer>\n            </Modal>\n            <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n              <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n                <FaArrowLeft />\n                &nbsp;&nbsp;Regresar\n              </Button>\n            </div>\n            <br />\n            <br />\n            <Alert show={show} variant=\"danger\" onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>Error!</Alert.Heading>\n              <p>{mensaje}</p>\n            </Alert>\n            <CCard style={{ display: 'flex', alignItems: 'center' }}>\n              <CCardBody style={{ width: '80%' }}>\n                <CForm style={{ width: '100%' }}>\n                  <h1>Modificación de Política</h1>\n                  <p className=\"text-medium-emphasis\">Modifique la información de la política</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiBook />\n                    </CInputGroupText>\n                    <textarea\n                      placeholder=\"Descripción\"\n                      name=\"descripcion\"\n                      className=\"form-control\"\n                      rows=\"2\"\n                      onChange={handleInput}\n                      defaultValue={location.descripcion}\n                    ></textarea>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiGrid />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Identificador\"\n                      name=\"identificador\"\n                      onChange={handleInput}\n                      defaultValue={location.identificador}\n                      readOnly\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiHash />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Valor\"\n                      name=\"valor\"\n                      onChange={handleInput}\n                      defaultValue={location.valor}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiSettings />\n                    </CInputGroupText>\n                    <CFormSelect name=\"estado\" onChange={handleInput}>\n                      <option>Seleccione estado. (Opcional)</option>\n                      <option value=\"1\">Activo</option>\n                      <option value=\"0\">Inactivo</option>\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CButton color=\"primary\" onClick={handleSubmit}>\n                    Guardar Cambios\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CContainer>\n        </div>\n      )\n    } else {\n      history.push('/politicas')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DE LA POLÍTICA. REGRESE A LA PANTALLA DE POLÍTICAS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default EditarPolitica\n"],"sourceRoot":""}