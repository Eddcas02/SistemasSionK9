{"version":3,"sources":["services/getGruposAutorizacion.js","services/postCrudCuentaGrupoAutorizacion.js","views/components/cuentagrupoautorizacion/nuevo/NuevoCuentaGrupoAutorizacion.js"],"names":["API","process","getGruposAutorizacion","idGrupo","idGrupoPadre","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","postCrudCuentaGrupoAutorizacion","idCuentaGrupoAutorizacion","id_grupoautorizacion","CodigoCuenta","opcion","id_usuario","datos","id_cuentagrupo","data","JSON","stringify","body","NuevoRol","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","show","setShow","showM","setShowM","mensaje","setMensaje","color","setColor","titulo","setTitulo","form","setValues","useEffect","mounted","api_token","items","grupos","handleInput","event","target","name","value","handleSubmit","async","descripcion","preventDefault","id","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","placeholder","rows","onChange","map","item","i","eliminado","activo","id_grupo","identificador"],"mappings":"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","file":"static/js/43.791a4f2a.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}grupoautorizacion`\n\nexport function getGruposAutorizacion(idGrupo, idGrupoPadre, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idGrupo !== null) {\n    ApiWhere += '/' + idGrupo\n  }\n  if (idGrupoPadre !== null) {\n    ApiWhere += '/' + idGrupoPadre\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}cuentagrupoautorizacion`\n\nexport function postCrudCuentaGrupoAutorizacion(\n  idCuentaGrupoAutorizacion,\n  id_grupoautorizacion,\n  CodigoCuenta,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_cuentagrupo: idCuentaGrupoAutorizacion,\n    opcion: opcion,\n    id_usuario: id_usuario,\n    CodigoCuenta: CodigoCuenta,\n    id_grupoautorizacion: id_grupoautorizacion,\n  }\n\n  if (idCuentaGrupoAutorizacion !== '' && opcion !== '') {\n    ApiWhere += '/' + idCuentaGrupoAutorizacion + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory } from 'react-router-dom'\nimport { FiLayers, FiLayout } from 'react-icons/fi'\nimport { postCrudCuentaGrupoAutorizacion } from '../../../../services/postCrudCuentaGrupoAutorizacion'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getGruposAutorizacion } from '../../../../services/getGruposAutorizacion'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst NuevoRol = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [color, setColor] = useState('danger')\n  const [titulo, setTitulo] = useState('Error!')\n\n  const [form, setValues] = useState({\n    id_grupoautorizacion: '',\n    CodigoCuenta: '',\n  })\n\n  useEffect(() => {\n    let mounted = true\n    getGruposAutorizacion(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.grupos)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (form.descripcion !== '') {\n      event.preventDefault()\n      const respuesta = await postCrudCuentaGrupoAutorizacion(\n        '',\n        form.id_grupoautorizacion,\n        form.CodigoCuenta,\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/cuentagrupoautorizacion')\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has ingresado ninguna descripción.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    return (\n      <div style={{ flexDirection: 'row' }}>\n        <CContainer>\n          <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmación</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                Cancelar\n              </CButton>\n              <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n            <Alert.Heading>{titulo}</Alert.Heading>\n            <p>{mensaje}</p>\n          </Alert>\n          <CCard style={{ display: 'flex', alignItems: 'center' }}>\n            <CCardBody style={{ width: '80%' }}>\n              <CForm style={{ width: '100%' }}>\n                <h1>Nueva cuenta para grupo autorización</h1>\n                <p className=\"text-medium-emphasis\">\n                  Agrega una nueva cuenta para grupo de autorización\n                </p>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiLayers />\n                  </CInputGroupText>\n                  <textarea\n                    placeholder=\"Cuenta\"\n                    className=\"form-control\"\n                    rows=\"1\"\n                    onChange={handleInput}\n                    name=\"CodigoCuenta\"\n                  ></textarea>\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiLayout />\n                  </CInputGroupText>\n                  <CFormSelect name=\"id_grupoautorizacion\" onChange={handleInput}>\n                    <option>Seleccione un grupo...</option>\n                    {results.map((item, i) => {\n                      if (item.eliminado == 0 && item.activo == 1) {\n                        return (\n                          <option key={item.id_grupo} value={item.id_grupo}>\n                            {item.identificador}\n                          </option>\n                        )\n                      }\n                    })}\n                  </CFormSelect>\n                </CInputGroup>\n                <CButton color=\"primary\" onClick={handleSubmit}>\n                  Agregar cuenta\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CContainer>\n      </div>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default NuevoRol\n"],"sourceRoot":""}