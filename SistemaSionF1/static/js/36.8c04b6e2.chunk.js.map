{"version":3,"sources":["services/getBancos.js","services/postCrudBancos.js","views/components/flujos/bancos/Bancos.js"],"names":["API","process","getBancos","idBanco","Nombre","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","postCrudBancos","nombre","direccion","codigoTransferencia","codigoSAP","idPais","estado","opcion","id_usuario","datos","id_banco","codigo_transferencia","codigo_SAP","id_pais","activo","data","JSON","stringify","body","Bancos","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","setIdBanco","setOpcion","mensaje","setMensaje","filterText","setFilterText","resetPaginationToggle","setResetPaginationToggle","filter","item","toString","toLowerCase","includes","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","bancos","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","center","width","sortable","wrap","cell","deshabilitar","ExistePermiso","color","size","title","disabled","onClick","pathname","pais","mostrarModal","tableData","filterPlaceholder","export","print","objeto","result","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarBanco","className","marginBottom","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/36.8c04b6e2.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}bancos`\n\nexport function getBancos(idBanco, Nombre, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idBanco !== null) {\n    ApiWhere += '/' + idBanco\n  }\n  if (Nombre !== null) {\n    ApiWhere += '/' + Nombre\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}bancos`\n\nexport function postCrudBancos(\n  idBanco,\n  nombre,\n  direccion,\n  codigoTransferencia,\n  codigoSAP,\n  idPais,\n  estado,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_banco: idBanco,\n    nombre: nombre,\n    direccion: direccion,\n    codigo_transferencia: codigoTransferencia,\n    codigo_SAP: codigoSAP,\n    id_pais: idPais,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idBanco !== '' && opcion !== '') {\n    ApiWhere += '/' + idBanco + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Modal, FormControl } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { getBancos } from '../../../../services/getBancos'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postCrudBancos } from '../../../../services/postCrudBancos'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { useSession } from 'react-use-session'\nimport { FaPen, FaTrash } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport { CButton } from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst Bancos = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idBanco, setIdBanco] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n  const [filterText, setFilterText] = useState('')\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false)\n  const filteredItems = results.filter(\n    (item) =>\n      item.codigo_transferencia.toString().toLowerCase().includes(filterText.toLowerCase()) ||\n      item.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      item.direccion.toLowerCase().includes(filterText.toLowerCase()) ||\n      item.Nombre.toLowerCase().includes(filterText.toLowerCase()),\n  )\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Bancos'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getBancos(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.bancos)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n\n  const columns = useMemo(() => [\n    {\n      name: 'No.',\n      selector: (row) => row.codigo_transferencia,\n      center: true,\n      width: '65px',\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Nombre',\n      selector: (row) => row.nombre,\n      center: true,\n      width: '320px',\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Dirección',\n      selector: (row) => row.direccion,\n      center: true,\n      width: '300px',\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'País',\n      selector: (row) => row.Nombre,\n      center: true,\n      width: '100px',\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'SAP',\n      selector: (row) => row.codigo_SAP,\n      center: true,\n      width: '90px',\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Estado',\n      center: true,\n      width: '80px',\n      cell: function OrderItems(row) {\n        if (row.activo == 1) {\n          return <div>Activo</div>\n        } else if (row.activo == 0) {\n          return <div>Inactivo</div>\n        }\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      width: '10%',\n      sortable: true,\n      wrap: true,\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (ExistePermiso('Modulo Bancos') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"primary\"\n              size=\"sm\"\n              title=\"Editar Banco\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/bancos/editar',\n                  id_banco: row.id_banco,\n                  nombre: row.nombre,\n                  direccion: row.direccion,\n                  codigoTransferencia: row.codigo_transferencia,\n                  codigoSAP: row.codigo_SAP,\n                  pais: row.id_pais,\n                  estado: row.activo,\n                })\n              }\n            >\n              <FaPen />\n            </CButton>{' '}\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar Banco\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_banco, 1, row.nombre)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n    },\n  ])\n\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  function mostrarModal(id_banco, opcion, nombre) {\n    setIdBanco(id_banco)\n    setOpcion(opcion)\n    setMensaje('Está seguro de eliminar el banco ' + nombre + '?')\n    setShow(true)\n  }\n\n  async function eliminarBanco(id_banco, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postCrudBancos(\n        id_banco,\n        '',\n        '',\n        '',\n        '',\n        '',\n        '',\n        '2',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getBancos(null, null, session.api_token).then((items) => {\n          setList(items.bancos)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const handleClear = () => {\n    if (filterText) {\n      setResetPaginationToggle(!resetPaginationToggle)\n      setFilterText('')\n    }\n  }\n\n  const crearNuevo = () => {\n    history.push('/bancos/nuevo')\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo Bancos') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarBanco(idBanco, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/bancos/nuevo')}\n          >\n            Crear Nuevo\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay registros que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default Bancos\n"],"sourceRoot":""}