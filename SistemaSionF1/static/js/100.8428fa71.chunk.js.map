{"version":3,"sources":["services/postUsuarioAutorizacion.js","services/getUsuarioAutorizacion.js","views/components/flujos/autorizacion/ListaAutorizaciones.js"],"names":["API","process","postUsuarioAutorizacion","idAutorizacion","idAprobador","idTemporal","fechaInicio","fechaFinal","opcion","estado","id_usuario","token","ApiFinal","ApiWhere","datos","id_usuarioautorizacion","id_usuarioaprobador","id_usuariotemporal","fecha_inicio","fecha_final","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getUsuarioAutorizacion","err","message","alert","ListaAutorizaciones","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","setidAutorizacion","setEstado","setOpcion","mensaje","setMensaje","ExistePermiso","objeto","result","item","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","autorizacion","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","usuariotemporal","center","sortable","wrap","cell","deshabilitar","color","size","title","onClick","id_autorizacion","mostrarModal","width","tableData","filterPlaceholder","export","print","Modal","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","cambiarEstado","className","marginBottom","pathname","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/100.8428fa71.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}usuarioautorizacion`\n\nexport function postUsuarioAutorizacion(\n  idAutorizacion,\n  idAprobador,\n  idTemporal,\n  fechaInicio,\n  fechaFinal,\n  opcion,\n  estado,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuarioautorizacion: idAutorizacion,\n    id_usuarioaprobador: idAprobador,\n    id_usuariotemporal: idTemporal,\n    fecha_inicio: fechaInicio,\n    fecha_final: fechaFinal,\n    opcion: opcion,\n    activo: estado,\n    id_usuario: id_usuario,\n  }\n\n  if (idAutorizacion !== '' && opcion !== '') {\n    ApiWhere += '/' + idAutorizacion + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}usuarioautorizacion`\n\nexport function getUsuarioAutorizacion(idAprobador, idAutorizacion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idAprobador !== null) {\n    ApiWhere += '/' + idAprobador\n  }\n  if (idAutorizacion !== null) {\n    ApiWhere += '/' + idAutorizacion\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((err) => {\n      if (err.message == 'Failed to fetch') {\n        alert('Error de conexión. Revise si está conectado a Internet.')\n      }\n    })\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { getUsuarioAutorizacion } from '../../../../services/getUsuarioAutorizacion'\nimport { postUsuarioAutorizacion } from '../../../../services/postUsuarioAutorizacion'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { useSession } from 'react-use-session'\nimport { useHistory } from 'react-router-dom'\nimport { BsToggles } from 'react-icons/bs'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst ListaAutorizaciones = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idAutorizacion, setidAutorizacion] = useState(0)\n  const [estado, setEstado] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Autorizacion'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getUsuarioAutorizacion(idUsuario, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.autorizacion)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  function mostrarModal(id_autorizacion, opcion, estado) {\n    setidAutorizacion(id_autorizacion)\n    setEstado(estado)\n    setOpcion(opcion)\n    setShow(true)\n    setMensaje('Está seguro de cambiar el estado de la autorización de encargado temporal?')\n  }\n\n  async function cambiarEstado(id_autorizacion, opcion, estado) {\n    if (opcion == 1) {\n      let result\n      if (estado == 0) {\n        result = '1'\n      } else {\n        result = '0'\n      }\n      const respuesta = await postUsuarioAutorizacion(\n        id_autorizacion,\n        '',\n        '',\n        '',\n        '',\n        opcion,\n        result,\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getUsuarioAutorizacion(session.id, null, session.api_token).then((items) => {\n          setList(items.autorizacion)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Usuario Temporal',\n      selector: (row) => row.usuariotemporal,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Fecha inico',\n      selector: (row) => row.fecha_inicio,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n    },\n    {\n      name: 'Fecha final',\n      selector: (row) => row.fecha_final,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n    },\n    {\n      name: 'Estado',\n      cell: function OrderItems(row) {\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        return estado\n      },\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (!ExistePermiso('Modulo Usuarios')) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"info\"\n              size=\"sm\"\n              title=\"Cambiar Estado\"\n              //disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_usuarioautorizacion, 1, row.activo)}\n            >\n              <BsToggles />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo Autorizacion') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => cambiarEstado(idAutorizacion, opcion, estado).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            //disabled={deshabilitar}\n            onClick={() =>\n              history.push({\n                pathname: '/autorizacion/nueva',\n                id_usuario: session.id,\n              })\n            }\n          >\n            Crear Nueva\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay usuarios que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default ListaAutorizaciones\n"],"sourceRoot":""}