{"version":3,"sources":["services/postCrudRestriccionEmpresa.js","services/getRestriccionEmpresa.js","views/components/restriccionempresa/listado/RestriccionEmpresa.js"],"names":["API","process","postCrudRestriccionEmpresa","idRestriccionEmpresa","empresa_codigo","empresa_nombre","opcion","id_usuario","token","ApiFinal","ApiWhere","datos","id_restriccionempresa","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getRestriccionEmpresa","APIDisponible","getEmpresaDisponible","RestriccionEmpresa","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","idRol","setIdRol","setOpcion","mensaje","setMensaje","ExistePermiso","objeto","result","item","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","restriccion_empresa","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","center","sortable","wrap","cell","estado","activo","deshabilitar","color","size","title","disabled","onClick","nombre","mostrarModal","width","tableData","filterPlaceholder","export","print","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarRol","className","marginBottom","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/59.0948a9f0.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}restriccionempresa`\n\nexport function postCrudRestriccionEmpresa(\n  idRestriccionEmpresa,\n  empresa_codigo,\n  empresa_nombre,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_restriccionempresa: idRestriccionEmpresa,\n    opcion: opcion,\n    id_usuario: id_usuario,\n    empresa_codigo: empresa_codigo,\n    empresa_nombre: empresa_nombre,\n  }\n\n  if (idRestriccionEmpresa !== '' && opcion !== '') {\n    ApiWhere += '/' + idRestriccionEmpresa + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}restriccionempresa`\n\nexport function getRestriccionEmpresa(idRestriccionEmpresa, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idRestriccionEmpresa !== null) {\n    ApiWhere += '/' + idRestriccionEmpresa\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n\nconst APIDisponible = `${process.env.REACT_APP_API_URL}empresasdisponibles`\n\nexport function getEmpresaDisponible(token) {\n  return fetch(APIDisponible, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport { getRestriccionEmpresa } from '../../../../services/getRestriccionEmpresa'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { postCrudRestriccionEmpresa } from '../../../../services/postCrudRestriccionEmpresa'\nimport { useSession } from 'react-use-session'\nimport { FaUserEdit, FaTrash, FaUserCog, FaClipboardList } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport { CButton } from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst RestriccionEmpresa = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idRol, setIdRol] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo RestriccionEmpresa'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getRestriccionEmpresa(null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.restriccion_empresa)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  function mostrarModal(id_restriccionempresa, nombre, opcion) {\n    setIdRol(id_restriccionempresa)\n    setOpcion(opcion)\n    setShow(true)\n    setMensaje('Está seguro de eliminar la empresa ' + nombre + ' del listado de restricción?')\n  }\n\n  async function eliminarRol(id, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postCrudRestriccionEmpresa(\n        id,\n        '',\n        '',\n        '2',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getRestriccionEmpresa(null, session.api_token).then((items) => {\n          setList(items.restriccion_empresa)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Empresa',\n      selector: (row) => row.empresa_nombre,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Estado',\n      cell: function OrderItems(row) {\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        return estado\n      },\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        let deshabilitar = false\n        if (ExistePermiso('Modulo RestriccionEmpresa') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar Rol\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_restriccionempresa, row.empresa_nombre, 1)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo RestriccionEmpresa') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarRol(idRol, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/restriccionempresa/nuevo')}\n          >\n            Agregar Nueva\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay usuarios que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default RestriccionEmpresa\n"],"sourceRoot":""}