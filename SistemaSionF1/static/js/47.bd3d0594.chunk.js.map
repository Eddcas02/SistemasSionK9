{"version":3,"sources":["services/getNotificacionLoteUsuario.js","services/postCrudNotificacionLoteUsuario.js","services/postCrudNotificacionTipoDocumentoLote.js","views/components/notificacionloteusuario/listado/NotificacionLoteUsuario.js"],"names":["API","process","getNotificacionLoteUsuario","idUsuario","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","postCrudNotificacionLoteUsuario","id_usuarionotificaciontransaccion","id_usuario","TipoTransaccion","opcion","ConfiguracionDocumentos","datos","data","JSON","stringify","body","NotificacionLoteUsuario","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","idCuentaGrupo","setidCuentaGrupo","setOpcion","mensaje","setMensaje","ExistePermiso","objeto","result","item","async","Cancelar","id","postSesionUsuario","api_token","push","eliminarRol","id_notificaciontipodocumentolote","id_tipodocumentolote","postCrudNotificacionTipoDocumentoLote","items","UsuarioNotificacionTransaccion","useEffect","mounted","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","nombre","apellido","center","sortable","wrap","correo","tipoDocumento","cell","deshabilitar","color","size","title","disabled","onClick","mostrarModal","width","tableData","filterPlaceholder","export","print","Modal","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","className","marginBottom","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/47.bd3d0594.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}usuarionotificaciontransaccion`\n\nexport function getNotificacionLoteUsuario(idUsuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idUsuario !== null) {\n    ApiWhere += '/' + idUsuario\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}usuarionotificaciontransaccion`\n\nexport function postCrudNotificacionLoteUsuario(\n  id_usuarionotificaciontransaccion,\n  id_usuario,\n  TipoTransaccion,\n  opcion,\n  idUsuario,\n  ConfiguracionDocumentos,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuarionotificaciontransaccion: id_usuarionotificaciontransaccion,\n    opcion: opcion,\n    id_usuario: id_usuario,\n    TipoTransaccion: TipoTransaccion,\n    idUsuario: idUsuario,\n    ConfiguracionDocumentos: ConfiguracionDocumentos,\n  }\n\n  if (id_usuarionotificaciontransaccion !== '' && opcion !== '') {\n    ApiWhere += '/' + id_usuarionotificaciontransaccion + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}notificaciontipodocumentolote`\n\nexport function postCrudNotificacionTipoDocumentoLote(\n  id_notificaciontipodocumentolote,\n  id_usuarionotificaciontransaccion,\n  id_tipodocumentolote,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_notificaciontipodocumentolote: id_notificaciontipodocumentolote,\n    opcion: opcion,\n    idUsuario: id_usuario,\n    id_usuarionotificaciontransaccion: id_usuarionotificaciontransaccion,\n    id_tipodocumentolote: id_tipodocumentolote,\n  }\n\n  if (id_notificaciontipodocumentolote !== '' && opcion !== '') {\n    ApiWhere += '/' + id_notificaciontipodocumentolote + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport { getNotificacionLoteUsuario } from '../../../../services/getNotificacionLoteUsuario'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { postCrudNotificacionLoteUsuario } from '../../../../services/postCrudNotificacionLoteUsuario'\nimport { postCrudNotificacionTipoDocumentoLote } from '../../../../services/postCrudNotificacionTipoDocumentoLote'\nimport { useSession } from 'react-use-session'\nimport { FaUserEdit, FaTrash, FaUserCog, FaClipboardList } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport { CButton } from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst NotificacionLoteUsuario = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idCuentaGrupo, setidCuentaGrupo] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo NotificacionLote'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getNotificacionLoteUsuario(null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.UsuarioNotificacionTransaccion)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  function mostrarModal(id_notificaciontipodocumentolote, opcion) {\n    setidCuentaGrupo(id_notificaciontipodocumentolote)\n    setOpcion(opcion)\n    setShow(true)\n    setMensaje('Está seguro de eliminar la configuración de notificación?')\n  }\n\n  async function eliminarRol(id, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postCrudNotificacionTipoDocumentoLote(\n        id,\n        '',\n        '',\n        '2',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getNotificacionLoteUsuario(null, session.api_token).then((items) => {\n          setList(items.UsuarioNotificacionTransaccion)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Usuario',\n      selector: (row) => row.nombre + ' ' + row.apellido,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Correo',\n      selector: (row) => row.correo,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Tipo',\n      selector: (row) => row.TipoTransaccion,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Documento',\n      selector: (row) => row.tipoDocumento,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (ExistePermiso('Modulo NotificacionLote') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar configuración\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_notificaciontipodocumentolote, 1)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo NotificacionLote') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarRol(idCuentaGrupo, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/notificacionloteusuario/nuevo')}\n          >\n            Agregar Nueva\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay usuarios que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default NotificacionLoteUsuario\n"],"sourceRoot":""}