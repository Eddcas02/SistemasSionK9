{"version":3,"sources":["services/postUsuarioRecordatorioGrupo.js","services/getUsuarioRecordatorioGrupo.js","views/components/usuarios/recordatoriogrupo/RecordatorioGrupo.js"],"names":["API","process","postUsuarioRecordatorioGrupo","id_usuariorecordatoriogrupo","id_usuario_emisor","id_usuario_receptor","id_grupoautorizacion","opcion","estado","id_usuario_s","token","ApiFinal","ApiWhere","datos","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getUsuarioRecordatorioGrupo","idUsuario","RecordatorioGrupo","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","idRecordatorio","setIdRecordatorio","setOpcion","mensaje","setMensaje","resultsUsuarios","setListUsuarios","usuarioSeleccionado","setUsuarioSeleccionado","ExistePermiso","objeto","result","item","async","Cancelar","id","postSesionUsuario","api_token","push","useEffect","mounted","getUsuarios","items","users","recordatorio","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","usuario_emi","center","sortable","wrap","nombre_emi","apellido_emi","usuario_rec","nombre_rec","apellido_rec","identificador","descripcion","cell","deshabilitar","color","size","title","disabled","onClick","mostrarModal","width","tableData","filterPlaceholder","export","print","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarRecordatorio","display","marginBottom","justifyContent","noDataComponent","pagination","paginationPerPage","responsive","persistTableHead","striped","dense","className"],"mappings":"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","file":"static/js/66.2ad7cbb3.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}usuariorecordatoriogrupo`\n\nexport function postUsuarioRecordatorioGrupo(\n  id_usuariorecordatoriogrupo,\n  id_usuario_emisor,\n  id_usuario_receptor,\n  id_grupoautorizacion,\n  opcion,\n  estado,\n  id_usuario_s,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuario_emisor: id_usuario_emisor,\n    id_usuario_receptor: id_usuario_receptor,\n    id_grupoautorizacion: id_grupoautorizacion,\n    activo: estado,\n    id_usuario_s: id_usuario_s,\n  }\n\n  if (id_usuariorecordatoriogrupo !== '' && opcion !== '') {\n    ApiWhere += '/' + id_usuariorecordatoriogrupo + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}usuariorecordatoriogrupo`\n\nexport function getUsuarioRecordatorioGrupo(idUsuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idUsuario !== null) {\n    ApiWhere += '/' + idUsuario\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { getUsuarioRecordatorioGrupo } from '../../../../services/getUsuarioRecordatorioGrupo'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postUsuarioRecordatorioGrupo } from '../../../../services/postUsuarioRecordatorioGrupo'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { useSession } from 'react-use-session'\nimport { FaPen, FaTrash, FaChevronUp, FaChevronDown } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CFormSelect,\n} from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\nimport { getUsuarios } from '../../../../services/getUsuarios'\n\nconst RecordatorioGrupo = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idRecordatorio, setIdRecordatorio] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n  const [resultsUsuarios, setListUsuarios] = useState([])\n  const [usuarioSeleccionado, setUsuarioSeleccionado] = useState(0)\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo RecordatorioGrupo'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getUsuarios(null, null, null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setListUsuarios(items.users)\n      }\n    })\n    getUsuarioRecordatorioGrupo(null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.recordatorio)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  function mostrarModal(idRecordatorio, opcion) {\n    setIdRecordatorio(idRecordatorio)\n    setMensaje('Está seguro de eliminar el registro?')\n    setOpcion(opcion)\n    setShow(true)\n  }\n\n  function SeleccionUsuario(event) {\n    setUsuarioSeleccionado(event.target.value)\n  }\n\n  async function eliminarRecordatorio(idRecordatorio, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postUsuarioRecordatorioGrupo(\n        idRecordatorio,\n        '',\n        '',\n        '',\n        '2',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getUsuarioRecordatorioGrupo(usuarioSeleccionado, session.api_token).then((items) => {\n          setList(items.recordatorio)\n        })\n      } else if (opcion == 2) {\n        setShow(false)\n      }\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Usuario',\n      selector: (row) => row.usuario_emi,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Nombre',\n      selector: (row) => row.nombre_emi + ' ' + row.apellido_emi,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Usuario receptor',\n      selector: (row) => row.usuario_rec,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n    },\n    {\n      name: 'Nombre receptor',\n      selector: (row) => row.nombre_rec + ' ' + row.apellido_rec,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Grupo',\n      selector: (row) => '[' + row.identificador + '] ' + row.descripcion,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (ExistePermiso('Modulo RecordatorioGrupo') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar registro\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_usuariorecordatoriogrupo, 1)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo RecordatorioGrupo') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarRecordatorio(idRecordatorio, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div style={{ display: 'flex', marginBottom: '10px', justifyContent: 'flex-end' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/recordatoriogrupo/nueva')}\n          >\n            Crear Nuevo\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay registros que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default RecordatorioGrupo\n"],"sourceRoot":""}