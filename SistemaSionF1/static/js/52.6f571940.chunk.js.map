{"version":3,"sources":["services/getPerfiles.js","services/postCrudPerfil.js","views/components/perfil/perfiles/Perfiles.js"],"names":["API","process","getPerfiles","idPerfil","Descripcion","token","ApiFinal","ApiWhere","length","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","getPerfilesParaAsignar","idUsuario","postCrudPerfil","descripcion","estado","opcion","id_usuario","datos","id_perfil","activo","data","JSON","stringify","body","Perfiles","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","setIdPerfil","setOpcion","mensaje","setMensaje","ExistePermiso","objeto","result","item","async","Cancelar","id","postSesionUsuario","api_token","push","useEffect","mounted","items","perfiles","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","center","sortable","wrap","cell","deshabilitar","color","size","title","disabled","onClick","pathname","nombre","mostrarModal","width","tableData","filterPlaceholder","export","print","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarPerfil","className","marginBottom","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/52.6f571940.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}perfiles`\n\nexport function getPerfiles(idPerfil, Descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idPerfil !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&id=' + idPerfil\n    } else {\n      ApiWhere += '?id=' + idPerfil\n    }\n  }\n  if (Descripcion !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&descripcion=' + Descripcion\n    } else {\n      ApiWhere += '?descripcion=' + Descripcion\n    }\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n\nexport function getPerfilesParaAsignar(idUsuario, token) {\n  let ApiFinal = API\n  let ApiWhere = 'paraasignar/' + idUsuario\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}perfiles`\n\nexport function postCrudPerfil(idPerfil, descripcion, estado, opcion, id_usuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_perfil: idPerfil,\n    descripcion: descripcion,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idPerfil !== '' && opcion !== '') {\n    ApiWhere += '/' + idPerfil + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { postCrudPerfil } from '../../../../services/postCrudPerfil'\nimport { getPerfiles } from '../../../../services/getPerfiles'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { Modal } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useSession } from 'react-use-session'\nimport { FaUserEdit, FaTrash, FaUserCog, FaClipboardList } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst Perfiles = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idPerfil, setIdPerfil] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Perfiles'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getPerfiles(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.perfiles)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  function mostrarModal(id_perfil, nombre, opcion) {\n    setIdPerfil(id_perfil)\n    setOpcion(opcion)\n    setMensaje('Está seguro de eliminar el perfil ' + nombre + '?')\n    setShow(true)\n  }\n\n  async function eliminarPerfil(id_perfil, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postCrudPerfil(id_perfil, '', '', '2', session.id, session.api_token)\n      if (respuesta === 'OK') {\n        await getPerfiles(null, null, session.api_token).then((items) => {\n          setList(items.perfiles)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n\n  const columns = useMemo(() => [\n    {\n      name: 'Descripcion',\n      selector: (row) => row.descripcion,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Estado',\n      cell: function OrderItems(row) {\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        return estado\n      },\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (ExistePermiso('Modulo Perfiles') == 0) {\n          deshabilitar = true\n        }\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        return (\n          <div>\n            <CButton\n              color=\"info\"\n              size=\"sm\"\n              title=\"Consultar Perfil Rol\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/perfiles/consulta',\n                  id_perfil: row.id_perfil,\n                  descripcion: row.descripcion,\n                  estado: estado,\n                })\n              }\n            >\n              <FaClipboardList />\n            </CButton>{' '}\n            <CButton\n              color=\"success\"\n              size=\"sm\"\n              title=\"Asignar Rol\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/perfiles/perfilrol',\n                  id_perfil: row.id_perfil,\n                  descripcion: row.descripcion,\n                  estado: row.activo,\n                })\n              }\n            >\n              <FaUserCog />\n            </CButton>{' '}\n            <CButton\n              color=\"primary\"\n              size=\"sm\"\n              title=\"Editar Perfil\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/perfiles/editar',\n                  id_perfil: row.id_perfil,\n                  descripcion: row.descripcion,\n                  estado: row.activo,\n                })\n              }\n            >\n              <FaUserEdit />\n            </CButton>{' '}\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar Perfil\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_perfil, row.descripcion, 1)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo Perfiles') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarPerfil(idPerfil, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/perfiles/nuevo')}\n          >\n            Crear Nuevo\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay perfiles que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default Perfiles\n"],"sourceRoot":""}