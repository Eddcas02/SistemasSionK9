{"version":3,"sources":["services/postPerfilUsuario.js","views/components/usuarios/perfil/ConsultaPU.js"],"names":["API","process","postPerfilUsuario","idUsuarioPerfil","idUsuario","perfiles","opcion","idPerfil","estado","id_usuario","token","ApiFinal","ApiWhere","datos","id_usuarioperfil","id_perfil","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","Consultar","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","setIdPerfil","setEstado","setOpcion","mensaje","setMensaje","async","Cancelar","id","postSesionUsuario","api_token","push","mostrarModal","useEffect","mounted","idUsuario1","idUsuario2","getPerfilUsuario","items","detalle","deshabilitar","objeto","result","item","ExistePermiso","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","crudPerfil","className","style","marginBottom","size","goBack","nombre","title","disabled","pathname","email","hover","responsive","align","textAlign","width","map","i","eliminado","descripcion"],"mappings":"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","file":"static/js/98.0d9312e3.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}usuarioperfil`\n\nexport function postPerfilUsuario(\n  idUsuarioPerfil,\n  idUsuario,\n  perfiles,\n  opcion,\n  idPerfil,\n  estado,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuarioperfil: idUsuarioPerfil,\n    idUsuario: idUsuario,\n    id_perfil: idPerfil,\n    perfiles: perfiles,\n    opcion: opcion,\n    activo: estado,\n    id_usuario: id_usuario,\n  }\n\n  if (perfiles !== '') {\n    ApiWhere += '/' + perfiles\n  }\n  if (idUsuarioPerfil !== '' && opcion !== '') {\n    ApiWhere += '/' + idUsuarioPerfil + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { postPerfilUsuario } from '../../../../services/postPerfilUsuario'\nimport { useSession } from 'react-use-session'\nimport { FaTrash, FaPen, FaUsersCog } from 'react-icons/fa'\nimport { BsToggles } from 'react-icons/bs'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst Consultar = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idPerfil, setIdPerfil] = useState(0)\n  const [estado, setEstado] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Usuarios'\n    let idUsuario1 = 0\n    let idUsuario2 = 0\n    if (location.id_usuario) {\n      idUsuario1 = location.id_usuario\n    }\n    if (session) {\n      idUsuario2 = session.id\n    }\n    getPerfilUsuario(idUsuario1, '1', '0', session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.detalle)\n      }\n    })\n    getPerfilUsuario(idUsuario2, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = false\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = true\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 3) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    } else {\n      setShow(false)\n    }\n  }\n\n  function mostrarModal(id_perfil, opcion, estado) {\n    if (opcion == 1) {\n      setMensaje('Está seguro de eliminar este perfil?')\n      setIdPerfil(id_perfil)\n      setOpcion(opcion)\n      setShow(true)\n    } else if (opcion == 2) {\n      setMensaje('Está seguro de cambiar el estado de este perfil?')\n      setIdPerfil(id_perfil)\n      setEstado(estado)\n      setOpcion(opcion)\n      setShow(true)\n    }\n  }\n\n  async function crudPerfil(id_usuario, id_usuarioperfil, opcion, estado) {\n    let result\n    if (opcion == 1) {\n      const respuesta = await postPerfilUsuario(\n        id_usuarioperfil,\n        '',\n        '',\n        '1',\n        '',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getPerfilUsuario(id_usuario, '1', '0', session.api_token).then((items) => {\n          setList(items.detalle)\n        })\n      }\n    } else if (opcion == 2) {\n      if (estado == 0) {\n        result = '1'\n      } else {\n        result = '0'\n      }\n      const respuesta = await postPerfilUsuario(\n        id_usuarioperfil,\n        '',\n        '',\n        '3',\n        '',\n        result,\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getPerfilUsuario(id_usuario, '1', '0', session.api_token).then((items) => {\n          setList(items.detalle)\n        })\n      }\n    } else if (opcion == 3) {\n      setShow(false)\n    }\n  }\n\n  if (session) {\n    if (location.id_usuario) {\n      let deshabilitar = false\n      if (!ExistePermiso('Modulo Usuarios')) {\n        deshabilitar = true\n      }\n      return (\n        <>\n          <Modal variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmación</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n                Cancelar\n              </CButton>\n              <CButton\n                color=\"primary\"\n                onClick={() =>\n                  crudPerfil(location.id_usuario, idPerfil, opcion, estado).then(() => Cancelar(1))\n                }\n              >\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <div className=\"user-name-profile\">\n            {location.nombre}{' '}\n            <CButton\n              color=\"warning\"\n              size=\"sm\"\n              title=\"Asignar Grupo Autorización\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/usuarios/usuariogrupo',\n                  id_usuario: location.id_usuario,\n                  nombre: location.nombre,\n                  email: location.email,\n                  estado: location.estado,\n                })\n              }\n            >\n              <FaUsersCog />\n            </CButton>\n          </div>\n          <CTable hover responsive align=\"middle\" className=\"mb-0 border\">\n            <CTableHead color=\"light\">\n              <CTableRow>\n                <CTableHeaderCell style={{ textAlign: 'center', width: '40%' }}>\n                  Nombre Perfil\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Estado Usuario Perfil</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Acciones</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {results.map((item, i) => {\n                let estado = 'Inactivo'\n                if (item.eliminado == 0) {\n                  if (item.activo == 1) {\n                    estado = 'Activo'\n                  }\n                  return (\n                    <CTableRow key={item.id_usuarioperfil}>\n                      <CTableDataCell style={{ textAlign: 'center', width: '40%' }}>\n                        {item.descripcion}\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">{estado}</CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        {/* <CButton\n                          color=\"primary\"\n                          size=\"sm\"\n                          title=\"Cambiar Perfil\"\n                          disabled={deshabilitar}\n                          onClick={() =>\n                            history.push({\n                              pathname: '/usuarios/editarPU',\n                              id_usuarioperfil: item.id_usuarioperfil,\n                              id_usuario: item.id_usuario,\n                              id_perfil: item.id_perfil,\n                              nombre: location.nombre,\n                              descripcion: item.descripcion,\n                              estado: item.activo,\n                            })\n                          }\n                        >\n                          <FaPen />\n                        </CButton>{' '} */}\n                        <CButton\n                          color=\"danger\"\n                          size=\"sm\"\n                          title=\"Eliminar Perfil Asociado\"\n                          disabled={deshabilitar}\n                          onClick={() => mostrarModal(item.id_usuarioperfil, 1, '')}\n                        >\n                          <FaTrash />\n                        </CButton>{' '}\n                        <CButton\n                          color=\"info\"\n                          size=\"sm\"\n                          title=\"Cambiar Estado\"\n                          disabled={deshabilitar}\n                          onClick={() => mostrarModal(item.id_usuarioperfil, 2, item.activo)}\n                        >\n                          <BsToggles />\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                }\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )\n    } else {\n      history.push('/usuarios')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL USUARIO. REGRESE A LA PANTALLA DE USUARIOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default Consultar\n"],"sourceRoot":""}