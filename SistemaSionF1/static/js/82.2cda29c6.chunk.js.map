{"version":3,"sources":["services/postCrudCuentas.js","services/getCuentas.js","views/components/flujos/cuentas/Cuentas.js"],"names":["API","process","postCrudCuentas","idCuenta","numeroCuenta","nombre","idEmpresa","idBanco","idMoneda","codigoACH","opcion","id_usuario","token","ApiFinal","ApiWhere","datos","id_cuenta","numero_cuenta","id_empresa","id_banco","id_moneda","codigo_ach","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getCuentas","Nombre","Cuentas","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","mensaje","setMensaje","setIdCuenta","setOpcion","ExistePermiso","objeto","result","item","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","console","log","cuentas","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","center","sortable","wrap","empresa","banco","moneda","cell","deshabilitar","color","size","title","disabled","onClick","pathname","mostrarModal","width","tableData","filterPlaceholder","export","print","Modal","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarCuenta","className","marginBottom","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/82.2cda29c6.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}cuentas`\n\nexport function postCrudCuentas(\n  idCuenta,\n  numeroCuenta,\n  nombre,\n  idEmpresa,\n  idBanco,\n  idMoneda,\n  codigoACH,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_cuenta: idCuenta,\n    numero_cuenta: numeroCuenta,\n    nombre: nombre,\n    id_empresa: idEmpresa,\n    id_banco: idBanco,\n    id_moneda: idMoneda,\n    codigo_ach: codigoACH,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idCuenta !== '' && opcion !== '') {\n    ApiWhere += '/' + idCuenta + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}cuentas`\n\nexport function getCuentas(idCuenta, Nombre, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idCuenta !== null) {\n    ApiWhere += '/' + idCuenta\n  }\n  if (Nombre !== null) {\n    ApiWhere += '/' + Nombre\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { getCuentas } from '../../../../services/getCuentas'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { postCrudCuentas } from '../../../../services/postCrudCuentas'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useSession } from 'react-use-session'\nimport { FaPen, FaTrash } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport { CButton } from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst Cuentas = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [idCuenta, setIdCuenta] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Cuentas'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getCuentas(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        console.log(items)\n        setList(items.cuentas)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  function mostrarModal(id_cuenta, opcion, nombre) {\n    setIdCuenta(id_cuenta)\n    setOpcion(opcion)\n    setMensaje('Está seguro de eliminar la cuenta número ' + nombre + '?')\n    setShow(true)\n  }\n\n  async function eliminarCuenta(id_cuenta, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postCrudCuentas(\n        id_cuenta,\n        '',\n        '',\n        '',\n        '',\n        '',\n        '',\n        '2',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getCuentas(null, null, session.api_token).then((items) => {\n          setList(items.cuentas)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Número Cuenta',\n      selector: (row) => row.numero_cuenta,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Nombre',\n      selector: (row) => row.nombre,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n    },\n    {\n      name: 'Empresa',\n      selector: (row) => row.empresa,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n    },\n    {\n      name: 'Banco',\n      selector: (row) => row.banco,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Moneda',\n      selector: (row) => row.moneda,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Código ACH',\n      selector: (row) => row.codigo_ach,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (ExistePermiso('Modulo Cuentas') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"primary\"\n              size=\"sm\"\n              title=\"Editar Cuenta\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/cuentas/editar',\n                  id_cuenta: row.id_cuenta,\n                  numero_cuenta: row.numero_cuenta,\n                  nombre: row.nombre,\n                  id_empresa: row.id_empresa,\n                  id_banco: row.id_banco,\n                  id_moneda: row.id_moneda,\n                  codigo_ach: row.codigo_ach,\n                })\n              }\n            >\n              <FaPen />\n            </CButton>{' '}\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar Cuenta\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_cuenta, 1, row.numero_cuenta)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo Cuentas') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarCuenta(idCuenta, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/cuentas/nueva')}\n          >\n            Crear Nueva\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay usuarios que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default Cuentas\n"],"sourceRoot":""}