{"version":3,"sources":["services/postCondicionGrupo.js","services/getCondicionGrupo.js","views/components/condicion/condiciongrupo/ConsultaCG.js"],"names":["API","process","postCondicionGrupo","idCondicionGrupo","idCondicion","grupos","opcion","idGrupo","estado","id_usuario","token","ApiFinal","ApiWhere","datos","id_condiciongrupo","id_condicionautorizacion","id_grupoautorizacion","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getCondicionGrupo","Descripcion","ConsultarPR","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","results","setList","show","setShow","setIdGrupo","setEstado","setOpcion","mensaje","setMensaje","mostrarModal","id_grupo","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","id_condicion","items","detalle","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","result","crudCondicionGrupo","style","width","textAlign","fontWeight","borderColor","descripcion","hover","responsive","align","className","map","item","i","eliminado","identificador","size","title","pathname","nombre"],"mappings":"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","file":"static/js/37.d775bcb5.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}condiciongrupo`\n\nexport function postCondicionGrupo(\n  idCondicionGrupo,\n  idCondicion,\n  grupos,\n  opcion,\n  idGrupo,\n  estado,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_condiciongrupo: idCondicionGrupo,\n    id_condicionautorizacion: idCondicion,\n    grupos: grupos,\n    opcion: opcion,\n    id_grupoautorizacion: idGrupo,\n    activo: estado,\n    id_usuario: id_usuario,\n  }\n\n  if (grupos !== '') {\n    ApiWhere += '/' + grupos\n  }\n  if (idCondicionGrupo !== '' && opcion !== '') {\n    ApiWhere += '/' + idCondicionGrupo + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}condiciongrupo`\n\nexport function getCondicionGrupo(idCondicion, Descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idCondicion !== null) {\n    ApiWhere += '/' + idCondicion\n  }\n  if (Descripcion !== null) {\n    ApiWhere += '/' + Descripcion\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { postCondicionGrupo } from '../../../../services/postCondicionGrupo'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getCondicionGrupo } from '../../../../services/getCondicionGrupo'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useSession } from 'react-use-session'\nimport { Modal } from 'react-bootstrap'\nimport { FaTrash, FaPen } from 'react-icons/fa'\nimport { BsToggles } from 'react-icons/bs'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n\nconst ConsultarPR = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [show, setShow] = useState(false)\n  const [idGrupo, setIdGrupo] = useState(0)\n  const [estado, setEstado] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    getCondicionGrupo(location.id_condicion, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function mostrarModal(id_grupo, opcion, estado) {\n    if (opcion == 1) {\n      setMensaje('Est치 seguro de eliminar este grupo de autorizaci칩n?')\n      setIdGrupo(id_grupo)\n      setOpcion(opcion)\n      setShow(true)\n    } else if (opcion == 2) {\n      setMensaje('Est치 seguro de cambiar el estado de este grupo de autorizaci칩n?')\n      setIdGrupo(id_grupo)\n      setEstado(estado)\n      setOpcion(opcion)\n      setShow(true)\n    }\n  }\n\n  async function crudCondicionGrupo(id_condicion, id_condiciongrupo, opcion, estado) {\n    let result\n    if (opcion == 1) {\n      const respuesta = await postCondicionGrupo(\n        id_condiciongrupo,\n        '',\n        '',\n        '1',\n        '',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getCondicionGrupo(id_condicion, null, session.api_token).then((items) => {\n          setList(items.detalle)\n        })\n      }\n    } else if (opcion == 2) {\n      if (estado == 0) {\n        result = '1'\n      } else {\n        result = '0'\n      }\n      const respuesta = await postCondicionGrupo(\n        id_condiciongrupo,\n        '',\n        '',\n        '3',\n        '',\n        result,\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getCondicionGrupo(id_condicion, null, session.api_token).then((items) => {\n          setList(items.detalle)\n        })\n      }\n    } else if (opcion == 3) {\n      setShow(false)\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 3) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    } else {\n      setShow(false)\n    }\n  }\n\n  if (session) {\n    if (location.id_condicion) {\n      return (\n        <>\n          <Modal variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmaci칩n</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n                Cancelar\n              </CButton>\n              <CButton\n                color=\"primary\"\n                onClick={() =>\n                  crudCondicionGrupo(location.id_condicion, idGrupo, opcion, estado).then(() =>\n                    Cancelar(1),\n                  )\n                }\n              >\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div\n            style={{\n              width: '100%',\n              textAlign: 'center',\n              fontWeight: 'bold',\n              borderColor: 'black',\n            }}\n          >\n            <p>{location.descripcion}</p>\n          </div>\n          <CTable hover responsive align=\"middle\" className=\"mb-0 border\">\n            <CTableHead color=\"light\">\n              <CTableRow>\n                <CTableHeaderCell style={{ textAlign: 'center', width: '50%' }}>\n                  Nombre Grupo\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Estado Grupo</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Acciones</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {results.map((item, i) => {\n                let estado = 'Inactivo'\n                if (item.eliminado == 0) {\n                  if (item.activo == 1) {\n                    estado = 'Activo'\n                  }\n                  return (\n                    <CTableRow key={item.id_condiciongrupo}>\n                      <CTableDataCell className=\"text-center\">{item.identificador}</CTableDataCell>\n                      <CTableDataCell className=\"text-center\">{estado}</CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CButton\n                          color=\"primary\"\n                          size=\"sm\"\n                          title=\"Elegir Nuevo Grupo\"\n                          onClick={() =>\n                            history.push({\n                              pathname: '/condiciones/editarCG',\n                              id_condiciongrupo: item.id_condiciongrupo,\n                              id_condicion: item.id_condicion,\n                              id_grupo: item.id_grupo,\n                              identificador: item.identificador,\n                              nombre: location.descripcion,\n                              estado: item.activo,\n                            })\n                          }\n                        >\n                          <FaPen />\n                        </CButton>{' '}\n                        <CButton\n                          color=\"danger\"\n                          size=\"sm\"\n                          title=\"Eliminar Grupo\"\n                          onClick={() => mostrarModal(item.id_condiciongrupo, 1, '')}\n                        >\n                          <FaTrash />\n                        </CButton>{' '}\n                        <CButton\n                          color=\"info\"\n                          size=\"sm\"\n                          title=\"Cambiar Estado\"\n                          onClick={() => mostrarModal(item.id_condiciongrupo, 2, item.activo)}\n                        >\n                          <BsToggles />\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                }\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )\n    } else {\n      history.push('/condiciones')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARG칍 EL C칍DIGO DE CONDICI칍N. REGRESE A LA PANTALLA DE PAGOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESI칍N ACTIVA.</div>\n  }\n}\n\nexport default ConsultarPR\n"],"sourceRoot":""}