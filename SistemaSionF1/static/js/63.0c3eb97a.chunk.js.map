{"version":3,"sources":["services/postPerfilRol.js","services/getRoles.js","views/components/perfil/perfilrol/PerfilRol.js"],"names":["API","process","postPerfilRol","idPerfilRol","idPerfil","roles","opcion","idRol","estado","id_usuario","token","ApiFinal","ApiWhere","datos","id_perfilrol","id_perfil","id_rol","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getRoles","Descripcion","PerfilRol","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","results","setList","mensaje","setMensaje","titulo","setTitulo","color","setColor","form","setValues","useEffect","mounted","api_token","items","handleInput","event","target","name","value","handleSubmit","async","result","preventDefault","markedCheckbox","document","getElementsByName","checkbox","checked","respuesta","id","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","onClick","onClose","dismissible","Heading","className","marginBottom","size","goBack","display","alignItems","width","type","placeholder","descripcion","disabled","map","item","i","eliminado","label","onChange"],"mappings":"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","file":"static/js/63.0c3eb97a.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}perfilrol`\n\nexport function postPerfilRol(\n  idPerfilRol,\n  idPerfil,\n  roles,\n  opcion,\n  idRol,\n  estado,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_perfilrol: idPerfilRol,\n    id_perfil: idPerfil,\n    roles: roles,\n    opcion: opcion,\n    id_rol: idRol,\n    activo: estado,\n    id_usuario: id_usuario,\n  }\n\n  if (roles !== '') {\n    ApiWhere += '/' + roles\n  }\n  if (idPerfilRol !== '' && opcion !== '') {\n    ApiWhere += '/' + idPerfilRol + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}roles`\n\nexport function getRoles(idRol, Descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idRol !== null) {\n    ApiWhere += '/' + idRol\n  }\n  if (Descripcion !== null) {\n    ApiWhere += '/' + Descripcion\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { postPerfilRol } from '../../../../services/postPerfilRol'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getRoles } from '../../../../services/getRoles'\nimport { FiUserPlus } from 'react-icons/fi'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormCheck,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst PerfilRol = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [results, setList] = useState([])\n  const [mensaje, setMensaje] = useState('')\n  const [titulo, setTitulo] = useState('Error!')\n  const [color, setColor] = useState('danger')\n  const [form, setValues] = useState({\n    estado: '',\n  })\n\n  useEffect(() => {\n    let mounted = true\n    getRoles(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.roles)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    let result = ''\n    event.preventDefault()\n    var markedCheckbox = document.getElementsByName('estado')\n    for (var checkbox of markedCheckbox) {\n      if (checkbox.checked) {\n        result += checkbox.value + '|'\n      }\n    }\n    if (result !== '') {\n      const respuesta = await postPerfilRol(\n        '',\n        location.id_perfil,\n        result,\n        '',\n        '',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/perfiles')\n      } else if (respuesta === 'Error') {\n        setShow(true)\n        setTitulo('Error!')\n        setMensaje('Error de conexión.')\n      } else if (respuesta === 'Repetidos') {\n        setShow(true)\n        setTitulo('Aviso!')\n        setColor('warning')\n        setMensaje(\n          'Los roles seleccionados ya fueron elegidos para este perfil!' + ' Intente con otros.',\n        )\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has seleccionado ningún rol.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    if (location.id_perfil) {\n      return (\n        <div style={{ flexDirection: 'row' }}>\n          <CContainer>\n            <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Confirmación</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{mensaje}</Modal.Body>\n              <Modal.Footer>\n                <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                  Cancelar\n                </CButton>\n                <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                  Aceptar\n                </CButton>\n              </Modal.Footer>\n            </Modal>\n            <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>{titulo}</Alert.Heading>\n              <p>{mensaje}</p>\n            </Alert>\n            <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n              <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n                <FaArrowLeft />\n                &nbsp;&nbsp;Regresar\n              </Button>\n            </div>\n            <br />\n            <br />\n            <CCard style={{ display: 'flex', alignItems: 'center' }}>\n              <CCardBody style={{ width: '80%' }}>\n                <CForm style={{ width: '100%' }}>\n                  <h1>Asignación de Roles</h1>\n                  <p className=\"text-medium-emphasis\">Asigne algún rol al perfil</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiUserPlus />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Nombre\"\n                      name=\"nombre\"\n                      value={location.descripcion}\n                      disabled={true}\n                    />\n                  </CInputGroup>\n                  {results.map((item, i) => {\n                    if (item.eliminado == 0 && item.activo == 1) {\n                      return (\n                        <CFormCheck\n                          key={item.id_rol}\n                          value={item.id_rol}\n                          type=\"checkbox\"\n                          name=\"estado\"\n                          label={item.descripcion}\n                          onChange={handleInput}\n                        />\n                      )\n                    }\n                  })}\n                  <br />\n                  <CButton color=\"primary\" onClick={handleSubmit}>\n                    Guardar Cambios\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CContainer>\n        </div>\n      )\n    } else {\n      history.push('/perfiles')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL PERFIL. REGRESE A LA PANTALLA DE PERFILES.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default PerfilRol\n"],"sourceRoot":""}