{"version":3,"sources":["services/getEstadosFlujo.js","services/postEstadoFlujo.js","views/components/flujos/estadoflujo/EditarEstadoFlujo.js"],"names":["API","process","getEstadosFlujo","idEstado","descripcion","token","ApiFinal","ApiWhere","length","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","postEstadoFlujo","idEstadoPadre","estado","opcion","id_usuario","datos","id_estadoflujo","id_estadoflujopadre","activo","data","JSON","stringify","body","EditarEstadoFlujo","history","useHistory","location","useLocation","time","setTime","useState","results","setList","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","form","setValues","estadopadre","id_estadopadre","useEffect","mounted","api_token","items","estados","handleInput","event","target","name","value","handleSubmit","async","preventDefault","id_estado","id","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","placeholder","rows","onChange","defaultValue","map","item","i","eliminado"],"mappings":"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","file":"static/js/38.35673960.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}estadoflujo`\n\nexport function getEstadosFlujo(idEstado, descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idEstado !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&id_estadoflujo=' + idEstado\n    } else {\n      ApiWhere += '?id_estadoflujo=' + idEstado\n    }\n  }\n  if (descripcion !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&descripcion=' + descripcion\n    } else {\n      ApiWhere += '?descripcion=' + descripcion\n    }\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}estadoflujo`\n\nexport function postEstadoFlujo(\n  idEstado,\n  idEstadoPadre,\n  descripcion,\n  estado,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_estadoflujo: idEstado,\n    id_estadoflujopadre: idEstadoPadre,\n    descripcion: descripcion,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idEstado !== '' && opcion !== '') {\n    ApiWhere += '/' + idEstado + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { getEstadosFlujo } from '../../../../services/getEstadosFlujo'\nimport { postEstadoFlujo } from '../../../../services/postEstadoFlujo'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { FiSettings, FiGrid } from 'react-icons/fi'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CInputGroupText,\n  CInputGroup,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst EditarEstadoFlujo = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const [results, setList] = useState([])\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n\n  const [form, setValues] = useState({\n    estadopadre: location.id_estadopadre,\n    descripcion: location.descripcion,\n    estado: location.estado,\n  })\n\n  useEffect(() => {\n    let mounted = true\n    getEstadosFlujo(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.estados)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (form.descripcion !== '' && form.estado !== '') {\n      event.preventDefault()\n      const respuesta = await postEstadoFlujo(\n        location.id_estado,\n        form.estadopadre,\n        form.descripcion,\n        form.estado,\n        '1',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/estadosflujo')\n      }\n    } else {\n      setShow(true)\n      setMensaje('No has llenado todos los campos')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    if (location.id_estado) {\n      return (\n        <div style={{ flexDirection: 'row' }}>\n          <CContainer>\n            <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Confirmaci√≥n</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{mensaje}</Modal.Body>\n              <Modal.Footer>\n                <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                  Cancelar\n                </CButton>\n                <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                  Aceptar\n                </CButton>\n              </Modal.Footer>\n            </Modal>\n            <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n              <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n                <FaArrowLeft />\n                &nbsp;&nbsp;Regresar\n              </Button>\n            </div>\n            <br />\n            <br />\n            <Alert show={show} variant=\"danger\" onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>Error!</Alert.Heading>\n              <p>{mensaje}</p>\n            </Alert>\n            <CCard style={{ display: 'flex', alignItems: 'center' }}>\n              <CCardBody style={{ width: '80%' }}>\n                <CForm style={{ width: '100%' }}>\n                  <h1>Modificaci√≥n del Estado de Flujo</h1>\n                  <p className=\"text-medium-emphasis\">\n                    Modifique la informaci√≥n del estado de flujo\n                  </p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiGrid />\n                    </CInputGroupText>\n                    <textarea\n                      placeholder=\"Descripci√≥n\"\n                      name=\"descripcion\"\n                      className=\"form-control\"\n                      rows=\"2\"\n                      onChange={handleInput}\n                      defaultValue={location.descripcion}\n                    ></textarea>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiSettings />\n                    </CInputGroupText>\n                    <CFormSelect name=\"estadopadre\" onChange={handleInput}>\n                      <option>Seleccione nuevo estado superior. (Opcional)</option>\n                      {results.map((item, i) => {\n                        if (item.eliminado !== '1' && item.activo !== '0') {\n                          return (\n                            <option key={item.id_estadoflujo} value={item.id_estadoflujo}>\n                              {item.descripcion}\n                            </option>\n                          )\n                        }\n                      })}\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiSettings />\n                    </CInputGroupText>\n                    <CFormSelect name=\"estado\" onChange={handleInput}>\n                      <option>Seleccione estado. (Opcional)</option>\n                      <option value=\"1\">Activo</option>\n                      <option value=\"0\">Inactivo</option>\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CButton color=\"primary\" onClick={handleSubmit}>\n                    Guardar Cambios\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CContainer>\n        </div>\n      )\n    } else {\n      history.push('/estadosflujo')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARG√ì EL C√ìDIGO DEL ESTADO. REGRESE A LA PANTALLA DE ESTADOS DE PAGO.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESI√ìN ACTIVA.</div>\n  }\n}\n\nexport default EditarEstadoFlujo\n"],"sourceRoot":""}