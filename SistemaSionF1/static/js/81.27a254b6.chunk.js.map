{"version":3,"sources":["services/postCrudCuentaGrupoAutorizacion.js","services/getCuentaGrupoAutorizacion.js","views/components/cuentagrupoautorizacion/listado/CuentaGrupoAutorizacion.js"],"names":["API","process","postCrudCuentaGrupoAutorizacion","idCuentaGrupoAutorizacion","id_grupoautorizacion","CodigoCuenta","opcion","id_usuario","token","ApiFinal","ApiWhere","datos","id_cuentagrupo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getCuentaGrupoAutorizacion","CuentaGrupoAutorizacion","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","idCuentaGrupo","setidCuentaGrupo","setOpcion","mensaje","setMensaje","ExistePermiso","objeto","result","item","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","cuenta_grupo_autorizacion","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","center","sortable","wrap","identificador","cell","estado","activo","deshabilitar","color","size","title","disabled","onClick","mostrarModal","width","tableData","filterPlaceholder","export","print","Modal","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarRol","className","marginBottom","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/81.27a254b6.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}cuentagrupoautorizacion`\n\nexport function postCrudCuentaGrupoAutorizacion(\n  idCuentaGrupoAutorizacion,\n  id_grupoautorizacion,\n  CodigoCuenta,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_cuentagrupo: idCuentaGrupoAutorizacion,\n    opcion: opcion,\n    id_usuario: id_usuario,\n    CodigoCuenta: CodigoCuenta,\n    id_grupoautorizacion: id_grupoautorizacion,\n  }\n\n  if (idCuentaGrupoAutorizacion !== '' && opcion !== '') {\n    ApiWhere += '/' + idCuentaGrupoAutorizacion + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}cuentagrupoautorizacion`\n\nexport function getCuentaGrupoAutorizacion(idCuentaGrupoAutorizacion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idCuentaGrupoAutorizacion !== null) {\n    ApiWhere += '/' + idCuentaGrupoAutorizacion\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport { getCuentaGrupoAutorizacion } from '../../../../services/getCuentaGrupoAutorizacion'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { postCrudCuentaGrupoAutorizacion } from '../../../../services/postCrudCuentaGrupoAutorizacion'\nimport { useSession } from 'react-use-session'\nimport { FaUserEdit, FaTrash, FaUserCog, FaClipboardList } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport { CButton } from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst CuentaGrupoAutorizacion = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idCuentaGrupo, setidCuentaGrupo] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo CuentaGrupoAutorizacion'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getCuentaGrupoAutorizacion(null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.cuenta_grupo_autorizacion)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  function mostrarModal(id_cuentagrupo, opcion) {\n    setidCuentaGrupo(id_cuentagrupo)\n    setOpcion(opcion)\n    setShow(true)\n    setMensaje('EstÃ¡ seguro de eliminar la(s) cuenta(s) listado?')\n  }\n\n  async function eliminarRol(id, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postCrudCuentaGrupoAutorizacion(\n        id,\n        '',\n        '',\n        '2',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getCuentaGrupoAutorizacion(null, session.api_token).then((items) => {\n          setList(items.cuenta_grupo_autorizacion)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Cuenta(s)',\n      selector: (row) => row.CodigoCuenta,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Grupo autorizaciÃ³n',\n      selector: (row) => row.identificador,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        let deshabilitar = false\n        if (ExistePermiso('Modulo CuentaGrupoAutorizacion') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar cuenta\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_cuentagrupo, 1)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo CuentaGrupoAutorizacion') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>ConfirmaciÃ³n</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarRol(idCuentaGrupo, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/cuentagrupoautorizacion/nuevo')}\n          >\n            Agregar Nueva\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay usuarios que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÃN ACTIVA.</div>\n  }\n}\n\nexport default CuentaGrupoAutorizacion\n"],"sourceRoot":""}