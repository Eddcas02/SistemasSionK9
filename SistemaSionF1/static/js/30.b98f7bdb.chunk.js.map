{"version":3,"sources":["services/getGruposAutorizacion.js","services/getUsuarioGrupo.js","services/postUsuarioGrupo.js","views/components/usuarios/usuariogrupo/EditarUsuarioGrupo.js"],"names":["API","process","getGruposAutorizacion","idGrupo","idGrupoPadre","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","getUsuarioGrupo","idUsuario","IdGrupo","err","message","alert","postUsuarioGrupo","idUsuarioGrupo","opcion","nivel","estado","id_usuario","datos","id_usuariogrupo","id_grupoautorizacion","activo","id_usuario_s","data","JSON","stringify","body","EditarUsuarioGrupo","props","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","results","setList","detalle","setDetalle","show","setShow","showM","setShowM","mensaje","setMensaje","titulo","setTitulo","color","setColor","form","setValues","grupo","id_grupo","useEffect","mounted","api_token","items","grupos","handleInput","event","target","name","value","handleSubmit","async","result","item","Repetido","preventDefault","id","push","Cancelar","postSesionUsuario","style","flexDirection","variant","onClose","dismissible","Heading","responsive","onHide","centered","Header","closeButton","Title","Body","Footer","onClick","display","alignItems","width","className","type","placeholder","nombre","disabled","email","onChange","selected","identificador","map","i","eliminado","num_niveles","niveles","obtenerNiveles","numero_niveles","toString"],"mappings":"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","file":"static/js/30.b98f7bdb.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}grupoautorizacion`\n\nexport function getGruposAutorizacion(idGrupo, idGrupoPadre, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idGrupo !== null) {\n    ApiWhere += '/' + idGrupo\n  }\n  if (idGrupoPadre !== null) {\n    ApiWhere += '/' + idGrupoPadre\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}usuariogrupo`\n\nexport function getUsuarioGrupo(idUsuario, IdGrupo, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idUsuario !== null) {\n    ApiWhere += '/' + idUsuario\n  }\n  if (IdGrupo !== null) {\n    ApiWhere += '/' + IdGrupo\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((err) => {\n      if (err.message == 'Failed to fetch') {\n        alert('Error de conexión. Revise si está conectado a Internet.')\n      }\n    })\n}\n","const API = `${process.env.REACT_APP_API_URL}usuariogrupo`\n\nexport function postUsuarioGrupo(\n  idUsuarioGrupo,\n  idUsuario,\n  opcion,\n  idGrupo,\n  nivel,\n  estado,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuariogrupo: idUsuarioGrupo,\n    id_usuario: idUsuario,\n    opcion: opcion,\n    id_grupoautorizacion: idGrupo,\n    nivel: nivel,\n    activo: estado,\n    id_usuario_s: id_usuario,\n  }\n\n  if (idUsuarioGrupo !== '' && opcion !== '') {\n    ApiWhere += '/' + idUsuarioGrupo + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { postUsuarioGrupo } from '../../../../services/postUsuarioGrupo'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getGruposAutorizacion } from '../../../../services/getGruposAutorizacion'\nimport { getUsuarioGrupo } from '../../../../services/getUsuarioGrupo'\nimport { FiUser, FiAtSign } from 'react-icons/fi'\nimport { FaUsers } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport { Modal, Alert } from 'react-bootstrap'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\n\nconst EditarUsuarioGrupo = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [detalle, setDetalle] = useState([])\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [titulo, setTitulo] = useState('Error!')\n  const [color, setColor] = useState('danger')\n\n  const [form, setValues] = useState({\n    grupo: location.id_grupo,\n    estado: location.estado,\n    nivel: location.nivel,\n  })\n\n  useEffect(() => {\n    let mounted = true\n    getGruposAutorizacion(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.grupos)\n      }\n    })\n    getUsuarioGrupo(location.id_usuario, null, session.api_token).then((items) => {\n      if (mounted) {\n        setDetalle(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function Repetido(grupo, nivel) {\n    let result = 0\n    for (let item of detalle) {\n      if (grupo === item.id_grupoautorizacion && nivel === item.nivel) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  function obtenerNiveles(num_niveles) {\n    var niveles = []\n    for (let i = 0; i < num_niveles; i++) {\n      niveles.push(i + 1)\n    }\n    return niveles\n  }\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (form.grupo !== '' && form.nivel !== '') {\n      if (Repetido(form.grupo, form.nivel)) {\n        setShow(true)\n        setTitulo('Grupo y nivel repetidos!')\n        setColor('warning')\n        setMensaje('Este grupo y nivel ya fueron asignados al usuario. Intente de nuevo.')\n      } else {\n        event.preventDefault()\n        const respuesta = await postUsuarioGrupo(\n          location.id_usuariogrupo,\n          location.id_usuario,\n          '2',\n          form.grupo,\n          form.nivel,\n          1,\n          session.id,\n          session.api_token,\n        )\n        if (respuesta === 'OK') {\n          history.push('/usuarios')\n        }\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has llenado todos los campos')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    if (location.id_usuario) {\n      return (\n        <div style={{ flexDirection: 'row' }}>\n          <CContainer>\n            <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>{titulo}</Alert.Heading>\n              <p>{mensaje}</p>\n            </Alert>\n            <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Confirmación</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{mensaje}</Modal.Body>\n              <Modal.Footer>\n                <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                  Cancelar\n                </CButton>\n                <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                  Aceptar\n                </CButton>\n              </Modal.Footer>\n            </Modal>\n            <CCard style={{ display: 'flex', alignItems: 'center' }}>\n              <CCardBody style={{ width: '80%' }}>\n                <CForm style={{ width: '100%' }}>\n                  <h1>Asignación Nuevo Grupo Autorización</h1>\n                  <p className=\"text-medium-emphasis\">Asigne un grupo de autorización al usuario</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiUser />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Nombre\"\n                      name=\"nombre\"\n                      value={location.nombre}\n                      disabled={true}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiAtSign />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"email\"\n                      placeholder=\"Correo\"\n                      name=\"email\"\n                      value={location.email}\n                      onChange={handleInput}\n                      disabled={true}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FaUsers />\n                    </CInputGroupText>\n                    <CFormSelect name=\"grupo\" onChange={handleInput}>\n                      <option selected={true} value={location.id_grupo}>\n                        {location.identificador}\n                      </option>\n                      {results.map((item, i) => {\n                        if (\n                          item.eliminado == 0 &&\n                          item.activo == 1 &&\n                          item.id_grupo !== location.id_grupo\n                        ) {\n                          return (\n                            <option key={item.id_grupo} value={item.id_grupo}>\n                              {item.identificador}\n                            </option>\n                          )\n                        }\n                      })}\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>Nivel</CInputGroupText>\n                    <CFormSelect name=\"nivel\" onChange={handleInput}>\n                      <option value={location.nivel}>{location.nivel}</option>\n                      {results.map((item, i) => {\n                        if (item.id_grupo == form.grupo) {\n                          var niveles = obtenerNiveles(item.numero_niveles)\n                          return niveles.map((nivel) => {\n                            if (nivel != location.nivel) {\n                              return (\n                                <option key={nivel.toString()} value={nivel}>\n                                  {nivel}\n                                </option>\n                              )\n                            }\n                          })\n                        }\n                      })}\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CButton color=\"primary\" onClick={handleSubmit}>\n                    Guardar Cambios\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CContainer>\n        </div>\n      )\n    } else {\n      history.push('/usuarios')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL USUARIO. REGRESE A LA PANTALLA DE USUARIOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default EditarUsuarioGrupo\n"],"sourceRoot":""}