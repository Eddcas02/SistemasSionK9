{"version":3,"sources":["services/postArchivoFlujo.js","components/FileUploader.js","views/components/flujos/archivoflujo/NuevoArchivoFlujo.js"],"names":["API","process","postArchivoFlujo","idArchivoFlujo","idFlujo","idUsuario","descripcion","archivos","nombre_archivo","opcion","token","ApiFinal","ApiWhere","datos","id_archivoflujo","id_flujo","id_usuario","url","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","FileUploader","prop","prefijo","setValor","useState","prefijoTmp","setValorTmp","getUploadParams","file","meta","FormData","fileModificado","type","imagen","Image","src","doc","jsPDF","compress","imgProps","getImageProperties","imgWidth","internal","pageSize","getWidth","pageHeight","getHeight","imgHeight","height","width","heightLeft","position","addImage","addPage","output","generarPDF","URL","createObjectURL","append","onChangeStatus","status","nombre","pago","length","result","characters","largo","i","push","charAt","Math","floor","random","join","crearid","sendData","name","sendDataRemove","onSubmit","files","allFiles","forEach","f","remove","senDataRemoveAll","inputContent","accept","inputWithFilesContent","submitButtonContent","NuevoArchivoFlujo","props","history","useHistory","location","useLocation","time","setTime","session","clear","useSession","results","setList","show","setShow","showM","setShowM","mensaje","setMensaje","color","setColor","titulo","setTitulo","setDescripcion","setArchivos","mostrar","setMostrar","urlArchivo","setUrlArchivo","filteredItems","cargaArchivo","setCargaArchivo","llaveArchivos","setLlaveArchivos","showME","setShowME","showMF","setShowMF","mensajeE","setMensajeE","mensajeF","setMensajeF","archivoEliminar","setArchivoEliminar","MostrarFinalizarCarga","setMostrarFinalizarCarga","useEffect","mounted","getArchivosFlujo","api_token","items","estado","handleInput","event","target","value","handleSubmit","async","preventDefault","id","handlerRemoveAll","Cancelar","postSesionUsuario","handlerUploadFile","handlerRemoveFile","filter","item","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","selector","row","index","sortable","nombre_usuario","center","wrap","cell","alignItems","archivo","href","Button","variant","size","title","onClick","mostrarModal","url_archivo","usuario","user_name","pathname","ArchivoOriginal","archivo_original","grupo","mostrarModalEliminar","tableData","filterPlaceholder","export","print","Accion","postFlujos","postFlujoDetalle","go","cargado","asignado","finalizarCarga","ReactDOM","createPortal","background","left","top","zIndex","display","flexDirection","overflowY","className","margin","textAlign","document","marginBottom","goBack","Modal","responsive","onHide","centered","Header","closeButton","Title","Body","Footer","Alert","onClose","dismissible","Heading","placeholder","defaultValue","onChange","block","marginTop","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/77.7eeb9e18.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}archivosflujo`\n\nexport function postArchivoFlujo(\n  idArchivoFlujo,\n  idFlujo,\n  idUsuario,\n  descripcion,\n  archivos,\n  nombre_archivo,\n  opcion,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_archivoflujo: idArchivoFlujo,\n    id_flujo: idFlujo,\n    id_usuario: idUsuario,\n    descripcion: descripcion,\n    archivos: archivos,\n    nombre_archivo: nombre_archivo,\n    opcion: opcion,\n    url: `${process.env.REACT_APP_URL_ARCHIVOS}`,\n  }\n  const data = JSON.stringify(datos)\n\n  if (idArchivoFlujo !== '' && opcion !== '') {\n    ApiWhere += '/' + idArchivoFlujo + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState } from 'react'\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport { jsPDF } from 'jspdf'\n\nconst FileUploader = (prop) => {\n  const [prefijo, setValor] = useState('')\n  const [prefijoTmp, setValorTmp] = useState('')\n\n  function crearid(length) {\n    var result = []\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    var largo = characters.length\n    for (var i = 0; i < length; i++) {\n      result.push(characters.charAt(Math.floor(Math.random() * largo)))\n    }\n    return result.join('')\n  }\n\n  function generarPDF(url) {\n    var imagen = new Image()\n    imagen.src = url\n    const doc = new jsPDF({ compress: true })\n    const imgProps = doc.getImageProperties(imagen)\n    /* const pdfWidth = doc.internal.pageSize.getWidth()\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width\n    doc.addImage(imagen, 'PNG', 0, 0, pdfWidth, pdfHeight) */\n    let imgWidth = doc.internal.pageSize.getWidth()\n    let pageHeight = doc.internal.pageSize.getHeight()\n    let imgHeight = (imgProps.height * imgWidth) / imgProps.width\n    let heightLeft = imgHeight\n    let position = 5\n    doc.addImage(imagen, 'PNG', 0, position, imgWidth, imgHeight, '', 'FAST')\n    heightLeft -= pageHeight\n    while (heightLeft >= 0) {\n      //let diferenciaPosicion = heightLeft - imgHeight\n      position -= 297\n      doc.addPage()\n      doc.addImage(imagen, 'PNG', 0, position, imgWidth, imgHeight, '', 'FAST')\n      heightLeft -= pageHeight\n    }\n    return doc.output('blob')\n  }\n\n  const getUploadParams = ({ file, meta }) => {\n    const body = new FormData()\n    let fileModificado\n    if (file.type === 'image/png' || file.type === 'image/jpeg') {\n      fileModificado = generarPDF(URL.createObjectURL(file))\n    } else {\n      fileModificado = file\n    }\n    body.append('original', file)\n    body.append('image', fileModificado)\n    body.append('prefijo', prefijo)\n    body.append('prefijoTmp', prefijoTmp)\n\n    return { url: `${process.env.REACT_APP_BACKEND_URL}upload.php`, body }\n  }\n\n  const handleChangeStatus = ({ meta, file }, status) => {\n    let pago = prop.nombre\n    let nombre\n    if (status === 'preparing') {\n      nombre = crearid(6) + '_' + pago\n      if (file.type === 'image/png' || file.type === 'image/jpeg') {\n        setValor(nombre + '.pdf')\n        setValorTmp(nombre)\n      } else if (file.type === 'application/pdf') {\n        setValor(nombre + '.pdf')\n        setValorTmp(nombre)\n      }\n    }\n    if (status === 'done') {\n      prop.sendData(prefijo + '|original_' + prefijoTmp + '_' + file.name)\n    }\n    if (status === 'removed') {\n      prop.sendDataRemove(prefijo + '|original_' + prefijoTmp + '_' + file.name)\n    }\n  }\n\n  const handleSubmit = (files, allFiles) => {\n    allFiles.forEach((f) => f.remove())\n    prop.senDataRemoveAll()\n  }\n\n  return (\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      inputContent=\"Cargar Archivo\"\n      accept=\"image/*,application/pdf\"\n      inputWithFilesContent={(files) => 'Cargar otro'}\n      submitButtonContent=\"Limpiar\"\n    />\n  )\n}\n\nexport default FileUploader\n","import React, { useState, useEffect, useMemo } from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport FileUploader from '../../../../components/FileUploader'\nimport { postFlujos } from '../../../../services/postFlujos'\nimport { postArchivoFlujo } from '../../../../services/postArchivoFlujo'\nimport { postFlujoDetalle } from '../../../../services/postFlujoDetalle'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { FiFile } from 'react-icons/fi'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n} from '@coreui/react'\nimport { FaArrowLeft, FaRegFilePdf, FaTrash, FaEdit } from 'react-icons/fa'\nimport { getArchivosFlujo } from '../../../../services/getArchivosFlujo'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\nimport 'bulma/css/bulma.css'\nimport 'material-design-icons/iconfont/material-icons.css'\n\nconst NuevoArchivoFlujo = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [color, setColor] = useState('danger')\n  const [titulo, setTitulo] = useState('Error!')\n  const [descripcion, setDescripcion] = useState(location.pago)\n  const [archivos, setArchivos] = useState([])\n  const [mostrar, setMostrar] = useState(false)\n  const [urlArchivo, setUrlArchivo] = useState('https://arxiv.org/pdf/quant-ph/0410100.pdf')\n  const filteredItems = results\n  const [cargaArchivo, setCargaArchivo] = useState(false)\n  const [llaveArchivos, setLlaveArchivos] = useState(0)\n  const [showME, setShowME] = useState(false)\n  const [showMF, setShowMF] = useState(false)\n  const [mensajeE, setMensajeE] = useState('')\n  const [mensajeF, setMensajeF] = useState('')\n  const [archivoEliminar, setArchivoEliminar] = useState(0)\n  const [MostrarFinalizarCarga, setMostrarFinalizarCarga] = useState(false)\n\n  useEffect(() => {\n    let mounted = true\n    getArchivosFlujo(location.id_flujo, null, session.api_token).then((items) => {\n      if (mounted) {\n        if (items.archivos.length > 0) {\n          if (location.estado > 1) {\n            setMostrarFinalizarCarga(false)\n          } else {\n            setMostrarFinalizarCarga(true)\n          }\n        } else {\n          setMostrarFinalizarCarga(false)\n        }\n        setList(items.archivos)\n      }\n    })\n    return () => (mounted = false)\n  }, [cargaArchivo])\n\n  const modalBody = () => (\n    <div\n      style={{\n        background: 'rgba(0,0,0,0.7)',\n        left: 0,\n        position: 'fixed',\n        top: 0,\n        height: '100%',\n        width: '100%',\n        zIndex: 10001,\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'scroll',\n      }}\n    >\n      <div className=\"float-right\" style={{ margin: '10px', textAlign: 'right' }}>\n        <Button variant=\"danger\" size=\"sm\" onClick={() => setMostrar(false)}>\n          Cerrar\n        </Button>\n      </div>\n      <object data={urlArchivo} type=\"application/pdf\" width=\"100%\" height=\"100%\">\n        <p>\n          Alternative text - include a link <a href={urlArchivo}>to the PDF!</a>\n        </p>\n      </object>\n    </div>\n  )\n\n  const handleInput = (event) => {\n    setDescripcion(event.target.value)\n  }\n\n  const finalizarCarga = async () => {\n    const respuesta = await postFlujos(\n      location.id_flujo,\n      '',\n      location.grupo,\n      '',\n      null,\n      session.id,\n      session.api_token,\n    )\n    if (location.grupo == null) {\n      const answer = await postFlujoDetalle(\n        location.id_flujo,\n        '2',\n        session.id,\n        'Documento de pago cargado',\n        '0',\n        session.api_token,\n      )\n      if (answer === 'OK') {\n        history.go(-1)\n      }\n    } else {\n      const cargado = await postFlujoDetalle(\n        location.id_flujo,\n        '2',\n        session.id,\n        'Documento de pago cargado',\n        '0',\n        session.api_token,\n      )\n      const asignado = await postFlujoDetalle(\n        location.id_flujo,\n        '3',\n        session.id,\n        'Asignado a responsable',\n        '0',\n        session.api_token,\n      )\n      if (cargado === 'OK' && asignado === 'OK') {\n        const respuesta = await postFlujos(\n          location.id_flujo,\n          '',\n          location.grupo,\n          '',\n          null,\n          session.id,\n          session.api_token,\n        )\n        if (respuesta === 'OK') {\n          history.go(-1)\n        }\n      }\n    }\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (descripcion !== '' && archivos.length > 0) {\n      const respuesta = await postArchivoFlujo(\n        '',\n        location.id_flujo,\n        session.id,\n        descripcion,\n        archivos,\n        '',\n        '',\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        setCargaArchivo(!cargaArchivo)\n        handlerRemoveAll()\n        setLlaveArchivos(llaveArchivos + 1)\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has llenado todos los campos.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n  const handlerUploadFile = (file) => {\n    setArchivos([...archivos, file])\n  }\n\n  const handlerRemoveFile = (file) => {\n    setArchivos([\n      ...archivos.filter(function (item) {\n        return item !== file\n      }),\n    ])\n  }\n\n  const handlerRemoveAll = () => {\n    setArchivos([])\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n\n  const columns = useMemo(() => [\n    {\n      name: '#',\n      selector: (row, index) => index + 1,\n      sortable: true,\n      width: '60px',\n    },\n    {\n      name: 'Usuario',\n      selector: (row) => row.nombre_usuario,\n      center: true,\n      sortable: true,\n      wrap: true,\n      width: '170px',\n    },\n    {\n      name: 'Nombre Archivo',\n      selector: (row) => row.descripcion,\n      center: true,\n      sortable: true,\n      wrap: true,\n      width: '190px',\n    },\n    {\n      name: 'Archivo',\n      cell: function OrderItems(row) {\n        return (\n          <div style={{ alignItems: 'center' }}>\n            <object data={row.archivo} type=\"application/pdf\" width=\"100%\" height=\"100%\">\n              <p>\n                Alternative text - include a link <a href={row.archivo}>to the PDF!</a>\n              </p>\n            </object>\n          </div>\n        )\n      },\n      center: true,\n      width: '490px',\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        return (\n          <div style={{ alignItems: 'center' }}>\n            <Button\n              variant=\"outline-danger\"\n              size=\"sm\"\n              target=\"_blank\"\n              title=\"Ver PDF\"\n              onClick={() => mostrarModal(row.archivo, session.user_name)}\n            >\n              <FaRegFilePdf />\n            </Button>{' '}\n            <CButton\n              color=\"success\"\n              size=\"sm\"\n              title=\"Editar archivo\"\n              onClick={() =>\n                history.push({\n                  pathname: '/archivoflujo/editar',\n                  id_archivoflujo: row.id_archivoflujo,\n                  ArchivoOriginal: row.archivo_original,\n                  id_flujo: location.id_flujo,\n                  pago: location.pago,\n                  grupo: location.grupo,\n                  estado: location.estado,\n                })\n              }\n            >\n              <FaEdit />\n            </CButton>{' '}\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar archivo\"\n              onClick={() => mostrarModalEliminar(row.id_archivoflujo)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '130px',\n    },\n  ])\n  const tableData = {\n    columns: columns,\n    data: filteredItems,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  function mostrarModal(url_archivo, usuario) {\n    setUrlArchivo(url_archivo)\n    setTitulo('Cargado por ' + usuario)\n    setMostrar(true)\n  }\n\n  function mostrarModalEliminar(id_archivoflujo) {\n    setArchivoEliminar(id_archivoflujo)\n    setMensajeE('¿Está seguro de eliminar este archivo?')\n    setShowME(true)\n  }\n\n  function mostrarFinalizarCarga() {\n    setMensajeF('¿Está seguro de finalizar la carga y pasar al siguiente paso?')\n    setShowMF(true)\n  }\n\n  async function Accion(opcion) {\n    if (opcion == 1) {\n      const respuesta = await postArchivoFlujo(\n        archivoEliminar,\n        '',\n        '',\n        '',\n        '',\n        '',\n        '1',\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        setCargaArchivo(!cargaArchivo)\n      }\n      setShowME(false)\n    } else if (opcion == 2) {\n      setShowME(false)\n    } else if (opcion == 3) {\n      setShowMF(false)\n      finalizarCarga()\n    } else if (opcion == 4) {\n      setShowMF(false)\n    }\n  }\n\n  if (session) {\n    if (location.id_flujo) {\n      return (\n        <>\n          {mostrar && ReactDOM.createPortal(modalBody(), document.body)}\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n            <Button\n              className={!MostrarFinalizarCarga ? 'd-none' : ''}\n              variant=\"success\"\n              size=\"sm\"\n              onClick={() => mostrarFinalizarCarga()}\n            >\n              Finalizar carga de archivos\n            </Button>\n          </div>\n          <br />\n          <br />\n          <div style={{ flexDirection: 'row' }}>\n            <CContainer>\n              <Modal\n                key=\"showM\"\n                responsive\n                variant=\"primary\"\n                show={showM}\n                onHide={() => Cancelar(2)}\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Confirmación</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{mensaje}</Modal.Body>\n                <Modal.Footer>\n                  <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                    Cancelar\n                  </CButton>\n                  <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                    Aceptar\n                  </CButton>\n                </Modal.Footer>\n              </Modal>\n              <Modal\n                key=\"showME\"\n                responsive\n                variant=\"primary\"\n                show={showME}\n                onHide={() => Accion(2)}\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Confirmación</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{mensajeE}</Modal.Body>\n                <Modal.Footer>\n                  <CButton color=\"secondary\" onClick={() => Accion(2)}>\n                    Cancelar\n                  </CButton>\n                  <CButton color=\"primary\" onClick={() => Accion(1)}>\n                    Aceptar\n                  </CButton>\n                </Modal.Footer>\n              </Modal>\n              <Modal\n                key=\"showMF\"\n                responsive\n                variant=\"primary\"\n                show={showMF}\n                onHide={() => Accion(4)}\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Confirmación</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{mensajeF}</Modal.Body>\n                <Modal.Footer>\n                  <CButton color=\"secondary\" onClick={() => Accion(4)}>\n                    Cancelar\n                  </CButton>\n                  <CButton color=\"primary\" onClick={() => Accion(3)}>\n                    Aceptar\n                  </CButton>\n                </Modal.Footer>\n              </Modal>\n              <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n                <Alert.Heading>{titulo}</Alert.Heading>\n                <p>{mensaje}</p>\n              </Alert>\n              <br />\n              <br />\n              <CCard style={{ display: 'flex', alignItems: 'center' }}>\n                <CCardBody style={{ width: '80%' }}>\n                  <CForm style={{ width: '100%' }}>\n                    <h1>Creación de Archivos de Flujo</h1>\n                    <p className=\"text-medium-emphasis\">Cree un nuevo archivo de flujo</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <FiFile />\n                      </CInputGroupText>\n                      <CFormControl\n                        placeholder=\"Descripción\"\n                        name=\"descripcion\"\n                        className=\"form-control\"\n                        defaultValue={location.pago}\n                        onChange={handleInput}\n                      />\n                    </CInputGroup>\n                    <FileUploader\n                      key={llaveArchivos}\n                      sendData={handlerUploadFile}\n                      sendDataRemove={handlerRemoveFile}\n                      senDataRemoveAll={handlerRemoveAll}\n                      nombre={location.pago}\n                    />\n                    <CButton\n                      color=\"primary\"\n                      block\n                      onClick={handleSubmit}\n                      style={{ marginTop: '15px' }}\n                    >\n                      Cargar Archivo\n                    </CButton>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CContainer>\n          </div>\n          <br />\n          <br />\n          <div style={{ flexDirection: 'row' }}>\n            <CContainer>\n              <CCard style={{ display: 'flex', alignItems: 'center' }}>\n                <CCardBody style={{ width: '100%' }}>\n                  <h1>Archivos de Flujo</h1>\n                  <br />\n                  <br />\n                  <DataTableExtensions {...tableData}>\n                    <DataTable\n                      columns={columns}\n                      noDataComponent=\"No hay archivos que mostrar\"\n                      data={filteredItems}\n                      customStyles={customStyles}\n                      pagination\n                      paginationPerPage={25}\n                      responsive={true}\n                      persistTableHead\n                      striped={true}\n                      dense\n                    />\n                  </DataTableExtensions>\n                </CCardBody>\n              </CCard>\n            </CContainer>\n          </div>\n        </>\n      )\n    } else {\n      history.go(-1)\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL NÚMERO DE PAGO. REGRESE A LA PANTALLA DE PAGOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default NuevoArchivoFlujo\n"],"sourceRoot":""}