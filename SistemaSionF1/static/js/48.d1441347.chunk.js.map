{"version":3,"sources":["services/getOcultarColumnaUsuario.js","services/postOcultarColumnaUsuario.js","views/components/usuarios/ocultarcolumnas/OcultarColumnas.js"],"names":["API","process","getOcultarColumnaUsuario","idUsuario","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","postOcultarColumnaUsuario","id_ocultarcolumnausuario","id_usuario","NombreColumna","opcion","estado","id_usuario_s","datos","activo","data","JSON","stringify","body","OcultarColumnas","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","idOcultar","setidOcultar","setOpcion","mensaje","setMensaje","resultsUsuarios","setListUsuarios","usuarioSeleccionado","setUsuarioSeleccionado","ExistePermiso","objeto","result","item","async","Cancelar","id","postSesionUsuario","api_token","push","useEffect","mounted","items","ocultar","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","usuario","center","sortable","wrap","nombre","apellido","cell","deshabilitar","color","size","title","disabled","onClick","mostrarModal","width","tableData","filterPlaceholder","export","print","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarOcultar","display","marginBottom","justifyContent","noDataComponent","pagination","paginationPerPage","responsive","persistTableHead","striped","dense","className"],"mappings":"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","file":"static/js/48.d1441347.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}ocultarcolumnausuario`\n\nexport function getOcultarColumnaUsuario(idUsuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idUsuario !== null) {\n    ApiWhere += '/' + idUsuario\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}ocultarcolumnausuario`\n\nexport function postOcultarColumnaUsuario(\n  id_ocultarcolumnausuario,\n  id_usuario,\n  NombreColumna,\n  opcion,\n  estado,\n  id_usuario_s,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuario: id_usuario,\n    NombreColumna: NombreColumna,\n    activo: estado,\n    id_usuario_s: id_usuario_s,\n  }\n\n  if (id_ocultarcolumnausuario !== '' && opcion !== '') {\n    ApiWhere += '/' + id_ocultarcolumnausuario + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { getOcultarColumnaUsuario } from '../../../../services/getOcultarColumnaUsuario'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postOcultarColumnaUsuario } from '../../../../services/postOcultarColumnaUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { useSession } from 'react-use-session'\nimport { FaPen, FaTrash, FaChevronUp, FaChevronDown } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CFormSelect,\n} from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\nimport { getUsuarios } from '../../../../services/getUsuarios'\n\nconst OcultarColumnas = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idOcultar, setidOcultar] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n  const [resultsUsuarios, setListUsuarios] = useState([])\n  const [usuarioSeleccionado, setUsuarioSeleccionado] = useState(0)\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo OcultarColumnas'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getOcultarColumnaUsuario(null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.ocultar)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  function mostrarModal(idOcultar, opcion) {\n    setidOcultar(idOcultar)\n    setMensaje('EstÃ¡ seguro de eliminar el registro?')\n    setOpcion(opcion)\n    setShow(true)\n  }\n\n  async function eliminarOcultar(idOcultar, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postOcultarColumnaUsuario(\n        idOcultar,\n        '',\n        '',\n        '2',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getOcultarColumnaUsuario(null, session.api_token).then((items) => {\n          setList(items.ocultar)\n        })\n      } else if (opcion == 2) {\n        setShow(false)\n      }\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Usuario',\n      selector: (row) => row.usuario,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Nombre',\n      selector: (row) => row.nombre + ' ' + row.apellido,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Columna',\n      selector: (row) => row.NombreColumna,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (ExistePermiso('Modulo OcultarColumnas') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar registro\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_ocultarcolumnausuario, 1)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo OcultarColumnas') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>ConfirmaciÃ³n</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarOcultar(idOcultar, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div style={{ display: 'flex', marginBottom: '10px', justifyContent: 'flex-end' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/ocultarcolumnas/nueva')}\n          >\n            Crear Nuevo\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay registros que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÃN ACTIVA.</div>\n  }\n}\n\nexport default OcultarColumnas\n"],"sourceRoot":""}