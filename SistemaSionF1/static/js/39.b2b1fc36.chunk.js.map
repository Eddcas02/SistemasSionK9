{"version":3,"sources":["services/getEstadosFlujo.js","services/postEstadoFlujo.js","views/components/flujos/estadoflujo/EstadosFlujo.js"],"names":["API","process","getEstadosFlujo","idEstado","descripcion","token","ApiFinal","ApiWhere","length","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","postEstadoFlujo","idEstadoPadre","estado","opcion","id_usuario","datos","id_estadoflujo","id_estadoflujopadre","activo","data","JSON","stringify","body","EstadosFlujo","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","setIdEstado","setOpcion","mensaje","setMensaje","ExistePermiso","objeto","result","item","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","estados","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","center","sortable","wrap","cell","asignacion","estadopadre","deshabilitar","color","size","title","disabled","onClick","pathname","id_estado","id_estadopadre","nombre","mostrarModal","width","tableData","filterPlaceholder","export","print","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarEstado","className","marginBottom","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/39.b2b1fc36.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}estadoflujo`\n\nexport function getEstadosFlujo(idEstado, descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idEstado !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&id_estadoflujo=' + idEstado\n    } else {\n      ApiWhere += '?id_estadoflujo=' + idEstado\n    }\n  }\n  if (descripcion !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&descripcion=' + descripcion\n    } else {\n      ApiWhere += '?descripcion=' + descripcion\n    }\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}estadoflujo`\n\nexport function postEstadoFlujo(\n  idEstado,\n  idEstadoPadre,\n  descripcion,\n  estado,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_estadoflujo: idEstado,\n    id_estadoflujopadre: idEstadoPadre,\n    descripcion: descripcion,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idEstado !== '' && opcion !== '') {\n    ApiWhere += '/' + idEstado + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport { getEstadosFlujo } from '../../../../services/getEstadosFlujo'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postEstadoFlujo } from '../../../../services/postEstadoFlujo'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { useSession } from 'react-use-session'\nimport { FaPen, FaTrash } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport { CButton } from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst EstadosFlujo = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idEstado, setIdEstado] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Estados Pago'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getEstadosFlujo(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.estados)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  function mostrarModal(id_estado, nombre, opcion) {\n    setIdEstado(id_estado)\n    setOpcion(opcion)\n    setShow(true)\n    setMensaje('Está seguro de eliminar el estado de pago ' + nombre + '?')\n  }\n\n  async function eliminarEstado(id_estado, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postEstadoFlujo(\n        id_estado,\n        '',\n        '',\n        '',\n        '2',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getEstadosFlujo(null, null, session.api_token).then((items) => {\n          setList(items.estados)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Estado Pago Destino',\n      selector: (row) => row.descripcion,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Estado Flujo Origen',\n      cell: function OrderItems(row) {\n        let asignacion = ''\n        if (row.id_estadoflujopadre === '' || row.id_estadoflujopadre === '0') {\n          asignacion = 'No asignado'\n        } else {\n          asignacion = row.estadopadre\n        }\n        return asignacion\n      },\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n    },\n    {\n      name: 'Estado',\n      cell: function OrderItems(row) {\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        return estado\n      },\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (ExistePermiso('Modulo Estados Pago') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"primary\"\n              size=\"sm\"\n              title=\"Editar Estado Flujo\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/estadosflujo/editar',\n                  id_estado: row.id_estadoflujo,\n                  id_estadopadre: row.id_estadoflujopadre,\n                  descripcion: row.descripcion,\n                  estado: row.activo,\n                })\n              }\n            >\n              <FaPen />\n            </CButton>{' '}\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar Estado Flujo\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_estadoflujo, row.descripcion, 1)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo Estados Pago') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarEstado(idEstado, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/estadosflujo/nuevo')}\n          >\n            Crear Nuevo\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay usuarios que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default EstadosFlujo\n"],"sourceRoot":""}