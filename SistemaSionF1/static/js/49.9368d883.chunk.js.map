{"version":3,"sources":["services/postCrudBancos.js","services/getPaises.js","views/components/flujos/bancos/EditarBancos.js"],"names":["API","process","postCrudBancos","idBanco","nombre","direccion","codigoTransferencia","codigoSAP","idPais","estado","opcion","id_usuario","token","ApiFinal","ApiWhere","datos","id_banco","codigo_transferencia","codigo_SAP","id_pais","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getPaises","IdPais","Nombre","EditarBancos","props","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","results","setList","form","setValues","pais","useEffect","mounted","api_token","items","paises","handleInput","event","target","name","value","handleSubmit","async","preventDefault","id","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","type","placeholder","defaultValue","onChange","map","item","i"],"mappings":"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","file":"static/js/49.9368d883.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}bancos`\n\nexport function postCrudBancos(\n  idBanco,\n  nombre,\n  direccion,\n  codigoTransferencia,\n  codigoSAP,\n  idPais,\n  estado,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_banco: idBanco,\n    nombre: nombre,\n    direccion: direccion,\n    codigo_transferencia: codigoTransferencia,\n    codigo_SAP: codigoSAP,\n    id_pais: idPais,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idBanco !== '' && opcion !== '') {\n    ApiWhere += '/' + idBanco + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}paises`\n\nexport function getPaises(IdPais, Nombre, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (IdPais !== null) {\n    ApiWhere += '/' + IdPais\n  }\n  if (Nombre !== null) {\n    ApiWhere += '/' + Nombre\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { postCrudBancos } from '../../../../services/postCrudBancos'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getPaises } from '../../../../services/getPaises'\nimport { FiSettings, FiFlag } from 'react-icons/fi'\nimport { GrLocation } from 'react-icons/gr'\nimport { RiBankLine, RiBarcodeFill } from 'react-icons/ri'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst EditarBancos = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [results, setList] = useState([])\n\n  const [form, setValues] = useState({\n    nombre: location.nombre,\n    direccion: location.direccion,\n    estado: location.estado,\n    pais: location.pais,\n    codigoTransferencia: location.codigoTransferencia,\n    codigoSAP: location.codigoSAP,\n  })\n\n  useEffect(() => {\n    let mounted = true\n    getPaises(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.paises)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (\n      form.nombre !== '' &&\n      form.direccion !== '' &&\n      form.pais !== '' &&\n      form.codigoTransferencia !== '' &&\n      form.codigoSAP !== ''\n    ) {\n      event.preventDefault()\n      const respuesta = await postCrudBancos(\n        location.id_banco,\n        form.nombre,\n        form.direccion,\n        form.codigoTransferencia,\n        form.codigoSAP,\n        form.pais,\n        form.estado,\n        '1',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/bancos')\n      }\n    } else {\n      setShow(true)\n      setMensaje('No has llenado todos los campos.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    if (location.id_banco) {\n      return (\n        <div style={{ flexDirection: 'row' }}>\n          <CContainer>\n            <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Confirmación</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{mensaje}</Modal.Body>\n              <Modal.Footer>\n                <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                  Cancelar\n                </CButton>\n                <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                  Aceptar\n                </CButton>\n              </Modal.Footer>\n            </Modal>\n            <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n              <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n                <FaArrowLeft />\n                &nbsp;&nbsp;Regresar\n              </Button>\n            </div>\n            <br />\n            <br />\n            <Alert show={show} variant=\"danger\" onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>Error!</Alert.Heading>\n              <p>{mensaje}</p>\n            </Alert>\n            <CCard style={{ display: 'flex', alignItems: 'center' }}>\n              <CCardBody style={{ width: '80%' }}>\n                <CForm style={{ width: '100%' }}>\n                  <h1>Modificación de Banco</h1>\n                  <p className=\"text-medium-emphasis\">Modifique la información del banco</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <RiBankLine />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Nombre\"\n                      name=\"nombre\"\n                      defaultValue={location.nombre}\n                      onChange={handleInput}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <GrLocation />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Direccion\"\n                      name=\"direccion\"\n                      defaultValue={location.direccion}\n                      onChange={handleInput}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <RiBarcodeFill />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Código Transferencia\"\n                      name=\"codigoTransferencia\"\n                      defaultValue={location.codigoTransferencia}\n                      onChange={handleInput}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <RiBarcodeFill />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Código SAP\"\n                      name=\"codigoSAP\"\n                      defaultValue={location.codigoSAP}\n                      onChange={handleInput}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiFlag />\n                    </CInputGroupText>\n                    <CFormSelect name=\"pais\" onChange={handleInput}>\n                      <option>Seleccione país. (Opcional)</option>\n                      {results.map((item, i) => {\n                        return (\n                          <option key={item.IdPais} value={item.IdPais}>\n                            {item.Nombre}\n                          </option>\n                        )\n                      })}\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiSettings />\n                    </CInputGroupText>\n                    <CFormSelect name=\"estado\" onChange={handleInput}>\n                      <option>Seleccione estado. (Opcional)</option>\n                      <option value=\"1\">Activo</option>\n                      <option value=\"0\">Inactivo</option>\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CButton color=\"primary\" onClick={handleSubmit}>\n                    Guardar Cambios\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CContainer>\n        </div>\n      )\n    } else {\n      history.push('/bancos')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL USUARIO. REGRESE A LA PANTALLA DE USUARIOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default EditarBancos\n"],"sourceRoot":""}