{"version":3,"sources":["services/getRoles.js","services/postCrudRoles.js","views/components/roles/listado/Roles.js"],"names":["API","process","getRoles","idRol","Descripcion","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","postCrudRoles","descripcion","objeto","estado","opcion","id_usuario","datos","id_rol","activo","data","JSON","stringify","body","Roles","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","setIdRol","setOpcion","mensaje","setMensaje","ExistePermiso","result","item","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","roles","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","center","sortable","wrap","cell","deshabilitar","color","size","title","disabled","onClick","pathname","nombre","mostrarModal","width","tableData","filterPlaceholder","export","print","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","eliminarRol","className","marginBottom","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/62.5fb38fa6.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}roles`\n\nexport function getRoles(idRol, Descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idRol !== null) {\n    ApiWhere += '/' + idRol\n  }\n  if (Descripcion !== null) {\n    ApiWhere += '/' + Descripcion\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}roles`\n\nexport function postCrudRoles(idRol, descripcion, objeto, estado, opcion, id_usuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_rol: idRol,\n    descripcion: descripcion,\n    objeto: objeto,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idRol !== '' && opcion !== '') {\n    ApiWhere += '/' + idRol + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport { getRoles } from '../../../../services/getRoles'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { postCrudRoles } from '../../../../services/postCrudRoles'\nimport { useSession } from 'react-use-session'\nimport { FaUserEdit, FaTrash, FaUserCog, FaClipboardList } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport { CButton } from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst Roles = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idRol, setIdRol] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Roles'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getRoles(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.roles)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = 0\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = 1\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  function mostrarModal(id_rol, nombre, opcion) {\n    setIdRol(id_rol)\n    setOpcion(opcion)\n    setShow(true)\n    setMensaje('Est√° seguro de eliminar el rol ' + nombre + '?')\n  }\n\n  async function eliminarRol(id, opcion) {\n    if (opcion == 1) {\n      const respuesta = await postCrudRoles(id, '', '', '', '2', session.id, session.api_token)\n      if (respuesta === 'OK') {\n        await getRoles(null, null, session.api_token).then((items) => {\n          setList(items.roles)\n        })\n      }\n    } else if (opcion == 2) {\n      setShow(false)\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Descripci√≥n',\n      selector: (row) => row.descripcion,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Objeto',\n      selector: (row) => row.objeto,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n    },\n    {\n      name: 'Estado',\n      cell: function OrderItems(row) {\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        return estado\n      },\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let estado = 'Inactivo'\n        if (row.activo == 1) {\n          estado = 'Activo'\n        }\n        let deshabilitar = false\n        if (ExistePermiso('Modulo Roles') == 0) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"info\"\n              size=\"sm\"\n              title=\"Consultar Rol Permiso\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/roles/consulta',\n                  id_rol: row.id_rol,\n                  descripcion: row.descripcion,\n                  estado: estado,\n                })\n              }\n            >\n              <FaClipboardList />\n            </CButton>{' '}\n            <CButton\n              color=\"success\"\n              size=\"sm\"\n              title=\"Asignar Permiso\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/roles/rolpermiso',\n                  id_rol: row.id_rol,\n                  descripcion: row.descripcion,\n                  estado: row.activo,\n                })\n              }\n            >\n              <FaUserCog />\n            </CButton>{' '}\n            <CButton\n              color=\"primary\"\n              size=\"sm\"\n              title=\"Editar Rol\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/roles/editar',\n                  id_rol: row.id_rol,\n                  descripcion: row.descripcion,\n                  objeto: row.objeto,\n                  estado: row.activo,\n                })\n              }\n            >\n              <FaUserEdit />\n            </CButton>{' '}\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              title=\"Eliminar Rol\"\n              disabled={deshabilitar}\n              onClick={() => mostrarModal(row.id_rol, row.descripcion, 1)}\n            >\n              <FaTrash />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (ExistePermiso('Modulo Roles') == 0) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmaci√≥n</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n              Cancelar\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => eliminarRol(idRol, opcion).then(() => Cancelar(1))}\n            >\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <div className=\"float-right\" style={{ marginBottom: '10px' }}>\n          <CButton\n            color=\"primary\"\n            size=\"sm\"\n            disabled={deshabilitar}\n            onClick={() => history.push('/roles/nuevo')}\n          >\n            Crear Nuevo\n          </CButton>\n        </div>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay usuarios que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESI√ìN ACTIVA.</div>\n  }\n}\n\nexport default Roles\n"],"sourceRoot":""}