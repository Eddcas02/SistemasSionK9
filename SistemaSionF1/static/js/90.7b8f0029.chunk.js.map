{"version":3,"sources":["services/postCrudPoliticas.js","views/components/politicas/NuevaPolitica.js"],"names":["API","process","postCrudPoliticas","idPolitica","descripcion","identificador","valor","estado","opcion","id_usuario","token","ApiFinal","ApiWhere","datos","id_politica","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","NuevoPermiso","history","useHistory","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","color","setColor","titulo","setTitulo","form","setValues","handleInput","event","target","name","value","handleSubmit","async","preventDefault","id","api_token","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","placeholder","rows","onChange","type"],"mappings":"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","file":"static/js/90.7b8f0029.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}politicas`\n\nexport function postCrudPoliticas(\n  idPolitica,\n  descripcion,\n  identificador,\n  valor,\n  estado,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_politica: idPolitica,\n    descripcion: descripcion,\n    identificador: identificador,\n    valor: valor,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idPolitica !== '' && opcion !== '') {\n    ApiWhere += '/' + idPolitica + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { FiBook, FiGrid, FiHash } from 'react-icons/fi'\nimport { postCrudPoliticas } from '../../../services/postCrudPoliticas'\nimport { postSesionUsuario } from '../../../services/postSesionUsuario'\nimport '../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst NuevoPermiso = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [color, setColor] = useState('danger')\n  const [titulo, setTitulo] = useState('Error!')\n\n  const [form, setValues] = useState({\n    descripcion: '',\n    identificador: '',\n    valor: '',\n  })\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (form.descripcion !== '' && form.identificador !== '' && form.valor !== '') {\n      event.preventDefault()\n      const respuesta = await postCrudPoliticas(\n        '',\n        form.descripcion,\n        form.identificador,\n        form.valor,\n        '',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/politicas')\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has llenado todos los campos.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    return (\n      <div style={{ flexDirection: 'row' }}>\n        <CContainer>\n          <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmación</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                Cancelar\n              </CButton>\n              <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n            <Alert.Heading>{titulo}</Alert.Heading>\n            <p>{mensaje}</p>\n          </Alert>\n          <CCard style={{ display: 'flex', alignItems: 'center' }}>\n            <CCardBody style={{ width: '80%' }}>\n              <CForm style={{ width: '100%' }}>\n                <h1>Creación de Políticas</h1>\n                <p className=\"text-medium-emphasis\">Cree una nuevo política</p>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiBook />\n                  </CInputGroupText>\n                  <textarea\n                    placeholder=\"Descripción\"\n                    name=\"descripcion\"\n                    className=\"form-control\"\n                    rows=\"2\"\n                    onChange={handleInput}\n                  ></textarea>\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiGrid />\n                  </CInputGroupText>\n                  <CFormSelect\n                    placeholder=\"Identificador\"\n                    name=\"identificador\"\n                    onChange={handleInput}\n                  >\n                    <option value=\"_SEMAFORO_VERDE\">_SEMAFORO_VERDE</option>\n                    <option value=\"_SEMAFORO_AMARILLO\">_SEMAFORO_AMARILLO</option>\n                    <option value=\"_LIMITE_TIEMPO_CONEXION_\">_LIMITE_TIEMPO_CONEXION_</option>\n                    <option value=\"_LIMITE_ERROR_LOGIN_\">_LIMITE_ERROR_LOGIN_</option>\n                    <option value=\"_LIMITE_CAMBIO_PASSWORD_\">_LIMITE_CAMBIO_PASSWORD_</option>\n                    <option value=\"_CORREO\">_CORREO</option>\n                    <option value=\"_CORREO_LOTES_PAGO_\">_CORREO_LOTES_PAGO_</option>\n                    <option value=\"_DIAS_BASE_CREDITO_\">_DIAS_BASE_CREDITO_</option>\n                  </CFormSelect>\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiHash />\n                  </CInputGroupText>\n                  <CFormControl\n                    type=\"text\"\n                    placeholder=\"Valor\"\n                    name=\"valor\"\n                    onChange={handleInput}\n                  />\n                </CInputGroup>\n                <CButton color=\"primary\" onClick={handleSubmit}>\n                  Crear Política\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CContainer>\n      </div>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default NuevoPermiso\n"],"sourceRoot":""}