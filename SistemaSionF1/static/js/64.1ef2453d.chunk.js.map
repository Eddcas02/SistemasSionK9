{"version":3,"sources":["services/getUsuarioGrupo.js","services/postUsuarioGrupo.js","views/components/usuarios/usuariogrupo/ConsultaUG.js"],"names":["API","process","getUsuarioGrupo","idUsuario","IdGrupo","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","err","message","alert","postUsuarioGrupo","idUsuarioGrupo","opcion","idGrupo","nivel","estado","id_usuario","datos","id_usuariogrupo","id_grupoautorizacion","activo","id_usuario_s","data","JSON","stringify","body","error","Consultar","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","setIdGrupo","setEstado","setOpcion","mensaje","setMensaje","async","Cancelar","id","postSesionUsuario","api_token","push","mostrarModal","id_grupo","useEffect","mounted","idUsuario1","idUsuario2","items","detalle","getPerfilUsuario","deshabilitar","objeto","result","item","ExistePermiso","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","crudPerfil","className","style","marginBottom","size","goBack","disabled","pathname","nombre","email","hover","responsive","align","marginTop","textAlign","width","map","i","eliminado","identificador","title"],"mappings":"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","file":"static/js/64.1ef2453d.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}usuariogrupo`\n\nexport function getUsuarioGrupo(idUsuario, IdGrupo, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idUsuario !== null) {\n    ApiWhere += '/' + idUsuario\n  }\n  if (IdGrupo !== null) {\n    ApiWhere += '/' + IdGrupo\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((err) => {\n      if (err.message == 'Failed to fetch') {\n        alert('Error de conexión. Revise si está conectado a Internet.')\n      }\n    })\n}\n","const API = `${process.env.REACT_APP_API_URL}usuariogrupo`\n\nexport function postUsuarioGrupo(\n  idUsuarioGrupo,\n  idUsuario,\n  opcion,\n  idGrupo,\n  nivel,\n  estado,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuariogrupo: idUsuarioGrupo,\n    id_usuario: idUsuario,\n    opcion: opcion,\n    id_grupoautorizacion: idGrupo,\n    nivel: nivel,\n    activo: estado,\n    id_usuario_s: id_usuario,\n  }\n\n  if (idUsuarioGrupo !== '' && opcion !== '') {\n    ApiWhere += '/' + idUsuarioGrupo + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { getUsuarioGrupo } from '../../../../services/getUsuarioGrupo'\nimport { postUsuarioGrupo } from '../../../../services/postUsuarioGrupo'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { useSession } from 'react-use-session'\nimport { FaTrash, FaPen } from 'react-icons/fa'\nimport { BsToggles } from 'react-icons/bs'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst Consultar = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [idGrupo, setIdGrupo] = useState(0)\n  const [estado, setEstado] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Grupos Autorizacion'\n    let idUsuario1 = 0\n    let idUsuario2 = 0\n    if (location.id_usuario) {\n      idUsuario1 = location.id_usuario\n    }\n    if (session) {\n      idUsuario2 = session.id\n    }\n    getUsuarioGrupo(idUsuario1, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.detalle)\n      }\n    })\n    getPerfilUsuario(idUsuario2, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = false\n    for (let item of permisos) {\n      if (objeto == item.objeto) {\n        result = true\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 3) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    } else {\n      setShow(false)\n    }\n  }\n\n  function mostrarModal(id_grupo, opcion, estado) {\n    if (opcion == 1) {\n      setMensaje('Está seguro de eliminar este grupo de autorización?')\n      setIdGrupo(id_grupo)\n      setOpcion(opcion)\n      setShow(true)\n    } else if (opcion == 2) {\n      setMensaje('Está seguro de cambiar el estado de este grupo de autorización?')\n      setIdGrupo(id_grupo)\n      setEstado(estado)\n      setOpcion(opcion)\n      setShow(true)\n    }\n  }\n\n  async function crudPerfil(id_usuariogrupo, id_usuario, opcion, estado) {\n    let result\n    if (opcion == 1) {\n      const respuesta = await postUsuarioGrupo(\n        id_usuariogrupo,\n        id_usuario,\n        '1',\n        '',\n        '',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getUsuarioGrupo(id_usuario, null, session.api_token).then((items) => {\n          setList(items.detalle)\n        })\n      }\n    } else if (opcion == 2) {\n      if (estado == 0) {\n        result = '1'\n      } else {\n        result = '0'\n      }\n      const respuesta = await postUsuarioGrupo(\n        id_usuariogrupo,\n        id_usuario,\n        '3',\n        '',\n        '',\n        result,\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getUsuarioGrupo(id_usuario, null, session.api_token).then((items) => {\n          setList(items.detalle)\n        })\n      }\n    } else if (opcion == 3) {\n      setShow(false)\n    }\n  }\n\n  if (session) {\n    if (location.id_usuario) {\n      let deshabilitar = false\n      if (!ExistePermiso('Modulo Grupos Autorizacion')) {\n        deshabilitar = true\n      }\n      return (\n        <>\n          <Modal variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmación</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n                Cancelar\n              </CButton>\n              <CButton\n                color=\"primary\"\n                onClick={() =>\n                  crudPerfil(idGrupo, location.id_usuario, opcion, estado).then(() => Cancelar(1))\n                }\n              >\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <div className=\"float-right\">\n            <CButton\n              color=\"primary\"\n              size=\"sm\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/usuarios/agregargrupo',\n                  id_usuario: location.id_usuario,\n                  nombre: location.nombre,\n                  email: location.email,\n                  estado: session.estado,\n                })\n              }\n            >\n              Agregar Grupo\n            </CButton>\n          </div>\n          <div>\n            <div className=\"user-name\">{location.nombre}</div>\n            <CTable\n              hover\n              responsive\n              align=\"middle\"\n              className=\"mb-0 border\"\n              style={{ marginTop: '15px' }}\n            >\n              <CTableHead color=\"light\">\n                <CTableRow>\n                  <CTableHeaderCell style={{ textAlign: 'center', width: '40%' }}>\n                    Grupo Autorización\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">Nivel</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">Estado Usuario Grupo</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">Acciones</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {results.map((item, i) => {\n                  let estado = 'Inactivo'\n                  if (item.eliminado == 0) {\n                    if (item.activo == 1) {\n                      estado = 'Activo'\n                    }\n                    return (\n                      <CTableRow key={item.id_usuariogrupo}>\n                        <CTableDataCell style={{ textAlign: 'center', width: '40%' }}>\n                          {item.identificador}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-center\">{item.nivel}</CTableDataCell>\n                        <CTableDataCell className=\"text-center\">{estado}</CTableDataCell>\n                        <CTableDataCell className=\"text-center\">\n                          <CButton\n                            color=\"primary\"\n                            size=\"sm\"\n                            title=\"Elegir Nuevo Grupo\"\n                            disabled={deshabilitar}\n                            onClick={() =>\n                              history.push({\n                                pathname: '/usuarios/editarusuariogrupo',\n                                id_usuariogrupo: item.id_usuariogrupo,\n                                id_usuario: location.id_usuario,\n                                email: location.email,\n                                nombre: location.nombre,\n                                nivel: item.nivel,\n                                estado: item.activo,\n                                id_grupo: item.id_grupoautorizacion,\n                                identificador: item.identificador,\n                              })\n                            }\n                          >\n                            <FaPen />\n                          </CButton>{' '}\n                          <CButton\n                            color=\"danger\"\n                            size=\"sm\"\n                            title=\"Eliminar Grupo Asociado\"\n                            disabled={deshabilitar}\n                            onClick={() => mostrarModal(item.id_usuariogrupo, 1, '')}\n                          >\n                            <FaTrash />\n                          </CButton>{' '}\n                          <CButton\n                            color=\"info\"\n                            size=\"sm\"\n                            title=\"Cambiar de Estado\"\n                            disabled={deshabilitar}\n                            onClick={() => mostrarModal(item.id_usuariogrupo, 2, item.activo)}\n                          >\n                            <BsToggles />\n                          </CButton>\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  }\n                })}\n              </CTableBody>\n            </CTable>\n          </div>\n        </>\n      )\n    } else {\n      history.push('/usuarios')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL USUARIO. REGRESE A LA PANTALLA DE USUARIOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default Consultar\n"],"sourceRoot":""}