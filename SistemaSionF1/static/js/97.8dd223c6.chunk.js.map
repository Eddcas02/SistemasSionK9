{"version":3,"sources":["services/postOcultarColumnaUsuario.js","views/components/usuarios/ocultarcolumnas/NuevoOcultarColumna.js"],"names":["API","process","postOcultarColumnaUsuario","id_ocultarcolumnausuario","id_usuario","NombreColumna","opcion","estado","id_usuario_s","token","ApiFinal","ApiWhere","datos","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","NuevoOcultarColumna","history","useHistory","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","color","setColor","titulo","setTitulo","resultsUsuarios","setListUsuarios","form","setValues","useEffect","mounted","idUsuario","id","getUsuarios","api_token","items","users","handleInput","event","target","name","value","handleSubmit","async","preventDefault","push","Cancelar","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","onChange","map","item","i","eliminado","nombre","apellido","nombre_usuario"],"mappings":"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","file":"static/js/97.8dd223c6.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}ocultarcolumnausuario`\n\nexport function postOcultarColumnaUsuario(\n  id_ocultarcolumnausuario,\n  id_usuario,\n  NombreColumna,\n  opcion,\n  estado,\n  id_usuario_s,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuario: id_usuario,\n    NombreColumna: NombreColumna,\n    activo: estado,\n    id_usuario_s: id_usuario_s,\n  }\n\n  if (id_ocultarcolumnausuario !== '' && opcion !== '') {\n    ApiWhere += '/' + id_ocultarcolumnausuario + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { FiUserCheck, FiUserPlus } from 'react-icons/fi'\nimport { postOcultarColumnaUsuario } from '../../../../services/postOcultarColumnaUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\nimport { getUsuarios } from '../../../../services/getUsuarios'\n\nconst NuevoOcultarColumna = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [color, setColor] = useState('danger')\n  const [titulo, setTitulo] = useState('Error!')\n  const [resultsUsuarios, setListUsuarios] = useState([])\n\n  const [form, setValues] = useState({\n    id_usuario: '',\n    NombreColumna: '',\n  })\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo OcultarColumnas'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getUsuarios(null, null, null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setListUsuarios(items.users)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (form.id_usuario !== '' && form.NombreColumna !== '') {\n      event.preventDefault()\n      const respuesta = await postOcultarColumnaUsuario(\n        '',\n        form.id_usuario,\n        form.NombreColumna,\n        '',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/ocultarcolumnas')\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has llenado todos los campos.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    return (\n      <div style={{ flexDirection: 'row' }}>\n        <CContainer>\n          <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmaci√≥n</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                Cancelar\n              </CButton>\n              <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n            <Alert.Heading>{titulo}</Alert.Heading>\n            <p>{mensaje}</p>\n          </Alert>\n          <CCard style={{ display: 'flex', alignItems: 'center' }}>\n            <CCardBody style={{ width: '80%' }}>\n              <CForm style={{ width: '100%' }}>\n                <h1>Oculta columna a usuario</h1>\n                <p className=\"text-medium-emphasis\">\n                  Agregue columna a lista de ocultos para usuario especifico.\n                </p>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiUserCheck />\n                  </CInputGroupText>\n                  <CFormSelect name=\"id_usuario\" onChange={handleInput}>\n                    <option value=\"0\">Seleccione un usuario.</option>\n                    {resultsUsuarios.map((item, i) => {\n                      if (item.eliminado == 0 && item.activo == 1) {\n                        return (\n                          <option key={item.id} value={item.id}>\n                            {item.nombre + ' ' + item.apellido + ' [' + item.nombre_usuario + ']'}\n                          </option>\n                        )\n                      }\n                    })}\n                  </CFormSelect>\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiUserPlus />\n                  </CInputGroupText>\n                  <CFormSelect name=\"NombreColumna\" onChange={handleInput}>\n                    <option value=\"0\">Seleccione columna</option>\n                    <option value=\"Selecci√≥n\">Selecci√≥n</option>\n                    <option value=\"Empresa\">Empresa</option>\n                    <option value=\"No. documento\">No. documento</option>\n                    <option value=\"Fecha sistema\">Fecha sistema</option>\n                    <option value=\"Beneficiario\">Beneficiario</option>\n                    <option value=\"Concepto\">Concepto</option>\n                    <option value=\"Monto\">Monto</option>\n                    <option value=\"Acciones\">Acciones</option>\n                    <option value=\"Fecha autorizaci√≥n\">Fecha autorizaci√≥n</option>\n                    <option value=\"Tipo\">Tipo</option>\n                  </CFormSelect>\n                </CInputGroup>\n                <CButton color=\"primary\" onClick={handleSubmit}>\n                  Agregar\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CContainer>\n      </div>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESI√ìN ACTIVA.</div>\n  }\n}\n\nexport default NuevoOcultarColumna\n"],"sourceRoot":""}