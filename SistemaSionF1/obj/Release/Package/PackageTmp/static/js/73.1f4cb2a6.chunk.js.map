{"version":3,"sources":["services/getSesionUsuario.js","views/components/usuarios/conectados/Historico.js"],"names":["API","process","getSesionUsuario","IdUsuario","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","getSesionUsuarioGeneral","Historico","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","show","setShow","results","setList","mensaje","setMensaje","async","Cancelar","opcion","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","sesiones","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","Navegador","center","sortable","wrap","IPAddress","FechaHoraInicio","FechaHoraFinal","tableData","data","filterPlaceholder","export","print","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","className","marginBottom","size","goBack","NombreUsuario","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense"],"mappings":"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","file":"static/js/73.1f4cb2a6.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}sesionusuario`\n\nexport function getSesionUsuario(IdUsuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (IdUsuario !== null) {\n    ApiWhere += '/' + IdUsuario\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n\nexport function getSesionUsuarioGeneral(token) {\n  let ApiFinal = `${process.env.REACT_APP_API_URL}sesionusuariogeneral`\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { getSesionUsuario } from '../../../../services/getSesionUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { useSession } from 'react-use-session'\nimport '../../../../scss/estilos.scss'\nimport { CButton } from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst Historico = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [results, setList] = useState([])\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    if (location.IdUsuario) {\n      idUsuario = location.IdUsuario\n    }\n    getSesionUsuario(location.IdUsuario, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.sesiones)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Navegador',\n      selector: (row) => row.Navegador,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'IP Usuario',\n      selector: (row) => row.IPAddress,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n    },\n    {\n      name: 'Inicio Sesión',\n      selector: (row) => row.FechaHoraInicio,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n    },\n    {\n      name: 'Fin Sesión',\n      selector: (row) => row.FechaHoraFinal,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n  ])\n\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    if (location.IdUsuario) {\n      return (\n        <>\n          <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(2)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmación</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                Cancelar\n              </CButton>\n              <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <div className=\"user-name-profile\">{location.NombreUsuario}</div>\n          <DataTableExtensions {...tableData}>\n            <DataTable\n              columns={columns}\n              noDataComponent=\"No hay registros que mostrar\"\n              data={results}\n              customStyles={customStyles}\n              pagination\n              paginationPerPage={25}\n              responsive={true}\n              persistTableHead\n              striped={true}\n              dense\n            />\n          </DataTableExtensions>\n        </>\n      )\n    } else {\n      history.push('/conectados')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL USUARIO. REGRESE A LA PANTALLA DE USUARIOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default Historico\n"],"sourceRoot":""}