{"version":3,"sources":["services/postCrudMonedas.js","views/components/flujos/monedas/EditarMonedas.js"],"names":["API","process","postCrudMonedas","idMoneda","nombre","simbolo","estado","opcion","id_usuario","token","ApiFinal","ApiWhere","datos","id_moneda","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","EditarMonedas","props","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","form","setValues","handleInput","event","target","name","value","handleSubmit","async","preventDefault","id","api_token","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","type","placeholder","defaultValue","onChange"],"mappings":"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","file":"static/js/83.7e2c79bb.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}monedas`\n\nexport function postCrudMonedas(idMoneda, nombre, simbolo, estado, opcion, id_usuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_moneda: idMoneda,\n    nombre: nombre,\n    simbolo: simbolo,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idMoneda !== '' && opcion !== '') {\n    ApiWhere += '/' + idMoneda + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { postCrudMonedas } from '../../../../services/postCrudMonedas'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\nimport { FiSettings } from 'react-icons/fi'\nimport { MdAttachMoney } from 'react-icons/md'\nimport { FaCoins, FaArrowLeft } from 'react-icons/fa'\n\nconst EditarMonedas = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n\n  const [form, setValues] = useState({\n    nombre: location.nombre,\n    simbolo: location.simbolo,\n    estado: location.estado,\n  })\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (form.nombre !== '' && form.simbolo !== '') {\n      event.preventDefault()\n      const respuesta = await postCrudMonedas(\n        location.id_moneda,\n        form.nombre,\n        form.simbolo,\n        form.estado,\n        '1',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/monedas')\n      }\n    } else {\n      setShow(true)\n      setMensaje('No has llenado todos los campos.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    if (location.id_moneda) {\n      return (\n        <div style={{ flexDirection: 'row' }}>\n          <CContainer>\n            <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Confirmación</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{mensaje}</Modal.Body>\n              <Modal.Footer>\n                <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                  Cancelar\n                </CButton>\n                <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                  Aceptar\n                </CButton>\n              </Modal.Footer>\n            </Modal>\n            <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n              <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n                <FaArrowLeft />\n                &nbsp;&nbsp;Regresar\n              </Button>\n            </div>\n            <br />\n            <br />\n            <Alert show={show} variant=\"danger\" onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>Error!</Alert.Heading>\n              <p>{mensaje}</p>\n            </Alert>\n            <CCard style={{ display: 'flex', alignItems: 'center' }}>\n              <CCardBody style={{ width: '80%' }}>\n                <CForm style={{ width: '100%' }}>\n                  <h1>Modificación de Moneda</h1>\n                  <p className=\"text-medium-emphasis\">Modifique la información de la moneda</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FaCoins />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Nombre\"\n                      name=\"nombre\"\n                      defaultValue={location.nombre}\n                      onChange={handleInput}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <MdAttachMoney />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Símbolo\"\n                      name=\"simbolo\"\n                      defaultValue={location.simbolo}\n                      onChange={handleInput}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiSettings />\n                    </CInputGroupText>\n                    <CFormSelect name=\"estado\" onChange={handleInput}>\n                      <option>Seleccione estado. (Opcional)</option>\n                      <option value=\"1\">Activo</option>\n                      <option value=\"0\">Inactivo</option>\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CButton color=\"primary\" onClick={handleSubmit}>\n                    Guardar Cambios\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CContainer>\n        </div>\n      )\n    } else {\n      history.push('/monedas')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL USUARIO. REGRESE A LA PANTALLA DE USUARIOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default EditarMonedas\n"],"sourceRoot":""}