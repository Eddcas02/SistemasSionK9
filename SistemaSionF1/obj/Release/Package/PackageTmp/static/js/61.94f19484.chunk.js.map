{"version":3,"sources":["services/postRolPermiso.js","services/getRolPermiso.js","views/components/roles/rolpermiso/ConsultaRP.js"],"names":["API","process","postRolPermiso","idRolPermiso","idRol","permisos","opcion","idPermiso","estado","id_usuario","token","ApiFinal","ApiWhere","datos","id_rolpermiso","id_rol","id_permiso","activo","data","JSON","stringify","fetch","method","body","headers","Authorization","Accept","then","response","json","catch","error","getRolPermiso","Descripcion","ConsultarRP","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","results","setList","show","setShow","setIdPermiso","setEstado","setOpcion","mensaje","setMensaje","async","Cancelar","idUsuario","id","postSesionUsuario","api_token","push","mostrarModal","useEffect","mounted","items","detalle","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","result","crudRolPermiso","className","style","marginBottom","size","goBack","width","textAlign","fontWeight","borderColor","descripcion","hover","responsive","align","map","item","i","eliminado","title"],"mappings":"6KAAA,wCAAMA,EAAG,UAAMC,sCAAN,cAEF,SAASC,EACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAWX,EACXY,EAAW,GAEf,IAAIC,EAAQ,CACVC,cAAeX,EACfY,OAAQX,EACRC,SAAUA,EACVC,OAAQA,EACRU,WAAYT,EACZU,OAAQT,EACRC,WAAYA,GAGG,KAAbJ,IACFO,GAAY,IAAMP,GAEC,KAAjBF,GAAkC,KAAXG,IACzBM,GAAY,IAAMT,EAAe,IAAMG,GAEzCK,GAAYC,EAEZ,MAAMM,EAAOC,KAAKC,UAAUP,GAC5B,OAAOQ,MAAMV,EAAU,CACrBW,OAAQ,OACRC,KAAML,EACNM,QAAS,CACPC,cAAe,UAAYf,EAC3BgB,OAAQ,mBACR,eAAgB,oCAGjBC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMC,GACEA,IAERE,OAAOC,GAAUA,M,iCC/CtB,wCAAM/B,EAAG,UAAMC,sCAAN,cAEF,SAAS+B,EAAc5B,EAAO6B,EAAavB,GAChD,IAAIC,EAAWX,EACXY,EAAW,GAQf,OAPc,OAAVR,IACFQ,GAAY,IAAMR,GAEA,OAAhB6B,IACFrB,GAAY,IAAMqB,GAEpBtB,GAAYC,EACLS,MAAMV,EAAU,CACrBW,OAAQ,MACRE,QAAS,CACPC,cAAe,UAAYf,EAC3BgB,OAAQ,sBAGTC,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBC,OAAOC,GAAUA,M,iCCtBtB,qIA4OeG,UAvNK,KAClB,MAAMC,EAAUC,cACVC,EAAWC,eACVC,EAAMC,GAAWC,mBAAS,OAC3B,QAAEC,EAAF,MAAWC,GAAUC,qBAAW,wBAC/BC,EAASC,GAAWL,mBAAS,KAC7BM,EAAMC,GAAWP,oBAAS,IAC1BlC,EAAW0C,GAAgBR,mBAAS,IACpCjC,EAAQ0C,GAAaT,mBAAS,IAC9BnC,EAAQ6C,GAAaV,mBAAS,IAC9BW,EAASC,GAAcZ,mBAAS,IAYvCa,eAAeC,EAASjD,GACtB,GAAc,GAAVA,EAAa,CACf,IAAIkD,EAAY,EACZd,IACFc,EAAYd,EAAQe,IAGJ,aADMC,YAAkBF,EAAW,KAAM,KAAM,IAAKd,EAAQiB,aAE5EhB,IACAR,EAAQyB,KAAK,WAGfZ,GAAQ,GAIZ,SAASa,EAAa7C,EAAYV,EAAQE,GAC1B,GAAVF,GACF+C,EAAW,4CACXJ,EAAajC,GACbmC,EAAU7C,GACV0C,GAAQ,IACW,GAAV1C,IACT+C,EAAW,uDACXJ,EAAajC,GACbkC,EAAU1C,GACV2C,EAAU7C,GACV0C,GAAQ,IAgDZ,OArFAc,qBAAU,KACR,IAAIC,GAAU,EAMd,OALA/B,YAAcK,EAAStB,OAAQ,KAAM2B,EAAQiB,WAAWhC,MAAMqC,IACxDD,GACFjB,EAAQkB,EAAMC,YAGX,IAAOF,GAAU,IACvB,IA6ECrB,EACEL,EAAStB,OAET,qCACE,eAAC,IAAD,CAAOmD,QAAQ,UAAUnB,KAAMA,EAAMoB,OAAQ,IAAMZ,EAASjD,GAAS8D,UAAQ,EAA7E,UACE,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,gCAEF,cAAC,IAAMC,KAAP,UAAapB,IACb,eAAC,IAAMqB,OAAP,WACE,cAAC,IAAD,CAASC,MAAM,YAAYC,QAAS,IAAMpB,EAASjD,GAAnD,sBAGA,cAAC,IAAD,CACEoE,MAAM,UACNC,QAAS,IA3DvBrB,eAA8BvC,EAAQD,EAAeR,EAAQE,GAC3D,IAAIoE,EACU,GAAVtE,EAWgB,aAVMJ,YACtBY,EACA,GACA,GACA,IACA,GACA,GACA4B,EAAQe,GACRf,EAAQiB,kBAGF3B,YAAcjB,EAAQ,KAAM2B,EAAQiB,WAAWhC,MAAMqC,IACzDlB,EAAQkB,EAAMC,YAGC,GAAV3D,GAEPsE,EADY,GAAVpE,EACO,IAEA,IAYO,aAVMN,YACtBY,EACA,GACA,GACA,IACA,GACA8D,EACAlC,EAAQe,GACRf,EAAQiB,kBAGF3B,YAAcjB,EAAQ,KAAM2B,EAAQiB,WAAWhC,MAAMqC,IACzDlB,EAAQkB,EAAMC,aAGC,GAAV3D,GACT0C,GAAQ,GAoBI6B,CAAexC,EAAStB,OAAQR,EAAWD,EAAQE,GAAQmB,MAAK,IAAM4B,EAAS,KAHnF,2BAUJ,qBAAKuB,UAAU,aAAaC,MAAO,CAAEC,aAAc,QAAnD,SACE,eAAC,IAAD,CAAQd,QAAQ,UAAUe,KAAK,KAAKN,QAAS,IAAMxC,EAAQ+C,SAA3D,UACE,cAAC,IAAD,IADF,wBAKF,uBACA,uBACA,qBACEH,MAAO,CACLI,MAAO,OACPC,UAAW,SACXC,WAAY,OACZC,YAAa,SALjB,SAQE,4BAAIjD,EAASkD,gBAEf,eAAC,IAAD,CAAQC,OAAK,EAACC,YAAU,EAACC,MAAM,SAASZ,UAAU,cAAlD,UACE,cAAC,IAAD,CAAYJ,MAAM,QAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAkBI,UAAU,cAA5B,4BACA,cAAC,IAAD,CAAkBA,UAAU,cAA5B,4BACA,cAAC,IAAD,CAAkBA,UAAU,cAA5B,2BAGJ,cAAC,IAAD,UACGjC,EAAQ8C,KAAI,CAACC,EAAMC,KAClB,IAAIrF,EAAS,WACb,GAAsB,GAAlBoF,EAAKE,UAIP,OAHmB,GAAfF,EAAK3E,SACPT,EAAS,UAGT,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBsE,UAAU,cAA1B,SAAyCc,EAAKL,cAC9C,cAAC,IAAD,CAAgBT,UAAU,cAA1B,SAAyCtE,IACzC,eAAC,IAAD,CAAgBsE,UAAU,cAA1B,UAmBE,cAAC,IAAD,CACEJ,MAAM,SACNO,KAAK,KACLc,MAAM,mBACNpB,QAAS,IAAMd,EAAa+B,EAAK9E,cAAe,EAAG,IAJrD,SAME,cAAC,IAAD,MACS,IACX,cAAC,IAAD,CACE4D,MAAM,OACNO,KAAK,KACLc,MAAM,iBACNpB,QAAS,IAAMd,EAAa+B,EAAK9E,cAAe,EAAG8E,EAAK3E,QAJ1D,SAME,cAAC,IAAD,WApCU2E,EAAK9E,2BAgDnCqB,EAAQyB,KAAK,UAEX,qBAAKkB,UAAU,aAAf,oFAMJ3C,EAAQyB,KAAK,KACN,qBAAKkB,UAAU,aAAf","file":"static/js/61.94f19484.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}rolpermiso`\n\nexport function postRolPermiso(\n  idRolPermiso,\n  idRol,\n  permisos,\n  opcion,\n  idPermiso,\n  estado,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_rolpermiso: idRolPermiso,\n    id_rol: idRol,\n    permisos: permisos,\n    opcion: opcion,\n    id_permiso: idPermiso,\n    activo: estado,\n    id_usuario: id_usuario,\n  }\n\n  if (permisos !== '') {\n    ApiWhere += '/' + permisos\n  }\n  if (idRolPermiso !== '' && opcion !== '') {\n    ApiWhere += '/' + idRolPermiso + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}rolpermiso`\n\nexport function getRolPermiso(idRol, Descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idRol !== null) {\n    ApiWhere += '/' + idRol\n  }\n  if (Descripcion !== null) {\n    ApiWhere += '/' + Descripcion\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { postRolPermiso } from 'src/services/postRolPermiso'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getRolPermiso } from '../../../../services/getRolPermiso'\nimport { useSession } from 'react-use-session'\nimport { FaTrash, FaPen, FaArrowLeft } from 'react-icons/fa'\nimport { BsToggles } from 'react-icons/bs'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n\nconst ConsultarRP = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [show, setShow] = useState(false)\n  const [idPermiso, setIdPermiso] = useState(0)\n  const [estado, setEstado] = useState(0)\n  const [opcion, setOpcion] = useState(0)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    getRolPermiso(location.id_rol, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  async function Cancelar(opcion) {\n    if (opcion == 3) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    } else {\n      setShow(false)\n    }\n  }\n\n  function mostrarModal(id_permiso, opcion, estado) {\n    if (opcion == 1) {\n      setMensaje('Está seguro de eliminar este permiso?')\n      setIdPermiso(id_permiso)\n      setOpcion(opcion)\n      setShow(true)\n    } else if (opcion == 2) {\n      setMensaje('Está seguro de cambiar el estado de este permiso')\n      setIdPermiso(id_permiso)\n      setEstado(estado)\n      setOpcion(opcion)\n      setShow(true)\n    }\n  }\n\n  async function crudRolPermiso(id_rol, id_rolpermiso, opcion, estado) {\n    let result\n    if (opcion == 1) {\n      const respuesta = await postRolPermiso(\n        id_rolpermiso,\n        '',\n        '',\n        '1',\n        '',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getRolPermiso(id_rol, null, session.api_token).then((items) => {\n          setList(items.detalle)\n        })\n      }\n    } else if (opcion == 2) {\n      if (estado == 0) {\n        result = '1'\n      } else {\n        result = '0'\n      }\n      const respuesta = await postRolPermiso(\n        id_rolpermiso,\n        '',\n        '',\n        '3',\n        '',\n        result,\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        await getRolPermiso(id_rol, null, session.api_token).then((items) => {\n          setList(items.detalle)\n        })\n      }\n    } else if (opcion == 3) {\n      setShow(false)\n    }\n  }\n\n  if (session) {\n    if (location.id_rol) {\n      return (\n        <>\n          <Modal variant=\"primary\" show={show} onHide={() => Cancelar(opcion)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmación</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(opcion)}>\n                Cancelar\n              </CButton>\n              <CButton\n                color=\"primary\"\n                onClick={() =>\n                  crudRolPermiso(location.id_rol, idPermiso, opcion, estado).then(() => Cancelar(1))\n                }\n              >\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <div\n            style={{\n              width: '100%',\n              textAlign: 'center',\n              fontWeight: 'bold',\n              borderColor: 'black',\n            }}\n          >\n            <p>{location.descripcion}</p>\n          </div>\n          <CTable hover responsive align=\"middle\" className=\"mb-0 border\">\n            <CTableHead color=\"light\">\n              <CTableRow>\n                <CTableHeaderCell className=\"text-center\">Nombre Permiso</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Estado Permiso</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Acciones</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {results.map((item, i) => {\n                let estado = 'Inactivo'\n                if (item.eliminado == 0) {\n                  if (item.activo == 1) {\n                    estado = 'Activo'\n                  }\n                  return (\n                    <CTableRow key={item.id_rolpermiso}>\n                      <CTableDataCell className=\"text-center\">{item.descripcion}</CTableDataCell>\n                      <CTableDataCell className=\"text-center\">{estado}</CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        {/* <CButton\n                          color=\"primary\"\n                          size=\"sm\"\n                          title=\"Cambiar Permiso\"\n                          onClick={() =>\n                            history.push({\n                              pathname: '/roles/editarRP',\n                              id_rolpermiso: item.id_rolpermiso,\n                              id_rol: item.id_rol,\n                              id_permiso: item.id_permiso,\n                              descripcion: item.descripcion,\n                              nombre: location.descripcion,\n                              estado: item.activo,\n                            })\n                          }\n                        >\n                          <FaPen />\n                        </CButton>{' '} */}\n                        <CButton\n                          color=\"danger\"\n                          size=\"sm\"\n                          title=\"Eliminar Permiso\"\n                          onClick={() => mostrarModal(item.id_rolpermiso, 1, '')}\n                        >\n                          <FaTrash />\n                        </CButton>{' '}\n                        <CButton\n                          color=\"info\"\n                          size=\"sm\"\n                          title=\"Cambiar Estado\"\n                          onClick={() => mostrarModal(item.id_rolpermiso, 2, item.activo)}\n                        >\n                          <BsToggles />\n                        </CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                }\n              })}\n            </CTableBody>\n          </CTable>\n        </>\n      )\n    } else {\n      history.push('/roles')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL ROL. REGRESE A LA PANTALLA DE ROLES.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default ConsultarRP\n"],"sourceRoot":""}