{"version":3,"sources":["services/getUsuarioGrupo.js","services/postUsuarioRecordatorioGrupo.js","services/getUsuariosPorGrupoSegunUsuario.js","views/components/usuarios/recordatoriogrupo/NuevoRecordatorioGrupo.js"],"names":["API","process","getUsuarioGrupo","idUsuario","IdGrupo","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","err","message","alert","postUsuarioRecordatorioGrupo","id_usuariorecordatoriogrupo","id_usuario_emisor","id_usuario_receptor","id_grupoautorizacion","opcion","estado","id_usuario_s","datos","activo","data","JSON","stringify","body","error","NuevoRecordatorioGrupo","history","useHistory","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","color","setColor","titulo","setTitulo","resultsUsuarios","setListUsuarios","MostrarReceptor","setMostrarReceptor","MostrarGrupos","setMostrarGrupos","listaGrupos","setListGrupos","resultsUsuariosReceptor","setUsuariosReceptor","form","setValues","useEffect","mounted","id","getUsuarios","api_token","items","users","handleInput","event","target","name","value","async","detalle","CargarGrupos","idGrupo","getUsuariosPorGrupoSegunUsuario","usuarios","CargarReceptores","handleSubmit","preventDefault","push","Cancelar","postSesionUsuario","style","flexDirection","Modal","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","onClick","className","marginBottom","Button","size","goBack","Alert","onClose","dismissible","Heading","display","alignItems","width","onChange","map","item","i","eliminado","nombre","apellido","nombre_usuario","identificador","descripcion","id_usuario","usuario"],"mappings":"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","file":"static/js/65.d43d55cf.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}usuariogrupo`\n\nexport function getUsuarioGrupo(idUsuario, IdGrupo, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idUsuario !== null) {\n    ApiWhere += '/' + idUsuario\n  }\n  if (IdGrupo !== null) {\n    ApiWhere += '/' + IdGrupo\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((err) => {\n      if (err.message == 'Failed to fetch') {\n        alert('Error de conexión. Revise si está conectado a Internet.')\n      }\n    })\n}\n","const API = `${process.env.REACT_APP_API_URL}usuariorecordatoriogrupo`\n\nexport function postUsuarioRecordatorioGrupo(\n  id_usuariorecordatoriogrupo,\n  id_usuario_emisor,\n  id_usuario_receptor,\n  id_grupoautorizacion,\n  opcion,\n  estado,\n  id_usuario_s,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuario_emisor: id_usuario_emisor,\n    id_usuario_receptor: id_usuario_receptor,\n    id_grupoautorizacion: id_grupoautorizacion,\n    activo: estado,\n    id_usuario_s: id_usuario_s,\n  }\n\n  if (id_usuariorecordatoriogrupo !== '' && opcion !== '') {\n    ApiWhere += '/' + id_usuariorecordatoriogrupo + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}usuariosporgrupo`\n\nexport function getUsuariosPorGrupoSegunUsuario(idUsuario, idGrupo, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idUsuario !== null) {\n    ApiWhere += '/' + idUsuario\n  }\n  if (idGrupo !== null) {\n    ApiWhere += '/' + idGrupo\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { FiUserCheck, FiUserPlus } from 'react-icons/fi'\nimport { postUsuarioRecordatorioGrupo } from '../../../../services/postUsuarioRecordatorioGrupo'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\nimport { getUsuarios } from '../../../../services/getUsuarios'\nimport { getUsuarioGrupo } from '../../../../services/getUsuarioGrupo'\nimport { getUsuariosPorGrupoSegunUsuario } from '../../../../services/getUsuariosPorGrupoSegunUsuario'\n\nconst NuevoRecordatorioGrupo = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [color, setColor] = useState('danger')\n  const [titulo, setTitulo] = useState('Error!')\n  const [resultsUsuarios, setListUsuarios] = useState([])\n  const [MostrarReceptor, setMostrarReceptor] = useState(false)\n  const [MostrarGrupos, setMostrarGrupos] = useState(false)\n  const [listaGrupos, setListGrupos] = useState([])\n  const [resultsUsuariosReceptor, setUsuariosReceptor] = useState([])\n\n  const [form, setValues] = useState({\n    id_usuario_emisor: '',\n    id_usuario_receptor: '',\n    id_grupoautorizacion: '',\n  })\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo RecordatorioGrupo'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getUsuarios(null, null, null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setListUsuarios(items.users)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n    if (event.target.name == 'id_usuario_emisor') {\n      CargarGrupos(event.target.value)\n    }\n    if (event.target.name == 'id_grupoautorizacion') {\n      CargarReceptores(event.target.value)\n    }\n  }\n\n  async function CargarGrupos(id) {\n    await getUsuarioGrupo(id, null, session.api_token).then((items) => {\n      setListGrupos(items.detalle)\n      setMostrarGrupos(true)\n    })\n  }\n\n  async function CargarReceptores(id) {\n    await getUsuariosPorGrupoSegunUsuario(form.id_usuario_emisor, id, session.api_token).then(\n      (items) => {\n        setUsuariosReceptor(items.usuarios)\n        setMostrarReceptor(true)\n      },\n    )\n  }\n\n  const handleSubmit = async (event) => {\n    if (\n      form.id_usuario_emisor !== '' &&\n      form.id_usuario_receptor !== '' &&\n      form.id_grupoautorizacion !== '' &&\n      form.id_usuario_emisor != '0' &&\n      form.id_usuario_receptor != '0' &&\n      form.id_grupoautorizacion != '0'\n    ) {\n      event.preventDefault()\n      const respuesta = await postUsuarioRecordatorioGrupo(\n        '',\n        form.id_usuario_emisor,\n        form.id_usuario_receptor,\n        form.id_grupoautorizacion,\n        '',\n        '',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/recordatoriogrupo')\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has llenado todos los campos.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    return (\n      <div style={{ flexDirection: 'row' }}>\n        <CContainer>\n          <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmación</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                Cancelar\n              </CButton>\n              <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n            <Alert.Heading>{titulo}</Alert.Heading>\n            <p>{mensaje}</p>\n          </Alert>\n          <CCard style={{ display: 'flex', alignItems: 'center' }}>\n            <CCardBody style={{ width: '80%' }}>\n              <CForm style={{ width: '100%' }}>\n                <h1>Agreguar usuario para recordatorio de grupo</h1>\n                <p className=\"text-medium-emphasis\">\n                  Cree una nuevo registro para enviar recordatorio a usuario por grupo\n                </p>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiUserCheck />\n                  </CInputGroupText>\n                  <CFormSelect name=\"id_usuario_emisor\" onChange={handleInput}>\n                    <option value=\"0\">Seleccione un usuario.</option>\n                    {resultsUsuarios.map((item, i) => {\n                      if (item.eliminado == 0 && item.activo == 1) {\n                        return (\n                          <option key={item.id} value={item.id}>\n                            {item.nombre + ' ' + item.apellido + ' [' + item.nombre_usuario + ']'}\n                          </option>\n                        )\n                      }\n                    })}\n                  </CFormSelect>\n                </CInputGroup>\n                <CInputGroup className={!MostrarGrupos ? 'd-none mb-3' : 'mb-3'}>\n                  <CInputGroupText>\n                    <FiUserPlus />\n                  </CInputGroupText>\n                  <CFormSelect name=\"id_grupoautorizacion\" onChange={handleInput}>\n                    <option value=\"0\">Seleccione un grupo de autorización</option>\n                    {listaGrupos.map((item, i) => {\n                      if (item.eliminado == 0 && item.activo == 1) {\n                        return (\n                          <option key={item.id_grupoautorizacion} value={item.id_grupoautorizacion}>\n                            {'[' + item.identificador + '] ' + item.descripcion}\n                          </option>\n                        )\n                      }\n                    })}\n                  </CFormSelect>\n                </CInputGroup>\n                <CInputGroup className={!MostrarReceptor ? 'd-none mb-3' : 'mb-3'}>\n                  <CInputGroupText>\n                    <FiUserPlus />\n                  </CInputGroupText>\n                  <CFormSelect name=\"id_usuario_receptor\" onChange={handleInput}>\n                    <option value=\"0\">Seleccione usuario receptor</option>\n                    {resultsUsuariosReceptor.map((item, i) => {\n                      return (\n                        <option key={item.id_usuario} value={item.id_usuario}>\n                          {item.nombre + ' ' + item.apellido + ' [' + item.usuario + ']'}\n                        </option>\n                      )\n                    })}\n                  </CFormSelect>\n                </CInputGroup>\n                <CButton color=\"primary\" onClick={handleSubmit}>\n                  Crear Registro\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CContainer>\n      </div>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default NuevoRecordatorioGrupo\n"],"sourceRoot":""}