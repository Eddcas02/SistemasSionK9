{"version":3,"sources":["services/getPermisos.js","services/getNotificacionLoteUsuario.js","services/postCrudNotificacionLoteUsuario.js","views/components/notificacionloteusuario/nuevo/NuevoNotificacionLoteUsuario.js"],"names":["API","process","getPermisos","idPermiso","Descripcion","token","ApiFinal","ApiWhere","length","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","getNotificacionLoteUsuario","idUsuario","postCrudNotificacionLoteUsuario","id_usuarionotificaciontransaccion","id_usuario","TipoTransaccion","opcion","ConfiguracionDocumentos","datos","data","JSON","stringify","body","NuevoNotificacionLoteUsuario","history","useHistory","time","setTime","useLocation","useState","session","clear","useSession","show","setShow","showM","setShowM","results","setList","resultsUsuarios","setListUsuarios","mensaje","setMensaje","titulo","setTitulo","color","setColor","form","setValues","showInternas","setShowInternas","showInternasPDF","setShowInternasPDF","showInternasExcel","setShowInternasExcel","showBancaria","setShowBancaria","showBancariaPDF","setShowBancariaPDF","showBancariaExcel","setShowBancariaExcel","showTransferencia","setShowTransferencia","showTransferenciaPDF","setShowTransferenciaPDF","showTransferenciaExcel","setShowTransferenciaExcel","useEffect","mounted","getUsuarios","api_token","items","users","permisos","handleSubmit","async","result","resultBanc","resultTran","resultInte","event","preventDefault","markedCheckbox","document","getElementsByName","checkbox","checked","value","respuesta","id","push","Cancelar","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","name","onChange","target","contadorBan","contadorTra","contadorInt","item","UsuarioNotificacionTransaccion","id_tipodocumentolote","map","i","eliminado","activo","nombre","apellido","nombre_usuario","type","label"],"mappings":"6KAAA,wCAAMA,EAAG,UAAMC,sCAAN,YAEF,SAASC,EAAYC,EAAWC,EAAaC,GAClD,IAAIC,EAAWN,EACXO,EAAW,GAgBf,OAfkB,OAAdJ,IACEI,EAASC,OAAS,EACpBD,GAAY,OAASJ,EAErBI,GAAY,OAASJ,GAGL,OAAhBC,IACEG,EAASC,OAAS,EACpBD,GAAY,gBAAkBH,EAE9BG,GAAY,gBAAkBH,GAGlCE,GAAYC,EACLE,MAAMH,EAAU,CACrBI,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYP,EAC3BQ,OAAQ,sBAGTC,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBC,OAAOC,GAAUA,M,iCC9BtB,wCAAMlB,EAAG,UAAMC,sCAAN,kCAEF,SAASkB,EAA2BC,EAAWf,GACpD,IAAIC,EAAWN,EACXO,EAAW,GAKf,OAJkB,OAAda,IACFb,GAAY,IAAMa,GAEpBd,GAAYC,EACLE,MAAMH,EAAU,CACrBI,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYP,EAC3BQ,OAAQ,sBAGTC,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBC,OAAOC,GAAUA,M,iCCnBtB,wCAAMlB,EAAG,UAAMC,sCAAN,kCAEF,SAASoB,EACdC,EACAC,EACAC,EACAC,EACAL,EACAM,EACArB,GAEA,IAAIC,EAAWN,EACXO,EAAW,GAEf,IAAIoB,EAAQ,CACVL,kCAAmCA,EACnCG,OAAQA,EACRF,WAAYA,EACZC,gBAAiBA,EACjBJ,UAAWA,EACXM,wBAAyBA,GAGe,KAAtCJ,GAAuD,KAAXG,IAC9ClB,GAAY,IAAMe,EAAoC,IAAMG,GAE9DnB,GAAYC,EAEZ,MAAMqB,EAAOC,KAAKC,UAAUH,GAC5B,OAAOlB,MAAMH,EAAU,CACrBI,OAAQ,OACRqB,KAAMH,EACNjB,QAAS,CACPC,cAAe,UAAYP,EAC3BQ,OAAQ,mBACR,eAAgB,oCAGjBC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMC,GACEA,IAERE,OAAOC,GAAUA,M,iCC1CtB,gKAgWec,UAtUsB,KACnC,MAAMC,EAAUC,eAETC,EAAMC,IADIC,cACOC,mBAAS,QAC3B,QAAEC,EAAF,MAAWC,GAAUC,qBAAW,wBAC/BC,EAAMC,GAAWL,oBAAS,IAC1BM,EAAOC,GAAYP,oBAAS,IAC5BQ,EAASC,GAAWT,mBAAS,KAC7BU,EAAiBC,GAAmBX,mBAAS,KAC7CY,EAASC,GAAcb,mBAAS,KAChCc,EAAQC,GAAaf,mBAAS,WAC9BgB,EAAOC,GAAYjB,mBAAS,WAC5BkB,EAAMC,GAAanB,mBAAS,CACjCf,WAAY,KAEPmC,EAAcC,GAAmBrB,oBAAS,IAC1CsB,EAAiBC,GAAsBvB,oBAAS,IAChDwB,EAAmBC,GAAwBzB,oBAAS,IACpD0B,EAAcC,GAAmB3B,oBAAS,IAC1C4B,EAAiBC,GAAsB7B,oBAAS,IAChD8B,EAAmBC,GAAwB/B,oBAAS,IACpDgC,EAAmBC,GAAwBjC,oBAAS,IACpDkC,EAAsBC,GAA2BnC,oBAAS,IAC1DoC,EAAwBC,GAA6BrC,oBAAS,GAErEsC,qBAAU,KACR,IAAIC,GAAU,EAWd,OAVAC,YAAY,KAAM,KAAM,KAAM,KAAMvC,EAAQwC,WAAWjE,MAAMkE,IACvDH,GACF5B,EAAgB+B,EAAMC,UAG1B/E,YAAY,KAAM,KAAMqC,EAAQwC,WAAWjE,MAAMkE,IAC3CH,GACF9B,EAAQiC,EAAME,aAGX,IAAOL,GAAU,IACvB,IAgEH,MAAMM,GAAeC,UACnB,IAAIC,EAAS,GACTC,EAAa,GACbC,EAAa,GACbC,EAAa,GAEjB,GADAC,EAAMC,iBACF1B,EAAc,CAChBsB,EAAa,WACb,IAAIK,EAAiBC,SAASC,kBAAkB,qBAChD,IAAK,IAAIC,KAAYH,EACfG,EAASC,UACXT,GAAc,IAAMQ,EAASE,OAInC,GAAI1B,EAAmB,CACrBiB,EAAa,gBACTI,EAAiBC,SAASC,kBAAkB,0BAChD,IAAK,IAAIC,KAAYH,EACfG,EAASC,UACXR,GAAc,IAAMO,EAASE,OAInC,GAAItC,EAAc,CAChB8B,EAAa,UACTG,EAAiBC,SAASC,kBAAkB,oBAChD,IAAK,IAAIC,KAAYH,EACfG,EAASC,UACXP,GAAc,IAAMM,EAASE,OAyBnC,GArBkB,IAAdV,IAEAD,GADY,IAAVA,EACQC,EAEA,IAAMA,GAGF,IAAdC,IAEAF,GADY,IAAVA,EACQE,EAEA,IAAMA,GAGF,IAAdC,IAEAH,GADY,IAAVA,EACQG,EAEA,IAAMA,GAGL,KAAXH,EAAe,CACjB,MAAMY,QAAkB5E,YACtB,GACAmC,EAAKjC,WACL,GACA,GACAgB,EAAQ2D,GACRb,EACA9C,EAAQwC,WAEQ,OAAdkB,EACFhE,EAAQkE,KAAK,4BACU,UAAdF,GACTtD,GAAQ,GACRU,EAAU,UACVF,EAAW,0BACY,cAAd8C,IACTtD,GAAQ,GACRU,EAAU,UACVE,EAAS,WACTJ,EAAW,4BAGbR,GAAQ,GACRU,EAAU,UACVE,EAAS,UACTJ,EAAW,2CAIfiC,eAAegB,GAAS3E,GACtB,GAAc,GAAVA,EACFoB,GAAS,QACJ,GAAc,GAAVpB,EAAa,CACtB,IAAIL,EAAY,EACZmB,IACFnB,EAAYmB,EAAQ2D,IAGJ,aADMG,YAAkBjF,EAAW,KAAM,KAAM,IAAKmB,EAAQwC,aAE5EvC,IACAP,EAAQkE,KAAK,OAKnB,OAAI5D,EAEA,qBAAK+D,MAAO,CAAEC,cAAe,OAA7B,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,YAAU,EAACC,QAAQ,UAAU/D,KAAME,EAAO8D,OAAQ,IAAMN,GAAS,GAAIO,UAAQ,EAApF,UACE,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,gCAEF,cAAC,IAAMC,KAAP,UAAa7D,IACb,eAAC,IAAM8D,OAAP,WACE,cAAC,IAAD,CAAS1D,MAAM,YAAY2D,QAAS,IAAMb,GAAS,GAAnD,sBAGA,cAAC,IAAD,CAAS9C,MAAM,UAAU2D,QAAS,IAAMb,GAAS,GAAjD,2BAKJ,qBAAKc,UAAU,aAAaZ,MAAO,CAAEa,aAAc,QAAnD,SACE,eAAC,IAAD,CAAQV,QAAQ,UAAUW,KAAK,KAAKH,QAAS,IAAMhF,EAAQoF,SAA3D,UACE,cAAC,IAAD,IADF,wBAKF,uBACA,uBACA,eAAC,IAAD,CAAO3E,KAAMA,EAAM+D,QAASnD,EAAOgE,QAAS,IAAM3E,GAAQ,GAAQ4E,aAAW,EAA7E,UACE,cAAC,IAAMC,QAAP,UAAgBpE,IAChB,4BAAIF,OAEN,cAAC,IAAD,CAAOoD,MAAO,CAAEmB,QAAS,OAAQC,WAAY,UAA7C,SACE,cAAC,IAAD,CAAWpB,MAAO,CAAEqB,MAAO,OAA3B,SACE,eAAC,IAAD,CAAOrB,MAAO,CAAEqB,MAAO,QAAvB,UACE,6EACA,mBAAGT,UAAU,uBAAb,2FAGA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,eAAC,IAAD,CAAaU,KAAK,aAAaC,SA3M/CzC,eAAgCK,GAC9B9B,GAAgB,GAChBE,GAAmB,GACnBE,GAAqB,GACrBE,GAAgB,GAChBE,GAAmB,GACnBE,GAAqB,GACrBE,GAAqB,GACrBE,GAAwB,GACxBE,GAA0B,GAC1BlB,EAAU,IACLD,EACH,CAACiC,EAAMqC,OAAOF,MAAOnC,EAAMqC,OAAO9B,QAEpC7E,YAA2BsE,EAAMqC,OAAO9B,MAAOzD,EAAQwC,WAAWjE,MAAMkE,IACtE,IAAI+C,EAAc,EACdC,EAAc,EACdC,EAAc,EAClB,IAAK,IAAIC,KAAQlD,EAAMmD,+BAC6C,YAA9DnD,EAAMmD,+BAA+BD,GAAM1G,kBAC0B,GAAnEwD,EAAMmD,+BAA+BD,GAAME,uBAC7CjE,GAAmB,GACnB4D,KAEqE,GAAnE/C,EAAMmD,+BAA+BD,GAAME,uBAC7C/D,GAAqB,GACrB0D,MAG8D,iBAA9D/C,EAAMmD,+BAA+BD,GAAM1G,kBAC0B,GAAnEwD,EAAMmD,+BAA+BD,GAAME,uBAC7C3D,GAAwB,GACxBuD,KAEqE,GAAnEhD,EAAMmD,+BAA+BD,GAAME,uBAC7CzD,GAA0B,GAC1BqD,MAG8D,WAA9DhD,EAAMmD,+BAA+BD,GAAM1G,kBAC0B,GAAnEwD,EAAMmD,+BAA+BD,GAAME,uBAC7CvE,GAAmB,GACnBoE,KAEqE,GAAnEjD,EAAMmD,+BAA+BD,GAAME,uBAC7CrE,GAAqB,GACrBkE,MAIa,GAAfF,GACF9D,GAAgB,GAEC,GAAf+D,GACFzD,GAAqB,GAEJ,GAAf0D,GACFtE,GAAgB,OAkJN,UACE,wBAAQqC,MAAM,IAAd,oCACChD,EAAgBqF,KAAI,CAACH,EAAMI,KAC1B,GAAsB,GAAlBJ,EAAKK,WAAiC,GAAfL,EAAKM,OAC9B,OACE,wBAAsBxC,MAAOkC,EAAKhC,GAAlC,SACGgC,EAAKO,OAAS,IAAMP,EAAKQ,SAAW,KAAOR,EAAKS,eAAiB,KADvDT,EAAKhC,aAQ5B,uBACA,sBAAKgB,UAAYlD,EAA0B,GAAX,SAAhC,UACE,0CACA,cAAC,IAAD,CACEkD,UAAYhD,EAA6B,GAAX,SAC9B8B,MAAM,IACN4C,KAAK,WACLhB,KAAK,oBACLiB,MAAM,QAER,cAAC,IAAD,CACE3B,UAAY9C,EAA+B,GAAX,SAChC4B,MAAM,IACN4C,KAAK,WACLhB,KAAK,oBACLiB,MAAM,UAER,0BAEF,sBAAK3B,UAAY5C,EAA+B,GAAX,SAArC,UACE,+CACA,cAAC,IAAD,CACE4C,UAAY1C,EAAkC,GAAX,SACnCwB,MAAM,IACN4C,KAAK,WACLhB,KAAK,yBACLiB,MAAM,QAER,cAAC,IAAD,CACE3B,UAAYxC,EAAoC,GAAX,SACrCsB,MAAM,IACN4C,KAAK,WACLhB,KAAK,yBACLiB,MAAM,UAER,0BAEF,sBAAK3B,UAAYxD,EAA0B,GAAX,SAAhC,UACE,yCACA,cAAC,IAAD,CACEwD,UAAYtD,EAA6B,GAAX,SAC9BoC,MAAM,IACN4C,KAAK,WACLhB,KAAK,mBACLiB,MAAM,QAER,cAAC,IAAD,CACE3B,UAAYpD,EAA+B,GAAX,SAChCkC,MAAM,IACN4C,KAAK,WACLhB,KAAK,mBACLiB,MAAM,UAER,0BAEF,cAAC,IAAD,CAASvF,MAAM,UAAU2D,QAAS9B,GAAlC,0CAUZlD,EAAQkE,KAAK,KACN,qBAAKe,UAAU,aAAf","file":"static/js/31.40b10fc2.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}permisos`\n\nexport function getPermisos(idPermiso, Descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idPermiso !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&id=' + idPermiso\n    } else {\n      ApiWhere += '?id=' + idPermiso\n    }\n  }\n  if (Descripcion !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&descripcion=' + Descripcion\n    } else {\n      ApiWhere += '?descripcion=' + Descripcion\n    }\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}usuarionotificaciontransaccion`\n\nexport function getNotificacionLoteUsuario(idUsuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idUsuario !== null) {\n    ApiWhere += '/' + idUsuario\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}usuarionotificaciontransaccion`\n\nexport function postCrudNotificacionLoteUsuario(\n  id_usuarionotificaciontransaccion,\n  id_usuario,\n  TipoTransaccion,\n  opcion,\n  idUsuario,\n  ConfiguracionDocumentos,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_usuarionotificaciontransaccion: id_usuarionotificaciontransaccion,\n    opcion: opcion,\n    id_usuario: id_usuario,\n    TipoTransaccion: TipoTransaccion,\n    idUsuario: idUsuario,\n    ConfiguracionDocumentos: ConfiguracionDocumentos,\n  }\n\n  if (id_usuarionotificaciontransaccion !== '' && opcion !== '') {\n    ApiWhere += '/' + id_usuarionotificaciontransaccion + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { postCrudNotificacionLoteUsuario } from '../../../../services/postCrudNotificacionLoteUsuario'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getPermisos } from '../../../../services/getPermisos'\nimport { FiUserPlus } from 'react-icons/fi'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormCheck,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\nimport { getUsuarios } from '../../../../services/getUsuarios'\nimport { getNotificacionLoteUsuario } from '../../../../services/getNotificacionLoteUsuario'\n\nconst NuevoNotificacionLoteUsuario = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [results, setList] = useState([])\n  const [resultsUsuarios, setListUsuarios] = useState([])\n  const [mensaje, setMensaje] = useState('')\n  const [titulo, setTitulo] = useState('Error!')\n  const [color, setColor] = useState('danger')\n  const [form, setValues] = useState({\n    id_usuario: 0,\n  })\n  const [showInternas, setShowInternas] = useState(true)\n  const [showInternasPDF, setShowInternasPDF] = useState(true)\n  const [showInternasExcel, setShowInternasExcel] = useState(true)\n  const [showBancaria, setShowBancaria] = useState(true)\n  const [showBancariaPDF, setShowBancariaPDF] = useState(true)\n  const [showBancariaExcel, setShowBancariaExcel] = useState(true)\n  const [showTransferencia, setShowTransferencia] = useState(true)\n  const [showTransferenciaPDF, setShowTransferenciaPDF] = useState(true)\n  const [showTransferenciaExcel, setShowTransferenciaExcel] = useState(true)\n\n  useEffect(() => {\n    let mounted = true\n    getUsuarios(null, null, null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setListUsuarios(items.users)\n      }\n    })\n    getPermisos(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.permisos)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  async function SeleccionUsuario(event) {\n    setShowInternas(true)\n    setShowInternasPDF(true)\n    setShowInternasExcel(true)\n    setShowBancaria(true)\n    setShowBancariaPDF(true)\n    setShowBancariaExcel(true)\n    setShowTransferencia(true)\n    setShowTransferenciaPDF(true)\n    setShowTransferenciaExcel(true)\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n    getNotificacionLoteUsuario(event.target.value, session.api_token).then((items) => {\n      let contadorBan = 0\n      let contadorTra = 0\n      let contadorInt = 0\n      for (let item in items.UsuarioNotificacionTransaccion) {\n        if (items.UsuarioNotificacionTransaccion[item].TipoTransaccion == 'BANCARIO') {\n          if (items.UsuarioNotificacionTransaccion[item].id_tipodocumentolote == 1) {\n            setShowBancariaPDF(false)\n            contadorBan++\n          }\n          if (items.UsuarioNotificacionTransaccion[item].id_tipodocumentolote == 2) {\n            setShowBancariaExcel(false)\n            contadorBan++\n          }\n        }\n        if (items.UsuarioNotificacionTransaccion[item].TipoTransaccion == 'TRANSFERENCIA') {\n          if (items.UsuarioNotificacionTransaccion[item].id_tipodocumentolote == 1) {\n            setShowTransferenciaPDF(false)\n            contadorTra++\n          }\n          if (items.UsuarioNotificacionTransaccion[item].id_tipodocumentolote == 2) {\n            setShowTransferenciaExcel(false)\n            contadorTra++\n          }\n        }\n        if (items.UsuarioNotificacionTransaccion[item].TipoTransaccion == 'INTERNA') {\n          if (items.UsuarioNotificacionTransaccion[item].id_tipodocumentolote == 1) {\n            setShowInternasPDF(false)\n            contadorInt++\n          }\n          if (items.UsuarioNotificacionTransaccion[item].id_tipodocumentolote == 2) {\n            setShowInternasExcel(false)\n            contadorInt++\n          }\n        }\n      }\n      if (contadorBan == 2) {\n        setShowBancaria(false)\n      }\n      if (contadorTra == 2) {\n        setShowTransferencia(false)\n      }\n      if (contadorInt == 2) {\n        setShowInternas(false)\n      }\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    let result = ''\n    let resultBanc = ''\n    let resultTran = ''\n    let resultInte = ''\n    event.preventDefault()\n    if (showBancaria) {\n      resultBanc = 'BANCARIO'\n      var markedCheckbox = document.getElementsByName('DocumentoBancaria')\n      for (var checkbox of markedCheckbox) {\n        if (checkbox.checked) {\n          resultBanc += ',' + checkbox.value\n        }\n      }\n    }\n    if (showTransferencia) {\n      resultTran = 'TRANSFERENCIA'\n      var markedCheckbox = document.getElementsByName('DocumentoTransferencia')\n      for (var checkbox of markedCheckbox) {\n        if (checkbox.checked) {\n          resultTran += ',' + checkbox.value\n        }\n      }\n    }\n    if (showInternas) {\n      resultInte = 'INTERNA'\n      var markedCheckbox = document.getElementsByName('DocumentoInterna')\n      for (var checkbox of markedCheckbox) {\n        if (checkbox.checked) {\n          resultInte += ',' + checkbox.value\n        }\n      }\n    }\n    if (resultBanc != '') {\n      if (result == '') {\n        result += resultBanc\n      } else {\n        result += '|' + resultBanc\n      }\n    }\n    if (resultTran != '') {\n      if (result == '') {\n        result += resultTran\n      } else {\n        result += '|' + resultTran\n      }\n    }\n    if (resultInte != '') {\n      if (result == '') {\n        result += resultInte\n      } else {\n        result += '|' + resultInte\n      }\n    }\n    if (result !== '') {\n      const respuesta = await postCrudNotificacionLoteUsuario(\n        '',\n        form.id_usuario,\n        '',\n        '',\n        session.id,\n        result,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/notificacionloteusuario')\n      } else if (respuesta === 'Error') {\n        setShow(true)\n        setTitulo('Error!')\n        setMensaje('Error de conexión.')\n      } else if (respuesta === 'Repetidos') {\n        setShow(true)\n        setTitulo('Aviso!')\n        setColor('warning')\n        setMensaje(' Intente de nuevo.')\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has seleccionado ninguna opción.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    return (\n      <div style={{ flexDirection: 'row' }}>\n        <CContainer>\n          <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmación</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                Cancelar\n              </CButton>\n              <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n            <Alert.Heading>{titulo}</Alert.Heading>\n            <p>{mensaje}</p>\n          </Alert>\n          <CCard style={{ display: 'flex', alignItems: 'center' }}>\n            <CCardBody style={{ width: '80%' }}>\n              <CForm style={{ width: '100%' }}>\n                <h1>Agregar configuración de notificación</h1>\n                <p className=\"text-medium-emphasis\">\n                  Agregará a un usuario la configuración para recibir documentos de lotes\n                </p>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiUserPlus />\n                  </CInputGroupText>\n                  <CFormSelect name=\"id_usuario\" onChange={SeleccionUsuario}>\n                    <option value=\"0\">Seleccione un usuario.</option>\n                    {resultsUsuarios.map((item, i) => {\n                      if (item.eliminado == 0 && item.activo == 1) {\n                        return (\n                          <option key={item.id} value={item.id}>\n                            {item.nombre + ' ' + item.apellido + ' [' + item.nombre_usuario + ']'}\n                          </option>\n                        )\n                      }\n                    })}\n                  </CFormSelect>\n                </CInputGroup>\n                <hr />\n                <div className={!showBancaria ? 'd-none' : ''}>\n                  <h3>BANCARIA</h3>\n                  <CFormCheck\n                    className={!showBancariaPDF ? 'd-none' : ''}\n                    value=\"1\"\n                    type=\"checkbox\"\n                    name=\"DocumentoBancaria\"\n                    label=\"PDF\"\n                  />\n                  <CFormCheck\n                    className={!showBancariaExcel ? 'd-none' : ''}\n                    value=\"2\"\n                    type=\"checkbox\"\n                    name=\"DocumentoBancaria\"\n                    label=\"Excel\"\n                  />\n                  <hr />\n                </div>\n                <div className={!showTransferencia ? 'd-none' : ''}>\n                  <h3>TRANSFERENCIA</h3>\n                  <CFormCheck\n                    className={!showTransferenciaPDF ? 'd-none' : ''}\n                    value=\"1\"\n                    type=\"checkbox\"\n                    name=\"DocumentoTransferencia\"\n                    label=\"PDF\"\n                  />\n                  <CFormCheck\n                    className={!showTransferenciaExcel ? 'd-none' : ''}\n                    value=\"2\"\n                    type=\"checkbox\"\n                    name=\"DocumentoTransferencia\"\n                    label=\"Excel\"\n                  />\n                  <hr />\n                </div>\n                <div className={!showInternas ? 'd-none' : ''}>\n                  <h3>INTERNA</h3>\n                  <CFormCheck\n                    className={!showInternasPDF ? 'd-none' : ''}\n                    value=\"1\"\n                    type=\"checkbox\"\n                    name=\"DocumentoInterna\"\n                    label=\"PDF\"\n                  />\n                  <CFormCheck\n                    className={!showInternasExcel ? 'd-none' : ''}\n                    value=\"2\"\n                    type=\"checkbox\"\n                    name=\"DocumentoInterna\"\n                    label=\"Excel\"\n                  />\n                  <hr />\n                </div>\n                <CButton color=\"primary\" onClick={handleSubmit}>\n                  Guardar Cambios\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CContainer>\n      </div>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default NuevoNotificacionLoteUsuario\n"],"sourceRoot":""}