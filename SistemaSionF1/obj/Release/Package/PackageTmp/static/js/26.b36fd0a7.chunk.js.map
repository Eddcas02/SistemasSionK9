{"version":3,"sources":["services/getBancos.js","services/getMonedas.js","services/postCrudCuentas.js","views/components/flujos/cuentas/EditarCuentas.js"],"names":["API","process","getBancos","idBanco","Nombre","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","getMonedas","idMoneda","postCrudCuentas","idCuenta","numeroCuenta","nombre","idEmpresa","codigoACH","opcion","id_usuario","datos","id_cuenta","numero_cuenta","id_empresa","id_banco","id_moneda","codigo_ach","data","JSON","stringify","body","EditarBancos","props","history","useHistory","location","useLocation","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","results","setList","results1","setList1","useEffect","mounted","api_token","items","bancos","monedas","form","setValues","handleInput","event","target","name","value","handleSubmit","async","preventDefault","id","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","color","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","type","placeholder","onChange","defaultValue","map","item","i","eliminado","activo"],"mappings":"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","file":"static/js/26.b36fd0a7.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}bancos`\n\nexport function getBancos(idBanco, Nombre, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idBanco !== null) {\n    ApiWhere += '/' + idBanco\n  }\n  if (Nombre !== null) {\n    ApiWhere += '/' + Nombre\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}monedas`\n\nexport function getMonedas(idMoneda, Nombre, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idMoneda !== null) {\n    ApiWhere += '/' + idMoneda\n  }\n  if (Nombre !== null) {\n    ApiWhere += '/' + Nombre\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}cuentas`\n\nexport function postCrudCuentas(\n  idCuenta,\n  numeroCuenta,\n  nombre,\n  idEmpresa,\n  idBanco,\n  idMoneda,\n  codigoACH,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_cuenta: idCuenta,\n    numero_cuenta: numeroCuenta,\n    nombre: nombre,\n    id_empresa: idEmpresa,\n    id_banco: idBanco,\n    id_moneda: idMoneda,\n    codigo_ach: codigoACH,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idCuenta !== '' && opcion !== '') {\n    ApiWhere += '/' + idCuenta + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { postCrudCuentas } from '../../../../services/postCrudCuentas'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getBancos } from '../../../../services/getBancos'\nimport { getMonedas } from '../../../../services/getMonedas'\nimport { FiCreditCard } from 'react-icons/fi'\nimport { RiBankLine } from 'react-icons/ri'\nimport { FaRegBuilding, FaArrowLeft } from 'react-icons/fa'\nimport { MdAttachMoney } from 'react-icons/md'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormControl,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\n\nconst EditarBancos = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [results, setList] = useState([])\n  const [results1, setList1] = useState([])\n\n  useEffect(() => {\n    let mounted = true\n    getBancos(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.bancos)\n      }\n    })\n    getMonedas(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList1(items.monedas)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  const [form, setValues] = useState({\n    numero_cuenta: location.numero_cuenta,\n    nombre: location.nombre,\n    id_empresa: location.id_empresa,\n    id_banco: location.id_banco,\n    id_moneda: location.id_moneda,\n    codigo_ach: location.codigo_ach,\n  })\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (\n      form.numero_cuenta !== '' &&\n      form.nombre !== '' &&\n      form.id_empresa !== '' &&\n      form.id_banco !== '' &&\n      form.id_moneda !== '' &&\n      form.codigo_ach !== ''\n    ) {\n      event.preventDefault()\n      const respuesta = await postCrudCuentas(\n        location.id_cuenta,\n        form.numero_cuenta,\n        form.nombre,\n        form.id_empresa,\n        form.id_banco,\n        form.id_moneda,\n        form.codigo_ach,\n        '1',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/cuentas')\n      }\n    } else {\n      setShow(true)\n      setMensaje('No has llenado todos los campos.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    if (location.id_cuenta) {\n      return (\n        <div style={{ flexDirection: 'row' }}>\n          <CContainer>\n            <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Confirmación</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{mensaje}</Modal.Body>\n              <Modal.Footer>\n                <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                  Cancelar\n                </CButton>\n                <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                  Aceptar\n                </CButton>\n              </Modal.Footer>\n            </Modal>\n            <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n              <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n                <FaArrowLeft />\n                &nbsp;&nbsp;Regresar\n              </Button>\n            </div>\n            <br />\n            <br />\n            <Alert show={show} variant=\"danger\" onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>Error!</Alert.Heading>\n              <p>{mensaje}</p>\n            </Alert>\n            <CCard style={{ display: 'flex', alignItems: 'center' }}>\n              <CCardBody style={{ width: '80%' }}>\n                <CForm style={{ width: '100%' }}>\n                  <h1>Modificación de Cuenta</h1>\n                  <p className=\"text-medium-emphasis\">Modifique la información de la cuenta</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiCreditCard />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Nombre Cuenta\"\n                      name=\"numero_cuenta\"\n                      onChange={handleInput}\n                      defaultValue={location.numero_cuenta}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiCreditCard />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Nombre\"\n                      name=\"nombre\"\n                      onChange={handleInput}\n                      defaultValue={location.nombre}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FaRegBuilding />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Código Empresa\"\n                      name=\"id_empresa\"\n                      onChange={handleInput}\n                      defaultValue={location.id_empresa}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <RiBankLine />\n                    </CInputGroupText>\n                    <CFormSelect name=\"id_banco\" onChange={handleInput}>\n                      <option>Seleccione un banco. (Opcional)</option>\n                      {results.map((item, i) => {\n                        if (item.eliminado == 0 && item.activo == 1) {\n                          return (\n                            <option key={item.id_banco} value={item.id_banco}>\n                              {item.nombre}\n                            </option>\n                          )\n                        }\n                      })}\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <MdAttachMoney />\n                    </CInputGroupText>\n                    <CFormSelect name=\"id_moneda\" onChange={handleInput}>\n                      <option>Seleccione un tipo de moneda. (Opcional)</option>\n                      {results1.map((item, i) => {\n                        if (item.eliminado == 0 && item.activo == 1) {\n                          return (\n                            <option key={item.id_moneda} value={item.id_moneda}>\n                              {item.nombre}\n                            </option>\n                          )\n                        }\n                      })}\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <FiCreditCard />\n                    </CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      placeholder=\"Código ACH\"\n                      name=\"codigo_ach\"\n                      onChange={handleInput}\n                      defaultValue={location.codigo_ach}\n                    />\n                  </CInputGroup>\n                  <CButton color=\"primary\" onClick={handleSubmit}>\n                    Guardar Cambios\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CContainer>\n        </div>\n      )\n    } else {\n      history.push('/cuentas')\n      return (\n        <div className=\"sin-sesion\">\n          NO SE CARGÓ EL CÓDIGO DEL USUARIO. REGRESE A LA PANTALLA DE USUARIOS.\n        </div>\n      )\n    }\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default EditarBancos\n"],"sourceRoot":""}