{"version":3,"sources":["services/getEstadosFlujo.js","services/postEstadoFlujo.js","views/components/flujos/estadoflujo/NuevoEstadoFlujo.js"],"names":["API","process","getEstadosFlujo","idEstado","descripcion","token","ApiFinal","ApiWhere","length","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","postEstadoFlujo","idEstadoPadre","estado","opcion","id_usuario","datos","id_estadoflujo","id_estadoflujopadre","activo","data","JSON","stringify","body","NuevoEstadoFlujo","history","useHistory","time","setTime","useState","session","clear","useSession","show","setShow","showM","setShowM","mensaje","setMensaje","color","setColor","titulo","setTitulo","results","setList","form","setValues","flujopadre","useEffect","mounted","api_token","items","estados","handleInput","event","target","name","value","handleSubmit","async","preventDefault","id","push","Cancelar","idUsuario","postSesionUsuario","style","flexDirection","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","onClick","className","marginBottom","size","goBack","onClose","dismissible","Heading","display","alignItems","width","placeholder","rows","onChange","map","item","i","eliminado"],"mappings":"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","file":"static/js/40.a7f10c69.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}estadoflujo`\n\nexport function getEstadosFlujo(idEstado, descripcion, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (idEstado !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&id_estadoflujo=' + idEstado\n    } else {\n      ApiWhere += '?id_estadoflujo=' + idEstado\n    }\n  }\n  if (descripcion !== null) {\n    if (ApiWhere.length > 0) {\n      ApiWhere += '&descripcion=' + descripcion\n    } else {\n      ApiWhere += '?descripcion=' + descripcion\n    }\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","const API = `${process.env.REACT_APP_API_URL}estadoflujo`\n\nexport function postEstadoFlujo(\n  idEstado,\n  idEstadoPadre,\n  descripcion,\n  estado,\n  opcion,\n  id_usuario,\n  token,\n) {\n  let ApiFinal = API\n  let ApiWhere = ''\n\n  var datos = {\n    id_estadoflujo: idEstado,\n    id_estadoflujopadre: idEstadoPadre,\n    descripcion: descripcion,\n    activo: estado,\n    opcion: opcion,\n    id_usuario: id_usuario,\n  }\n\n  if (idEstado !== '' && opcion !== '') {\n    ApiWhere += '/' + idEstado + '/' + opcion\n  }\n  ApiFinal += ApiWhere\n\n  const data = JSON.stringify(datos)\n  return fetch(ApiFinal, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      return response\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSession } from 'react-use-session'\nimport { Alert, Modal, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { FiGrid, FiSettings } from 'react-icons/fi'\nimport { postEstadoFlujo } from '../../../../services/postEstadoFlujo'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getEstadosFlujo } from '../../../../services/getEstadosFlujo'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n} from '@coreui/react'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst NuevoEstadoFlujo = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [show, setShow] = useState(false)\n  const [showM, setShowM] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n  const [color, setColor] = useState('danger')\n  const [titulo, setTitulo] = useState('Error!')\n  const [results, setList] = useState([])\n\n  const [form, setValues] = useState({\n    flujopadre: '0',\n    descripcion: '',\n  })\n\n  useEffect(() => {\n    let mounted = true\n    getEstadosFlujo(null, null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.estados)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  const handleInput = (event) => {\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    if (form.descripcion !== '') {\n      event.preventDefault()\n      const respuesta = await postEstadoFlujo(\n        '',\n        form.flujopadre,\n        form.descripcion,\n        '',\n        '3',\n        session.id,\n        session.api_token,\n      )\n      if (respuesta === 'OK') {\n        history.push('/estadosflujo')\n      }\n    } else {\n      setShow(true)\n      setTitulo('Error!')\n      setColor('danger')\n      setMensaje('No has llenado todos los campos.')\n    }\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShowM(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n\n  if (session) {\n    return (\n      <div style={{ flexDirection: 'row' }}>\n        <CContainer>\n          <Modal responsive variant=\"primary\" show={showM} onHide={() => Cancelar(2)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Confirmaci√≥n</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{mensaje}</Modal.Body>\n            <Modal.Footer>\n              <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n                Cancelar\n              </CButton>\n              <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n                Aceptar\n              </CButton>\n            </Modal.Footer>\n          </Modal>\n          <div className=\"float-left\" style={{ marginBottom: '10px' }}>\n            <Button variant=\"primary\" size=\"sm\" onClick={() => history.goBack()}>\n              <FaArrowLeft />\n              &nbsp;&nbsp;Regresar\n            </Button>\n          </div>\n          <br />\n          <br />\n          <Alert show={show} variant={color} onClose={() => setShow(false)} dismissible>\n            <Alert.Heading>{titulo}</Alert.Heading>\n            <p>{mensaje}</p>\n          </Alert>\n          <CCard style={{ display: 'flex', alignItems: 'center' }}>\n            <CCardBody style={{ width: '80%' }}>\n              <CForm style={{ width: '100%' }}>\n                <h1>Creaci√≥n de Estado de Flujo</h1>\n                <p className=\"text-medium-emphasis\">Cree un nuevo estado de flujo</p>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiGrid />\n                  </CInputGroupText>\n                  <textarea\n                    placeholder=\"Descripci√≥n\"\n                    name=\"descripcion\"\n                    className=\"form-control\"\n                    rows=\"2\"\n                    onChange={handleInput}\n                  ></textarea>\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText>\n                    <FiSettings />\n                  </CInputGroupText>\n                  <CFormSelect name=\"flujopadre\" onChange={handleInput}>\n                    <option>Seleccione un estado superior. (Opcional)</option>\n                    {results.map((item, i) => {\n                      if (item.eliminado == 0 && item.activo == 1) {\n                        return (\n                          <option key={item.id_estadoflujo} value={item.id_estadoflujo}>\n                            {item.descripcion}\n                          </option>\n                        )\n                      }\n                    })}\n                  </CFormSelect>\n                </CInputGroup>\n                <CButton color=\"primary\" onClick={handleSubmit}>\n                  Crear Estado\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CContainer>\n      </div>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESI√ìN ACTIVA.</div>\n  }\n}\n\nexport default NuevoEstadoFlujo\n"],"sourceRoot":""}