{"version":3,"sources":["services/getSesionUsuario.js","views/components/usuarios/conectados/Conectados.js","views/components/usuarios/conectados/General.js","views/components/usuarios/conectados/TabSesiones.js"],"names":["API","process","getSesionUsuario","IdUsuario","token","ApiFinal","ApiWhere","fetch","method","headers","Authorization","Accept","then","response","json","catch","error","getSesionUsuarioGeneral","Conectados","history","useHistory","time","setTime","useState","session","clear","useSession","results","setList","permisos","setPermisos","show","setShow","mensaje","setMensaje","ExistePermiso","objeto","result","item","async","Cancelar","opcion","idUsuario","id","postSesionUsuario","api_token","push","useEffect","mounted","items","sesiones","getPerfilUsuario","detalle","customStyles","headRow","style","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","paddingLeft","paddingRight","fontSize","borderRightStyle","borderRightWidth","borderRightColor","cells","columns","useMemo","name","selector","row","NombreUsuario","center","sortable","wrap","IPAddress","Navegador","FechaHoraInicio","cell","deshabilitar","color","size","title","disabled","onClick","pathname","width","tableData","data","filterPlaceholder","export","print","Modal","responsive","variant","onHide","centered","Header","closeButton","Title","Body","Footer","noDataComponent","pagination","paginationPerPage","persistTableHead","striped","dense","className","General","TabSesiones","Tabs","defaultActiveKey","Tab","eventKey","tipo"],"mappings":"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","file":"static/js/74.062737a5.chunk.js","sourcesContent":["const API = `${process.env.REACT_APP_API_URL}sesionusuario`\n\nexport function getSesionUsuario(IdUsuario, token) {\n  let ApiFinal = API\n  let ApiWhere = ''\n  if (IdUsuario !== null) {\n    ApiWhere += '/' + IdUsuario\n  }\n  ApiFinal += ApiWhere\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n\nexport function getSesionUsuarioGeneral(token) {\n  let ApiFinal = `${process.env.REACT_APP_API_URL}sesionusuariogeneral`\n  return fetch(ApiFinal, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      Accept: 'application/json',\n    },\n  })\n    .then(function (response) {\n      return response.json()\n    })\n    .catch((error) => error)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getSesionUsuario } from '../../../../services/getSesionUsuario'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { useSession } from 'react-use-session'\nimport { FaList } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst Conectados = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Conectados'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getSesionUsuario(null, session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.sesiones)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = false\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = true\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Usuario',\n      selector: (row) => row.NombreUsuario,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'IP',\n      selector: (row) => row.IPAddress,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n    },\n    {\n      name: 'Navegador',\n      selector: (row) => row.Navegador,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n    },\n    {\n      name: 'Hora Inicio',\n      selector: (row) => row.FechaHoraInicio,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (!ExistePermiso('Modulo Conectados')) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"primary\"\n              size=\"sm\"\n              title=\"Histórico Usuario\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/conectados/historico',\n                  IdUsuario: row.IdUsuario,\n                  NombreUsuario: row.NombreUsuario,\n                })\n              }\n            >\n              <FaList />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (!ExistePermiso('Modulo Conectados')) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(2)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n              Cancelar\n            </CButton>\n            <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay registros que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default Conectados\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useIdleTimer } from 'react-idle-timer'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport { getSesionUsuarioGeneral } from '../../../../services/getSesionUsuario'\nimport { getPerfilUsuario } from '../../../../services/getPerfilUsuario'\nimport { useSession } from 'react-use-session'\nimport { FaList } from 'react-icons/fa'\nimport '../../../../scss/estilos.scss'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport DataTable, { defaultThemes } from 'react-data-table-component'\nimport DataTableExtensions from 'react-data-table-component-extensions'\nimport 'react-data-table-component-extensions/dist/index.css'\n\nconst General = () => {\n  const history = useHistory()\n  const [time, setTime] = useState(null)\n  const { session, clear } = useSession('PendrogonIT-Session')\n  const [results, setList] = useState([])\n  const [permisos, setPermisos] = useState([])\n  const [show, setShow] = useState(false)\n  const [mensaje, setMensaje] = useState('')\n\n  useEffect(() => {\n    let mounted = true\n    let objeto = 'Modulo Conectados'\n    let idUsuario = 0\n    if (session) {\n      idUsuario = session.id\n    }\n    getSesionUsuarioGeneral(session.api_token).then((items) => {\n      if (mounted) {\n        setList(items.sesiones)\n      }\n    })\n    getPerfilUsuario(idUsuario, '2', objeto, session.api_token).then((items) => {\n      if (mounted) {\n        setPermisos(items.detalle)\n      }\n    })\n    return () => (mounted = false)\n  }, [])\n\n  function ExistePermiso(objeto) {\n    let result = false\n    for (let item of permisos) {\n      if (objeto === item.objeto) {\n        result = true\n      }\n    }\n    return result\n  }\n\n  async function Cancelar(opcion) {\n    if (opcion == 1) {\n      setShow(false)\n    } else if (opcion == 2) {\n      let idUsuario = 0\n      if (session) {\n        idUsuario = session.id\n      }\n      const respuesta = await postSesionUsuario(idUsuario, null, null, '2', session.api_token)\n      if (respuesta === 'OK') {\n        clear()\n        history.push('/')\n      }\n    }\n  }\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: defaultThemes.default.divider.default,\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '8px', // override the cell padding for head cells\n        paddingRight: '8px',\n        fontSize: '12px',\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n    cells: {\n      style: {\n        '&:not(:last-of-type)': {\n          borderRightStyle: 'solid',\n          borderRightWidth: '1px',\n          borderRightColor: defaultThemes.default.divider.default,\n        },\n      },\n    },\n  }\n  const columns = useMemo(() => [\n    {\n      name: 'Usuario',\n      selector: (row) => row.NombreUsuario,\n      center: true,\n      style: {\n        fontSize: '11px',\n      },\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: 'Última Inicio',\n      selector: (row) => row.FechaHoraInicio,\n      center: true,\n      sortable: true,\n      style: {\n        fontSize: '11px',\n      },\n      wrap: true,\n    },\n    {\n      name: 'Acciones',\n      cell: function OrderItems(row) {\n        let deshabilitar = false\n        if (!ExistePermiso('Modulo Conectados')) {\n          deshabilitar = true\n        }\n        return (\n          <div>\n            <CButton\n              color=\"primary\"\n              size=\"sm\"\n              title=\"Histórico Usuario\"\n              disabled={deshabilitar}\n              onClick={() =>\n                history.push({\n                  pathname: '/conectados/historico',\n                  IdUsuario: row.IdUsuario,\n                  NombreUsuario: row.NombreUsuario,\n                })\n              }\n            >\n              <FaList />\n            </CButton>\n          </div>\n        )\n      },\n      center: true,\n      width: '200px',\n    },\n  ])\n  const tableData = {\n    columns,\n    data: results,\n    filterPlaceholder: 'Filtrar datos',\n    export: false,\n    print: false,\n  }\n\n  if (session) {\n    let deshabilitar = false\n    if (!ExistePermiso('Modulo Conectados')) {\n      deshabilitar = true\n    }\n    return (\n      <>\n        <Modal responsive variant=\"primary\" show={show} onHide={() => Cancelar(2)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmación</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{mensaje}</Modal.Body>\n          <Modal.Footer>\n            <CButton color=\"secondary\" onClick={() => Cancelar(2)}>\n              Cancelar\n            </CButton>\n            <CButton color=\"primary\" onClick={() => Cancelar(1)}>\n              Aceptar\n            </CButton>\n          </Modal.Footer>\n        </Modal>\n        <DataTableExtensions {...tableData}>\n          <DataTable\n            columns={columns}\n            noDataComponent=\"No hay registros que mostrar\"\n            data={results}\n            customStyles={customStyles}\n            pagination\n            paginationPerPage={25}\n            responsive={true}\n            persistTableHead\n            striped={true}\n            dense\n          />\n        </DataTableExtensions>\n      </>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default General\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Tab, Tabs } from 'react-bootstrap'\nimport Conectados from './Conectados'\nimport General from './General'\nimport { useSession } from 'react-use-session'\nimport { postSesionUsuario } from '../../../../services/postSesionUsuario'\nimport '../../../../scss/estilos.scss'\n\nconst TabSesiones = () => {\n  const history = useHistory()\n  const { session, clear } = useSession('PendrogonIT-Session')\n\n  if (session) {\n    return (\n      <div className=\"div-tabs\">\n        <div className=\"div-content\">\n          <div style={{ width: '100%' }}>\n            <Tabs defaultActiveKey=\"Conectados\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n              <Tab eventKey=\"Conectados\" title=\"Conectados\">\n                <Conectados />\n              </Tab>\n              <Tab eventKey=\"General\" title=\"General\">\n                <General tipo={'General'} />\n              </Tab>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    history.push('/')\n    return <div className=\"sin-sesion\">SIN SESIÓN ACTIVA.</div>\n  }\n}\n\nexport default TabSesiones\n"],"sourceRoot":""}